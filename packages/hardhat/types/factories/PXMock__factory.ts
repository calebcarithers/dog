/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMock, PXMockInterface } from "../PXMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_DEV_",
        type: "address",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_PLEASR_",
        type: "address",
      },
    ],
    name: "__PXMock_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_DEV_",
        type: "address",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_PLEASR_",
        type: "address",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "puppers",
        type: "uint256[]",
      },
    ],
    name: "burnPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff168061002a575060005460ff16155b6100915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100b3576000805461ffff19166101011790555b80156100c5576000805461ff00191690555b5061262980620000d66000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806395d89b411161010f578063b807f857116100a2578063dbddb26a11610071578063dbddb26a146103db578063e4e4dc42146103e3578063e985e9c5146103f6578063fc784d491461043257600080fd5b8063b807f8571461039a578063b88d4fde146103ad578063bcb00f29146103c0578063c87b56dd146103c857600080fd5b8063a6053eb5116100de578063a6053eb514610358578063a739d6441461036b578063b43ff0f01461037e578063b78a7d721461038757600080fd5b806395d89b411461032b57806397b874f714610333578063a035386d1461033c578063a22cb4651461034557600080fd5b8063199f90a6116101875780636352211e116101565780636352211e146102dc578063690c9f43146102ef57806370a08231146102f857806379d90b171461030b57600080fd5b8063199f90a61461029a57806323b872dd146102ad57806342842e0e146102c05780635d29904e146102d357600080fd5b8063081812fc116101c3578063081812fc1461023e578063095ea7b314610269578063109429901461027e57806318160ddd1461029157600080fd5b806301ffc9a7146101ea578063055fa0d51461021257806306fdde0314610229575b600080fd5b6101fd6101f8366004612150565b610445565b60405190151581526020015b60405180910390f35b61021b60985481565b604051908152602001610209565b610231610497565b60405161020991906123b2565b61025161024c366004612252565b610529565b6040516001600160a01b039091168152602001610209565b61027c610277366004612063565b6105c3565b005b61027c61028c36600461208c565b6106d9565b61021b60995481565b61027c6102a8366004612188565b610781565b61027c6102bb366004611f79565b6108bf565b61027c6102ce366004611f79565b6108f0565b61021b60a05481565b6102516102ea366004612252565b61090b565b61021b609f5481565b61021b610306366004611f2d565b610982565b61031e610319366004612252565b610a09565b6040516102099190612381565b610231610a58565b61021b609e5481565b61021b609c5481565b61027c61035336600461202d565b610a67565b61027c610366366004612252565b610a76565b61027c610379366004612188565b610c9b565b61021b609d5481565b609754610251906001600160a01b031681565b61027c6103a8366004612252565b609c55565b61027c6103bb366004611fb4565b610d1e565b61021b610d56565b6102316103d6366004612252565b610e61565b610231610f71565b61021b6103f1366004612252565b610fff565b6101fd610404366004611f47565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61027c61044036600461226a565b61100f565b60006001600160e01b031982166380ac58cd60e01b148061047657506001600160e01b03198216635b5e139f60e01b145b8061049157506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546104a690612523565b80601f01602080910402602001604051908101604052809291908181526020018280546104d290612523565b801561051f5780601f106104f45761010080835404028352916020019161051f565b820191906000526020600020905b81548152906001019060200180831161050257829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166105a75760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105ce8261090b565b9050806001600160a01b0316836001600160a01b0316141561063c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161059e565b336001600160a01b038216148061065857506106588133610404565b6106ca5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161059e565b6106d4838361102f565b505050565b600081511161071a5760405162461bcd60e51b815260206004820152600d60248201526c456d707479207075707065727360981b604482015260640161059e565b60005b81518110156107665761075682828151811061074957634e487b7160e01b600052603260045260246000fd5b602002602001015161109d565b61075f8161255e565b905061071d565b5061077e609c54825161077991906124c1565b6111bb565b50565b600054610100900460ff168061079a575060005460ff16155b6107b65760405162461bcd60e51b815260040161059e906123c5565b600054610100900460ff161580156107d8576000805461ffff19166101011790555b6107e289896113d1565b6001600160a01b0387166107f557600080fd5b609780546001600160a01b0319166001600160a01b038916179055690bb28f98c1e0715ce000609c55620f4240609d556000609e55609f85905560a084905561083e84866124c1565b60995560a054609f5461085191906124c1565b60985585516108679060a1906020890190611ddc565b5060a280546001600160a01b038086166001600160a01b03199283161790925560a3805492851692909116919091179055602860a455603c60a55580156108b4576000805461ff00191690555b505050505050505050565b6108c93382611458565b6108e55760405162461bcd60e51b815260040161059e90612413565b6106d483838361154b565b6106d483838360405180602001604052806000815250610d1e565b6000818152606760205260408120546001600160a01b0316806104915760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161059e565b60006001600160a01b0382166109ed5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161059e565b506001600160a01b031660009081526068602052604090205490565b610a11611e60565b6000609d5483610a2191906124e0565b90506040518060400160405280609f5483610a3c9190612579565b8152602001609f5483610a4f91906124ad565b90529392505050565b6060606680546104a690612523565b610a723383836116eb565b5050565b60008111610abe5760405162461bcd60e51b81526020600482015260156024820152744e6f6e20706f736974697665207175616e7469747960581b604482015260640161059e565b609854811115610b075760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b604482015260640161059e565b60005b81811015610bf2576000610b1f6098546117ba565b609d54610b2c9190612495565b609e546000828152609a60205260409020549192501415610b59576000818152609a602052604090208190555b60006001609854609d54610b6d9190612495565b610b7791906124e0565b609e546000828152609a60205260409020549192501415610ba4576000818152609a602052604090208190555b6000828152609a602090815260408083208054858552828520805490925590819055808452609b909252909120829055610bde33826117cf565b50505080610beb9061255e565b9050610b0a565b506097546001600160a01b03166323b872dd3330609c5485610c1491906124c1565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b158015610c6357600080fd5b505af1158015610c77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a729190612134565b600054610100900460ff1680610cb4575060005460ff16155b610cd05760405162461bcd60e51b815260040161059e906123c5565b600054610100900460ff16158015610cf2576000805461ffff19166101011790555b610d028989898989898989610781565b80156108b4576000805461ff0019169055505050505050505050565b610d283383611458565b610d445760405162461bcd60e51b815260040161059e90612413565b610d50848484846117f5565b50505050565b6000806098544342610d653390565b604051602001610d8d919060609190911b6bffffffffffffffffffffffff1916815260140190565b6040516020818303038152906040528051906020012060001c610db091906124ad565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610df591906124ad565b610dff4442612495565b610e099190612495565b610e139190612495565b610e1d9190612495565b610e279190612495565b610e319190612495565b604051602001610e4391815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610ee05760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161059e565b6000610eea611873565b90506000611388609d5485610eff91906124e0565b610f0991906124ad565b610f14906001612495565b90506000825111610f345760405180602001604052806000815250610f69565b81610f3e82611882565b610f4786611882565b604051602001610f59939291906122b7565b6040516020818303038152906040525b949350505050565b60a18054610f7e90612523565b80601f0160208091040260200160405190810160405280929190818152602001828054610faa90612523565b8015610ff75780601f10610fcc57610100808354040283529160200191610ff7565b820191906000526020600020905b815481529060010190602001808311610fda57829003601f168201915b505050505081565b6000609d548261049191906124e0565b600061101b82846124c1565b609881905560995550609f9190915560a055565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906110648261090b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b609e548114156110e15760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b604482015260640161059e565b336110eb8261090b565b6001600160a01b0316146111375760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b604482015260640161059e565b6000818152609b6020526040812054609854609d549192916111599190612495565b6000818152609a602081815260408084208054898652609b8452828620879055808652828620899055888652939092528320829055838352869055609880549394509092600192906111ac908490612495565b90915550610d5090508461199c565b600060648060a454846111ce91906124c1565b6111d891906124ad565b6111e291906124ad565b9050600060648060a554856111f791906124c1565b61120191906124ad565b61120b91906124ad565b905060008161121a84866124e0565b61122491906124e0565b60975460a25460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101879052929350169063a9059cbb90604401602060405180830381600087803b15801561127657600080fd5b505af115801561128a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ae9190612134565b5060975460a35460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b1580156112ff57600080fd5b505af1158015611313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113379190612134565b506097546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b15801561139257600080fd5b505af11580156113a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ca9190612134565b5050505050565b600054610100900460ff16806113ea575060005460ff16155b6114065760405162461bcd60e51b815260040161059e906123c5565b600054610100900460ff16158015611428576000805461ffff19166101011790555b611430611a37565b611438611a37565b6114428383611aa2565b80156106d4576000805461ff0019169055505050565b6000818152606760205260408120546001600160a01b03166114d15760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161059e565b60006114dc8361090b565b9050806001600160a01b0316846001600160a01b031614806115175750836001600160a01b031661150c84610529565b6001600160a01b0316145b80610f6957506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff16610f69565b826001600160a01b031661155e8261090b565b6001600160a01b0316146115c65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161059e565b6001600160a01b0382166116285760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161059e565b61163360008261102f565b6001600160a01b038316600090815260686020526040812080546001929061165c9084906124e0565b90915550506001600160a01b038216600090815260686020526040812080546001929061168a908490612495565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b0316141561174d5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161059e565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000816117c5610d56565b6104919190612579565b6117d98282611b37565b6001609860008282546117ec91906124e0565b90915550505050565b61180084848461154b565b61180c84848484611c79565b610d505760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161059e565b606060a180546104a690612523565b6060816118a65750506040805180820190915260018152600360fc1b602082015290565b8160005b81156118d057806118ba8161255e565b91506118c99050600a836124ad565b91506118aa565b60008167ffffffffffffffff8111156118f957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611923576020820181803683370190505b5090505b8415610f69576119386001836124e0565b9150611945600a86612579565b611950906030612495565b60f81b81838151811061197357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611995600a866124ad565b9450611927565b60006119a78261090b565b90506119b460008361102f565b6001600160a01b03811660009081526068602052604081208054600192906119dd9084906124e0565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff1680611a50575060005460ff16155b611a6c5760405162461bcd60e51b815260040161059e906123c5565b600054610100900460ff16158015611a8e576000805461ffff19166101011790555b801561077e576000805461ff001916905550565b600054610100900460ff1680611abb575060005460ff16155b611ad75760405162461bcd60e51b815260040161059e906123c5565b600054610100900460ff16158015611af9576000805461ffff19166101011790555b8251611b0c906065906020860190611ddc565b508151611b20906066906020850190611ddc565b5080156106d4576000805461ff0019169055505050565b6001600160a01b038216611b8d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161059e565b6000818152606760205260409020546001600160a01b031615611bf25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161059e565b6001600160a01b0382166000908152606860205260408120805460019290611c1b908490612495565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b15611dd157604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611cbd903390899088908890600401612344565b602060405180830381600087803b158015611cd757600080fd5b505af1925050508015611d07575060408051601f3d908101601f19168201909252611d049181019061216c565b60015b611db7573d808015611d35576040519150601f19603f3d011682016040523d82523d6000602084013e611d3a565b606091505b508051611daf5760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e7465720000000000000000606482015260840161059e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f69565b506001949350505050565b828054611de890612523565b90600052602060002090601f016020900481019282611e0a5760008555611e50565b82601f10611e2357805160ff1916838001178555611e50565b82800160010185558215611e50579182015b82811115611e50578251825591602001919060010190611e35565b50611e5c929150611e7e565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115611e5c5760008155600101611e7f565b600067ffffffffffffffff831115611ead57611ead6125b9565b611ec0601f8401601f1916602001612464565b9050828152838383011115611ed457600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b0381168114611f0257600080fd5b919050565b600082601f830112611f17578081fd5b611f2683833560208501611e93565b9392505050565b600060208284031215611f3e578081fd5b611f2682611eeb565b60008060408385031215611f59578081fd5b611f6283611eeb565b9150611f7060208401611eeb565b90509250929050565b600080600060608486031215611f8d578081fd5b611f9684611eeb565b9250611fa460208501611eeb565b9150604084013590509250925092565b60008060008060808587031215611fc9578081fd5b611fd285611eeb565b9350611fe060208601611eeb565b925060408501359150606085013567ffffffffffffffff811115612002578182fd5b8501601f81018713612012578182fd5b61202187823560208401611e93565b91505092959194509250565b6000806040838503121561203f578182fd5b61204883611eeb565b91506020830135612058816125cf565b809150509250929050565b60008060408385031215612075578182fd5b61207e83611eeb565b946020939093013593505050565b6000602080838503121561209e578182fd5b823567ffffffffffffffff808211156120b5578384fd5b818501915085601f8301126120c8578384fd5b8135818111156120da576120da6125b9565b8060051b91506120eb848301612464565b8181528481019084860184860187018a1015612105578788fd5b8795505b83861015612127578035835260019590950194918601918601612109565b5098975050505050505050565b600060208284031215612145578081fd5b8151611f26816125cf565b600060208284031215612161578081fd5b8135611f26816125dd565b60006020828403121561217d578081fd5b8151611f26816125dd565b600080600080600080600080610100898b0312156121a4578384fd5b883567ffffffffffffffff808211156121bb578586fd5b6121c78c838d01611f07565b995060208b01359150808211156121dc578586fd5b6121e88c838d01611f07565b98506121f660408c01611eeb565b975060608b013591508082111561220b578586fd5b506122188b828c01611f07565b9550506080890135935060a0890135925061223560c08a01611eeb565b915061224360e08a01611eeb565b90509295985092959890939650565b600060208284031215612263578081fd5b5035919050565b6000806040838503121561227c578182fd5b50508035926020909101359150565b600081518084526122a38160208601602086016124f7565b601f01601f19169290920160200192915050565b600084516122c98184602089016124f7565b6a0dacae8c2c8c2e8c25ae6d60ab1b90830190815284516122f181600b8401602089016124f7565b602f60f81b600b9290910191820152686d657461646174612d60b81b600c82015283516123258160158401602088016124f7565b64173539b7b760d91b60159290910191820152601a0195945050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906123779083018461228b565b9695505050505050565b60408101818360005b60028110156123a957815183526020928301929091019060010161238a565b50505092915050565b602081526000611f26602083018461228b565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561248d5761248d6125b9565b604052919050565b600082198211156124a8576124a861258d565b500190565b6000826124bc576124bc6125a3565b500490565b60008160001904831182151516156124db576124db61258d565b500290565b6000828210156124f2576124f261258d565b500390565b60005b838110156125125781810151838201526020016124fa565b83811115610d505750506000910152565b600181811c9082168061253757607f821691505b6020821081141561255857634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156125725761257261258d565b5060010190565b600082612588576125886125a3565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461077e57600080fd5b6001600160e01b03198116811461077e57600080fdfea26469706673582212204e3ddc77513c870fc10233d006819ed39ba529286c277874e5fe83cd1074fed464736f6c63430008040033";

type PXMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMock__factory extends ContractFactory {
  constructor(...args: PXMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMock> {
    return super.deploy(overrides || {}) as Promise<PXMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PXMock {
    return super.attach(address) as PXMock;
  }
  connect(signer: Signer): PXMock__factory {
    return super.connect(signer) as PXMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockInterface {
    return new utils.Interface(_abi) as PXMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PXMock {
    return new Contract(address, _abi, signerOrProvider) as PXMock;
  }
}
