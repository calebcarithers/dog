/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMock, PXMockInterface } from "../PXMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_",
        type: "address",
      },
    ],
    name: "__PXMock_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_",
        type: "address",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "puppers",
        type: "uint256[]",
      },
    ],
    name: "burnPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506126cf806100206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c806379d90b171161011a578063b807f857116100ad578063dbddb26a1161007c578063dbddb26a146103f7578063e4e4dc42146103ff578063e985e9c514610412578063f2fde38b1461044e578063fc784d491461046157600080fd5b8063b807f857146103b6578063b88d4fde146103c9578063bcb00f29146103dc578063c87b56dd146103e457600080fd5b8063a035386d116100e9578063a035386d1461037e578063a22cb46514610387578063a6053eb51461039a578063b43ff0f0146103ad57600080fd5b806379d90b171461033c5780638da5cb5b1461035c57806395d89b411461036d57806397b874f71461037557600080fd5b8063369df6e711610192578063690c9f4311610161578063690c9f431461030557806370a082311461030e5780637132e47b14610321578063715018a61461033457600080fd5b8063369df6e7146102c357806342842e0e146102d65780635d29904e146102e95780636352211e146102f257600080fd5b8063095ea7b3116101ce578063095ea7b31461027f578063109429901461029457806318160ddd146102a757806323b872dd146102b057600080fd5b806301ffc9a714610200578063055fa0d51461022857806306fdde031461023f578063081812fc14610254575b600080fd5b61021361020e366004612200565b610474565b60405190151581526020015b60405180910390f35b61023160ca5481565b60405190815260200161021f565b6102476104c6565b60405161021f9190612458565b6102676102623660046122f1565b610558565b6040516001600160a01b03909116815260200161021f565b61029261028d366004612113565b6105f2565b005b6102926102a236600461213c565b610708565b61023160cb5481565b6102926102be366004612029565b6107b0565b6102926102d1366004612238565b6107e1565b6102926102e4366004612029565b610863565b61023160d25481565b6102676103003660046122f1565b61087e565b61023160d15481565b61023161031c366004611fdd565b6108f5565b61029261032f366004612238565b61097c565b610292610a9e565b61034f61034a3660046122f1565b610b04565b60405161021f9190612427565b6097546001600160a01b0316610267565b610247610b53565b61023160d05481565b61023160ce5481565b6102926103953660046120dd565b610b62565b6102926103a83660046122f1565b610b71565b61023160cf5481565b6102926103c43660046122f1565b60ce55565b6102926103d7366004612064565b610d96565b610231610dce565b6102476103f23660046122f1565b610ed9565b610247610fd6565b61023161040d3660046122f1565b611064565b610213610420366004611ff7565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61029261045c366004611fdd565b611074565b61029261046f366004612309565b61113c565b60006001600160e01b031982166380ac58cd60e01b14806104a557506001600160e01b03198216635b5e139f60e01b145b806104c057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546104d5906125c9565b80601f0160208091040260200160405190810160405280929190818152602001828054610501906125c9565b801561054e5780601f106105235761010080835404028352916020019161054e565b820191906000526020600020905b81548152906001019060200180831161053157829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166105d65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105fd8261087e565b9050806001600160a01b0316836001600160a01b0316141561066b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105cd565b336001600160a01b038216148061068757506106878133610420565b6106f95760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105cd565b610703838361115c565b505050565b60008151116107495760405162461bcd60e51b815260206004820152600d60248201526c456d707479207075707065727360981b60448201526064016105cd565b60005b81518110156107955761078582828151811061077857634e487b7160e01b600052603260045260246000fd5b60200260200101516111ca565b61078e81612604565b905061074c565b506107ad60ce5482516107a89190612567565b6112e8565b50565b6107ba338261142f565b6107d65760405162461bcd60e51b81526004016105cd906124b9565b610703838383611522565b600054610100900460ff16806107fa575060005460ff16155b6108165760405162461bcd60e51b81526004016105cd9061246b565b600054610100900460ff16158015610838576000805461ffff19166101011790555b6108478888888888888861097c565b8015610859576000805461ff00191690555b5050505050505050565b61070383838360405180602001604052806000815250610d96565b6000818152606760205260408120546001600160a01b0316806104c05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105cd565b60006001600160a01b0382166109605760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105cd565b506001600160a01b031660009081526068602052604090205490565b600054610100900460ff1680610995575060005460ff16155b6109b15760405162461bcd60e51b81526004016105cd9061246b565b600054610100900460ff161580156109d3576000805461ffff19166101011790555b6109dd88886116c2565b6001600160a01b0386166109f057600080fd5b60c980546001600160a01b0319166001600160a01b038816179055690bb28f98c1e0715ce00060ce55620f424060cf55600060d05560d184905560d2839055610a398385612567565b60cb5560d25460d154610a4c9190612567565b60ca558451610a629060d3906020880190611e8c565b5060d480546001600160a01b0319166001600160a01b038416179055601460d5558015610859576000805461ff00191690555050505050505050565b6097546001600160a01b03163314610af85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cd565b610b026000611749565b565b610b0c611f10565b600060cf5483610b1c9190612586565b9050604051806040016040528060d15483610b37919061261f565b815260200160d15483610b4a9190612553565b90529392505050565b6060606680546104d5906125c9565b610b6d33838361179b565b5050565b60008111610bb95760405162461bcd60e51b81526020600482015260156024820152744e6f6e20706f736974697665207175616e7469747960581b60448201526064016105cd565b60ca54811115610c025760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016105cd565b60005b81811015610ced576000610c1a60ca5461186a565b60cf54610c27919061253b565b60d054600082815260cc60205260409020549192501415610c5457600081815260cc602052604090208190555b6000600160ca5460cf54610c68919061253b565b610c729190612586565b60d054600082815260cc60205260409020549192501415610c9f57600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd909252909120829055610cd9338261187f565b50505080610ce690612604565b9050610c05565b5060c9546001600160a01b03166323b872dd333060ce5485610d0f9190612567565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b158015610d5e57600080fd5b505af1158015610d72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6d91906121e4565b610da0338361142f565b610dbc5760405162461bcd60e51b81526004016105cd906124b9565b610dc8848484846118a5565b50505050565b60008060ca544342610ddd3390565b604051602001610e05919060609190911b6bffffffffffffffffffffffff1916815260140190565b6040516020818303038152906040528051906020012060001c610e289190612553565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610e6d9190612553565b610e77444261253b565b610e81919061253b565b610e8b919061253b565b610e95919061253b565b610e9f919061253b565b610ea9919061253b565b604051602001610ebb91815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610f585760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016105cd565b6000610f62611923565b90506000610f6f84610b04565b90506000825111610f8f5760405180602001604052806000815250610fce565b81610fa18260005b6020020151611932565b610fac836001610f97565b604051602001610fbe93929190612356565b6040516020818303038152906040525b949350505050565b60d38054610fe3906125c9565b80601f016020809104026020016040519081016040528092919081815260200182805461100f906125c9565b801561105c5780601f106110315761010080835404028352916020019161105c565b820191906000526020600020905b81548152906001019060200180831161103f57829003601f168201915b505050505081565b600060cf54826104c09190612586565b6097546001600160a01b031633146110ce5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105cd565b6001600160a01b0381166111335760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105cd565b6107ad81611749565b60006111488284612567565b60ca81905560cb555060d19190915560d255565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906111918261087e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60d05481141561120e5760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b60448201526064016105cd565b336112188261087e565b6001600160a01b0316146112645760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b60448201526064016105cd565b600081815260cd602052604081205460ca5460cf54919291611286919061253b565b600081815260cc60208181526040808420805489865260cd845282862087905580865282862089905588865293909252832082905583835286905560ca80549394509092600192906112d990849061253b565b90915550610dc8905084611a4c565b6000606460d554836112fa9190612567565b6113049190612553565b905060006113128284612586565b60c95460d45460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101869052929350169063a9059cbb90604401602060405180830381600087803b15801561136457600080fd5b505af1158015611378573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139c91906121e4565b5060c9546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b1580156113f757600080fd5b505af115801561140b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc891906121e4565b6000818152606760205260408120546001600160a01b03166114a85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105cd565b60006114b38361087e565b9050806001600160a01b0316846001600160a01b031614806114ee5750836001600160a01b03166114e384610558565b6001600160a01b0316145b80610fce57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff16610fce565b826001600160a01b03166115358261087e565b6001600160a01b03161461159d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105cd565b6001600160a01b0382166115ff5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105cd565b61160a60008261115c565b6001600160a01b0383166000908152606860205260408120805460019290611633908490612586565b90915550506001600160a01b038216600090815260686020526040812080546001929061166190849061253b565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff16806116db575060005460ff16155b6116f75760405162461bcd60e51b81526004016105cd9061246b565b600054610100900460ff16158015611719576000805461ffff19166101011790555b611721611ae7565b611729611ae7565b6117338383611b52565b8015610703576000805461ff0019169055505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156117fd5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105cd565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600081611875610dce565b6104c0919061261f565b6118898282611be7565b600160ca600082825461189c9190612586565b90915550505050565b6118b0848484611522565b6118bc84848484611d29565b610dc85760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105cd565b606060d380546104d5906125c9565b6060816119565750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611980578061196a81612604565b91506119799050600a83612553565b915061195a565b60008167ffffffffffffffff8111156119a957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156119d3576020820181803683370190505b5090505b8415610fce576119e8600183612586565b91506119f5600a8661261f565b611a0090603061253b565b60f81b818381518110611a2357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611a45600a86612553565b94506119d7565b6000611a578261087e565b9050611a6460008361115c565b6001600160a01b0381166000908152606860205260408120805460019290611a8d908490612586565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff1680611b00575060005460ff16155b611b1c5760405162461bcd60e51b81526004016105cd9061246b565b600054610100900460ff16158015611b3e576000805461ffff19166101011790555b80156107ad576000805461ff001916905550565b600054610100900460ff1680611b6b575060005460ff16155b611b875760405162461bcd60e51b81526004016105cd9061246b565b600054610100900460ff16158015611ba9576000805461ffff19166101011790555b8251611bbc906065906020860190611e8c565b508151611bd0906066906020850190611e8c565b508015610703576000805461ff0019169055505050565b6001600160a01b038216611c3d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105cd565b6000818152606760205260409020546001600160a01b031615611ca25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105cd565b6001600160a01b0382166000908152606860205260408120805460019290611ccb90849061253b565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b15611e8157604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611d6d9033908990889088906004016123ea565b602060405180830381600087803b158015611d8757600080fd5b505af1925050508015611db7575060408051601f3d908101601f19168201909252611db49181019061221c565b60015b611e67573d808015611de5576040519150601f19603f3d011682016040523d82523d6000602084013e611dea565b606091505b508051611e5f5760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e746572000000000000000060648201526084016105cd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610fce565b506001949350505050565b828054611e98906125c9565b90600052602060002090601f016020900481019282611eba5760008555611f00565b82601f10611ed357805160ff1916838001178555611f00565b82800160010185558215611f00579182015b82811115611f00578251825591602001919060010190611ee5565b50611f0c929150611f2e565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115611f0c5760008155600101611f2f565b600067ffffffffffffffff831115611f5d57611f5d61265f565b611f70601f8401601f191660200161250a565b9050828152838383011115611f8457600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b0381168114611fb257600080fd5b919050565b600082601f830112611fc7578081fd5b611fd683833560208501611f43565b9392505050565b600060208284031215611fee578081fd5b611fd682611f9b565b60008060408385031215612009578081fd5b61201283611f9b565b915061202060208401611f9b565b90509250929050565b60008060006060848603121561203d578081fd5b61204684611f9b565b925061205460208501611f9b565b9150604084013590509250925092565b60008060008060808587031215612079578081fd5b61208285611f9b565b935061209060208601611f9b565b925060408501359150606085013567ffffffffffffffff8111156120b2578182fd5b8501601f810187136120c2578182fd5b6120d187823560208401611f43565b91505092959194509250565b600080604083850312156120ef578182fd5b6120f883611f9b565b9150602083013561210881612675565b809150509250929050565b60008060408385031215612125578182fd5b61212e83611f9b565b946020939093013593505050565b6000602080838503121561214e578182fd5b823567ffffffffffffffff80821115612165578384fd5b818501915085601f830112612178578384fd5b81358181111561218a5761218a61265f565b8060051b915061219b84830161250a565b8181528481019084860184860187018a10156121b5578788fd5b8795505b838610156121d75780358352600195909501949186019186016121b9565b5098975050505050505050565b6000602082840312156121f5578081fd5b8151611fd681612675565b600060208284031215612211578081fd5b8135611fd681612683565b60006020828403121561222d578081fd5b8151611fd681612683565b600080600080600080600060e0888a031215612252578283fd5b873567ffffffffffffffff80821115612269578485fd5b6122758b838c01611fb7565b985060208a013591508082111561228a578485fd5b6122968b838c01611fb7565b97506122a460408b01611f9b565b965060608a01359150808211156122b9578485fd5b506122c68a828b01611fb7565b9450506080880135925060a088013591506122e360c08901611f9b565b905092959891949750929550565b600060208284031215612302578081fd5b5035919050565b6000806040838503121561231b578182fd5b50508035926020909101359150565b6000815180845261234281602086016020860161259d565b601f01601f19169290920160200192915050565b6000845161236881846020890161259d565b676d6574616461746160c01b908301908152602f60f81b6008820152686d657461646174612d60b81b600982015284516123a981601284016020890161259d565b605f60f81b6012929091019182015283516123cb81601384016020880161259d565b64173539b7b760d91b6013929091019182015260180195945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061241d9083018461232a565b9695505050505050565b60408101818360005b600281101561244f578151835260209283019290910190600101612430565b50505092915050565b602081526000611fd6602083018461232a565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff811182821017156125335761253361265f565b604052919050565b6000821982111561254e5761254e612633565b500190565b60008261256257612562612649565b500490565b600081600019048311821515161561258157612581612633565b500290565b60008282101561259857612598612633565b500390565b60005b838110156125b85781810151838201526020016125a0565b83811115610dc85750506000910152565b600181811c908216806125dd57607f821691505b602082108114156125fe57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561261857612618612633565b5060010190565b60008261262e5761262e612649565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146107ad57600080fd5b6001600160e01b0319811681146107ad57600080fdfea26469706673582212200d861ea5d5786906e66aa1c15ca5e853986526dd7052234e4e90fa26cf2d8f4964736f6c63430008040033";

type PXMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMock__factory extends ContractFactory {
  constructor(...args: PXMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMock> {
    return super.deploy(overrides || {}) as Promise<PXMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PXMock {
    return super.attach(address) as PXMock;
  }
  connect(signer: Signer): PXMock__factory {
    return super.connect(signer) as PXMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockInterface {
    return new utils.Interface(_abi) as PXMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PXMock {
    return new Contract(address, _abi, signerOrProvider) as PXMock;
  }
}
