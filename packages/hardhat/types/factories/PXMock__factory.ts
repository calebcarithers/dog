/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMock, PXMockInterface } from "../PXMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
    ],
    name: "__PXMock_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxRand",
        type: "uint256",
      },
    ],
    name: "randYishInRange",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061266d806100206000396000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c8063715018a611610146578063b43ff0f0116100c3578063d85d95ef11610087578063d85d95ef146104c9578063dbddb26a146104d1578063e4e4dc42146104d9578063e985e9c5146104ec578063f2fde38b14610528578063fc784d491461053b57600080fd5b8063b43ff0f01461047f578063b807f85714610488578063b88d4fde1461049b578063bcb00f29146104ae578063c87b56dd146104b657600080fd5b806397b874f71161010a57806397b874f714610434578063a035386d1461043d578063a144819414610446578063a22cb46514610459578063a6053eb51461046c57600080fd5b8063715018a6146103e057806379d90b17146103e85780638832e6e3146104085780638da5cb5b1461041b57806395d89b411461042c57600080fd5b806342966c68116101d457806367983ca61161019857806367983ca614610396578063690c9f43146103a95780636c0360eb146103b25780636d677a74146103ba57806370a08231146103cd57600080fd5b806342966c68146103415780634f558e79146103545780635334dbb7146103675780635d29904e1461037a5780636352211e1461038357600080fd5b806318160ddd1161021b57806318160ddd146102ec57806323b872dd146102f55780632d99e94f1461030857806340c10f191461031b57806342842e0e1461032e57600080fd5b806301ffc9a714610258578063055fa0d51461028057806306fdde0314610297578063081812fc146102ac578063095ea7b3146102d7575b600080fd5b61026b6102663660046121d3565b61054e565b60405190151581526020015b60405180910390f35b61028960ca5481565b604051908152602001610277565b61029f6105a0565b60405161027791906123d5565b6102bf6102ba3660046122b2565b610632565b6040516001600160a01b039091168152602001610277565b6102ea6102e5366004612139565b6106cc565b005b61028960cb5481565b6102ea610303366004612062565b6107e2565b6102896103163660046122b2565b610813565b6102ea610329366004612139565b610828565b6102ea61033c366004612062565b610836565b6102ea61034f3660046122b2565b610851565b61026b6103623660046122b2565b61085d565b6102ea61037536600461220b565b61087c565b61028960d25481565b6102bf6103913660046122b2565b610979565b6102ea6103a436600461220b565b6109f0565b61028960d15481565b61029f610a6f565b6102ea6103c83660046122b2565b610a7e565b6102896103db36600461200f565b610c12565b6102ea610c99565b6103fb6103f63660046122b2565b610cff565b60405161027791906123a4565b6102ea610416366004612162565b610d4e565b6097546001600160a01b03166102bf565b61029f610d59565b61028960d05481565b61028960ce5481565b6102ea610454366004612139565b610d68565b6102ea610467366004612103565b610d72565b6102ea61047a3660046122b2565b610d7d565b61028960cf5481565b6102ea6104963660046122b2565b60ce55565b6102ea6104a936600461209d565b610da1565b610289610dd9565b61029f6104c43660046122b2565b610ed7565b610289610fd4565b61029f611180565b6102896104e73660046122b2565b61120e565b61026b6104fa366004612030565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6102ea61053636600461200f565b61121e565b6102ea6105493660046122ca565b6112e6565b60006001600160e01b031982166380ac58cd60e01b148061057f57506001600160e01b03198216635b5e139f60e01b145b8061059a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546105af90612567565b80601f01602080910402602001604051908101604052809291908181526020018280546105db90612567565b80156106285780601f106105fd57610100808354040283529160200191610628565b820191906000526020600020905b81548152906001019060200180831161060b57829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166106b05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006106d782610979565b9050806001600160a01b0316836001600160a01b031614156107455760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016106a7565b336001600160a01b0382161480610761575061076181336104fa565b6107d35760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016106a7565b6107dd8383611306565b505050565b6107ec3382611374565b6108085760405162461bcd60e51b81526004016106a790612488565b6107dd838383611467565b60008161081e610dd9565b61059a91906125bd565b6108328282611607565b5050565b6107dd83838360405180602001604052806000815250610da1565b61085a8161176b565b50565b6000818152606760205260408120546001600160a01b0316151561059a565b600054610100900460ff1680610895575060005460ff16155b6108b15760405162461bcd60e51b81526004016106a79061243a565b600054610100900460ff161580156108d3576000805461ffff19166101011790555b6108dd8787611858565b6001600160a01b0385166108f057600080fd5b60c980546001600160a01b0319166001600160a01b03871617905564014941658b60ce55620f424060cf55600060d05560d183905560d28290556109348284612505565b60cb5560d25460d1546109479190612505565b60ca55835161095d9060d3906020870190611eb5565b508015610970576000805461ff00191690555b50505050505050565b6000818152606760205260408120546001600160a01b03168061059a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016106a7565b600054610100900460ff1680610a09575060005460ff16155b610a255760405162461bcd60e51b81526004016106a79061243a565b600054610100900460ff16158015610a47576000805461ffff19166101011790555b610a5587878787878761087c565b8015610970576000805461ff001916905550505050505050565b6060610a796118df565b905090565b60d054811415610ac25760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b60448201526064016106a7565b33610acc82610979565b6001600160a01b031614610b185760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b60448201526064016106a7565b600081815260cd602052604081205460ca5460cf54919291610b3a91906124d9565b600081815260cc60208181526040808420805489865260cd84528286208790558086528286208990558886529390925283208290559183905290859055909150610b838461176b565b60c95460ce5460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610bd357600080fd5b505af1158015610be7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0b91906121b7565b5050505050565b60006001600160a01b038216610c7d5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016106a7565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610cf35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a7565b610cfd60006118ee565b565b610d07611f39565b600060cf5483610d179190612524565b9050604051806040016040528060d15483610d3291906125bd565b815260200160d15483610d4591906124f1565b90529392505050565b6107dd838383611940565b6060606680546105af90612567565b6108328282611973565b61083233838361198d565b60005b8181101561083257610d90610fd4565b50610d9a816125a2565b9050610d80565b610dab3383611374565b610dc75760405162461bcd60e51b81526004016106a790612488565b610dd384848484611a5c565b50505050565b60ca546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610e2691906124f1565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610e6b91906124f1565b610e7544426124d9565b610e7f91906124d9565b610e8991906124d9565b610e9391906124d9565b610e9d91906124d9565b610ea791906124d9565b604051602001610eb991815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610f565760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016106a7565b6000610f606118df565b90506000610f6d84610cff565b90506000825111610f8d5760405180602001604052806000815250610fcc565b81610f9f8260005b6020020151611a8f565b610faa836001610f95565b604051602001610fbc93929190612317565b6040516020818303038152906040525b949350505050565b60008060ca541161101e5760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016106a7565b600061102b60ca54610813565b60cf5461103891906124d9565b60d054600082815260cc6020526040902054919250141561106557600081815260cc602052604090208190555b6000600160ca5460cf5461107991906124d9565b6110839190612524565b60d054600082815260cc602052604090205491925014156110b057600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd90925290912082905592506110ec3384611607565b60c95460ce546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561114257600080fd5b505af1158015611156573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117a91906121b7565b50505090565b60d3805461118d90612567565b80601f01602080910402602001604051908101604052809291908181526020018280546111b990612567565b80156112065780601f106111db57610100808354040283529160200191611206565b820191906000526020600020905b8154815290600101906020018083116111e957829003601f168201915b505050505081565b600060cf548261059a9190612524565b6097546001600160a01b031633146112785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a7565b6001600160a01b0381166112dd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106a7565b61085a816118ee565b60006112f28284612505565b60ca81905560cb555060d19190915560d255565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061133b82610979565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152606760205260408120546001600160a01b03166113ed5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106a7565b60006113f883610979565b9050806001600160a01b0316846001600160a01b031614806114335750836001600160a01b031661142884610632565b6001600160a01b0316145b80610fcc57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff16610fcc565b826001600160a01b031661147a82610979565b6001600160a01b0316146114e25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016106a7565b6001600160a01b0382166115445760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106a7565b61154f600082611306565b6001600160a01b0383166000908152606860205260408120805460019290611578908490612524565b90915550506001600160a01b03821660009081526068602052604081208054600192906115a69084906124d9565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b03821661165d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106a7565b6000818152606760205260409020546001600160a01b0316156116c25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106a7565b6001600160a01b03821660009081526068602052604081208054600192906116eb9084906124d9565b9091555050600081815260676020526040812080546001600160a01b0319166001600160a01b03851617905560ca80546001929061172a908490612524565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600061177682610979565b9050611783600083611306565b6117b26040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b815250611ba9565b6117bb82611bec565b6001600160a01b03811660009081526068602052604081208054600192906117e4908490612524565b92505081905550600160ca60008282546117fe91906124d9565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff1680611871575060005460ff16155b61188d5760405162461bcd60e51b81526004016106a79061243a565b600054610100900460ff161580156118af576000805461ffff19166101011790555b6118b7611c31565b6118bf611c31565b6118c98383611c9c565b80156107dd576000805461ff0019169055505050565b606060d380546105af90612567565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61194a8383611607565b6119576000848484611d31565b6107dd5760405162461bcd60e51b81526004016106a7906123e8565b610832828260405180602001604052806000815250611940565b816001600160a01b0316836001600160a01b031614156119ef5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106a7565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611a67848484611467565b611a7384848484611d31565b610dd35760405162461bcd60e51b81526004016106a7906123e8565b606081611ab35750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611add5780611ac7816125a2565b9150611ad69050600a836124f1565b9150611ab7565b60008167ffffffffffffffff811115611b0657634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611b30576020820181803683370190505b5090505b8415610fcc57611b45600183612524565b9150611b52600a866125bd565b611b5d9060306124d9565b60f81b818381518110611b8057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611ba2600a866124f1565b9450611b34565b61085a81604051602401611bbd91906123d5565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611e94565b61085a81604051602401611c0291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611e94565b600054610100900460ff1680611c4a575060005460ff16155b611c665760405162461bcd60e51b81526004016106a79061243a565b600054610100900460ff16158015611c88576000805461ffff19166101011790555b801561085a576000805461ff001916905550565b600054610100900460ff1680611cb5575060005460ff16155b611cd15760405162461bcd60e51b81526004016106a79061243a565b600054610100900460ff16158015611cf3576000805461ffff19166101011790555b8251611d06906065906020860190611eb5565b508151611d1a906066906020850190611eb5565b5080156107dd576000805461ff0019169055505050565b60006001600160a01b0384163b15611e8957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611d75903390899088908890600401612367565b602060405180830381600087803b158015611d8f57600080fd5b505af1925050508015611dbf575060408051601f3d908101601f19168201909252611dbc918101906121ef565b60015b611e6f573d808015611ded576040519150601f19603f3d011682016040523d82523d6000602084013e611df2565b606091505b508051611e675760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e746572000000000000000060648201526084016106a7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610fcc565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054611ec190612567565b90600052602060002090601f016020900481019282611ee35760008555611f29565b82601f10611efc57805160ff1916838001178555611f29565b82800160010185558215611f29579182015b82811115611f29578251825591602001919060010190611f0e565b50611f35929150611f57565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115611f355760008155600101611f58565b80356001600160a01b0381168114611f8357600080fd5b919050565b600082601f830112611f98578081fd5b813567ffffffffffffffff80821115611fb357611fb36125fd565b604051601f8301601f19908116603f01168101908282118183101715611fdb57611fdb6125fd565b81604052838152866020858801011115611ff3578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215612020578081fd5b61202982611f6c565b9392505050565b60008060408385031215612042578081fd5b61204b83611f6c565b915061205960208401611f6c565b90509250929050565b600080600060608486031215612076578081fd5b61207f84611f6c565b925061208d60208501611f6c565b9150604084013590509250925092565b600080600080608085870312156120b2578081fd5b6120bb85611f6c565b93506120c960208601611f6c565b925060408501359150606085013567ffffffffffffffff8111156120eb578182fd5b6120f787828801611f88565b91505092959194509250565b60008060408385031215612115578182fd5b61211e83611f6c565b9150602083013561212e81612613565b809150509250929050565b6000806040838503121561214b578182fd5b61215483611f6c565b946020939093013593505050565b600080600060608486031215612176578283fd5b61217f84611f6c565b925060208401359150604084013567ffffffffffffffff8111156121a1578182fd5b6121ad86828701611f88565b9150509250925092565b6000602082840312156121c8578081fd5b815161202981612613565b6000602082840312156121e4578081fd5b813561202981612621565b600060208284031215612200578081fd5b815161202981612621565b60008060008060008060c08789031215612223578182fd5b863567ffffffffffffffff8082111561223a578384fd5b6122468a838b01611f88565b9750602089013591508082111561225b578384fd5b6122678a838b01611f88565b965061227560408a01611f6c565b9550606089013591508082111561228a578384fd5b5061229789828a01611f88565b9350506080870135915060a087013590509295509295509295565b6000602082840312156122c3578081fd5b5035919050565b600080604083850312156122dc578182fd5b50508035926020909101359150565b6000815180845261230381602086016020860161253b565b601f01601f19169290920160200192915050565b6000845161232981846020890161253b565b84519083019061233d81836020890161253b565b605f60f81b9101908152835161235a81600184016020880161253b565b0160010195945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061239a908301846122eb565b9695505050505050565b60408101818360005b60028110156123cc5781518352602092830192909101906001016123ad565b50505092915050565b60208152600061202960208301846122eb565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156124ec576124ec6125d1565b500190565b600082612500576125006125e7565b500490565b600081600019048311821515161561251f5761251f6125d1565b500290565b600082821015612536576125366125d1565b500390565b60005b8381101561255657818101518382015260200161253e565b83811115610dd35750506000910152565b600181811c9082168061257b57607f821691505b6020821081141561259c57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156125b6576125b66125d1565b5060010190565b6000826125cc576125cc6125e7565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461085a57600080fd5b6001600160e01b03198116811461085a57600080fdfea2646970667358221220c1876dff559dc790ecc0437beb6377665151011a0b2b32cb0fff2fc58181460764736f6c63430008040033";

type PXMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMock__factory extends ContractFactory {
  constructor(...args: PXMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMock> {
    return super.deploy(overrides || {}) as Promise<PXMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PXMock {
    return super.attach(address) as PXMock;
  }
  connect(signer: Signer): PXMock__factory {
    return super.connect(signer) as PXMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockInterface {
    return new utils.Interface(_abi) as PXMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PXMock {
    return new Contract(address, _abi, signerOrProvider) as PXMock;
  }
}
