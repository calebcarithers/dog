/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMock, PXMockInterface } from "../PXMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_",
        type: "address",
      },
    ],
    name: "__PXMock_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_",
        type: "address",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "puppers",
        type: "uint256[]",
      },
    ],
    name: "burnPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061282c806100206000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c806379d90b1711610125578063b88d4fde116100ad578063dbddb26a1161007c578063dbddb26a14610428578063e4e4dc4214610430578063e985e9c514610443578063f2fde38b1461047f578063fc784d491461049257600080fd5b8063b88d4fde146103f2578063bcb00f2914610405578063c87b56dd1461040d578063d85d95ef1461042057600080fd5b8063a035386d116100f4578063a035386d146103a7578063a22cb465146103b0578063a6053eb5146103c3578063b43ff0f0146103d6578063b807f857146103df57600080fd5b806379d90b17146103655780638da5cb5b1461038557806395d89b411461039657806397b874f71461039e57600080fd5b8063369df6e7116101a8578063690c9f4311610177578063690c9f431461031b5780636d677a741461032457806370a08231146103375780637132e47b1461034a578063715018a61461035d57600080fd5b8063369df6e7146102d957806342842e0e146102ec5780635d29904e146102ff5780636352211e1461030857600080fd5b8063095ea7b3116101e4578063095ea7b31461029557806310942990146102aa57806318160ddd146102bd57806323b872dd146102c657600080fd5b806301ffc9a714610216578063055fa0d51461023e57806306fdde0314610255578063081812fc1461026a575b600080fd5b61022961022436600461235d565b6104a5565b60405190151581526020015b60405180910390f35b61024760ca5481565b604051908152602001610235565b61025d6104f7565b60405161023591906125b5565b61027d61027836600461244e565b610589565b6040516001600160a01b039091168152602001610235565b6102a86102a3366004612270565b610623565b005b6102a86102b8366004612299565b610739565b61024760cb5481565b6102a86102d4366004612186565b6107e1565b6102a86102e7366004612395565b610812565b6102a86102fa366004612186565b610894565b61024760d25481565b61027d61031636600461244e565b6108af565b61024760d15481565b6102a861033236600461244e565b610926565b61024761034536600461213a565b610941565b6102a8610358366004612395565b6109c8565b6102a8610aea565b61037861037336600461244e565b610b50565b6040516102359190612584565b6097546001600160a01b031661027d565b61025d610b9f565b61024760d05481565b61024760ce5481565b6102a86103be36600461223a565b610bae565b6102a86103d136600461244e565b610bbd565b61024760cf5481565b6102a86103ed36600461244e565b60ce55565b6102a86104003660046121c1565b610e30565b610247610e68565b61025d61041b36600461244e565b610f66565b6102a8611063565b61025d61106d565b61024761043e36600461244e565b6110fb565b610229610451366004612154565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6102a861048d36600461213a565b61110b565b6102a86104a0366004612466565b6111d3565b60006001600160e01b031982166380ac58cd60e01b14806104d657506001600160e01b03198216635b5e139f60e01b145b806104f157506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461050690612726565b80601f016020809104026020016040519081016040528092919081815260200182805461053290612726565b801561057f5780601f106105545761010080835404028352916020019161057f565b820191906000526020600020905b81548152906001019060200180831161056257829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166106075760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b600061062e826108af565b9050806001600160a01b0316836001600160a01b0316141561069c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105fe565b336001600160a01b03821614806106b857506106b88133610451565b61072a5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105fe565b61073483836111f3565b505050565b600081511161077a5760405162461bcd60e51b815260206004820152600d60248201526c456d707479207075707065727360981b60448201526064016105fe565b60005b81518110156107c6576107b68282815181106107a957634e487b7160e01b600052603260045260246000fd5b6020026020010151611261565b6107bf81612761565b905061077d565b506107de60ce5482516107d991906126c4565b611449565b50565b6107eb3382611582565b6108075760405162461bcd60e51b81526004016105fe90612616565b610734838383611675565b600054610100900460ff168061082b575060005460ff16155b6108475760405162461bcd60e51b81526004016105fe906125c8565b600054610100900460ff16158015610869576000805461ffff19166101011790555b610878888888888888886109c8565b801561088a576000805461ff00191690555b5050505050505050565b61073483838360405180602001604052806000815250610e30565b6000818152606760205260408120546001600160a01b0316806104f15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105fe565b61092f81611261565b6107de60ce5460016107d991906126c4565b60006001600160a01b0382166109ac5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105fe565b506001600160a01b031660009081526068602052604090205490565b600054610100900460ff16806109e1575060005460ff16155b6109fd5760405162461bcd60e51b81526004016105fe906125c8565b600054610100900460ff16158015610a1f576000805461ffff19166101011790555b610a298888611815565b6001600160a01b038616610a3c57600080fd5b60c980546001600160a01b0319166001600160a01b038816179055690bb28f98c1e0715ce00060ce55620f424060cf55600060d05560d184905560d2839055610a8583856126c4565b60cb5560d25460d154610a9891906126c4565b60ca558451610aae9060d3906020880190611fe9565b5060d480546001600160a01b0319166001600160a01b038416179055601460d555801561088a576000805461ff00191690555050505050505050565b6097546001600160a01b03163314610b445760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105fe565b610b4e600061189c565b565b610b5861206d565b600060cf5483610b6891906126e3565b9050604051806040016040528060d15483610b83919061277c565b815260200160d15483610b9691906126b0565b90529392505050565b60606066805461050690612726565b610bb93383836118ee565b5050565b60008111610c055760405162461bcd60e51b81526020600482015260156024820152744e6f6e20706f736974697665207175616e7469747960581b60448201526064016105fe565b60ca54811115610c4e5760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016105fe565b60005b81811015610d8257600060ca5411610ca25760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016105fe565b6000610caf60ca546119bd565b60cf54610cbc9190612698565b60d054600082815260cc60205260409020549192501415610ce957600081815260cc602052604090208190555b6000600160ca5460cf54610cfd9190612698565b610d0791906126e3565b60d054600082815260cc60205260409020549192501415610d3457600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd909252909120829055610d6e33826119d2565b50505080610d7b90612761565b9050610c51565b5060c95460ce546001600160a01b03909116906323b872dd9033903090610da990866126c4565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b158015610df857600080fd5b505af1158015610e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb99190612341565b610e3a3383611582565b610e565760405162461bcd60e51b81526004016105fe90612616565b610e6284848484611b36565b50505050565b60ca546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610eb591906126b0565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610efa91906126b0565b610f044442612698565b610f0e9190612698565b610f189190612698565b610f229190612698565b610f2c9190612698565b610f369190612698565b604051602001610f4891815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610fe55760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016105fe565b6000610fef611bb4565b90506000610ffc84610b50565b9050600082511161101c576040518060200160405280600081525061105b565b8161102e8260005b6020020151611bc3565b611039836001611024565b60405160200161104b939291906124b3565b6040516020818303038152906040525b949350505050565b610b4e6001610bbd565b60d3805461107a90612726565b80601f01602080910402602001604051908101604052809291908181526020018280546110a690612726565b80156110f35780601f106110c8576101008083540402835291602001916110f3565b820191906000526020600020905b8154815290600101906020018083116110d657829003601f168201915b505050505081565b600060cf54826104f191906126e3565b6097546001600160a01b031633146111655760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105fe565b6001600160a01b0381166111ca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105fe565b6107de8161189c565b60006111df82846126c4565b60ca81905560cb555060d19190915560d255565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611228826108af565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60d0548114156112a55760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b60448201526064016105fe565b336112af826108af565b6001600160a01b0316146112fb5760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b60448201526064016105fe565b600081815260cd602052604081205460ca5460cf5491929161131d9190612698565b600081815260cc60208181526040808420805489865260cd8452828620879055808652828620899055888652939092528320829055838352869055919250611364856108af565b90506113716000866111f3565b6113a06040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b815250611cdd565b6113a985611d20565b6001600160a01b03811660009081526068602052604081208054600192906113d29084906126e3565b92505081905550600160ca60008282546113ec9190612698565b909155505060008581526067602052604080822080546001600160a01b0319169055518691906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050505050565b6000606460d5548361145b91906126c4565b61146591906126b0565b9050600061147382846126e3565b60c95460d45460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101869052929350169063a9059cbb90604401602060405180830381600087803b1580156114c557600080fd5b505af11580156114d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114fd9190612341565b5060c95460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561154a57600080fd5b505af115801561155e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e629190612341565b6000818152606760205260408120546001600160a01b03166115fb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105fe565b6000611606836108af565b9050806001600160a01b0316846001600160a01b031614806116415750836001600160a01b031661163684610589565b6001600160a01b0316145b8061105b57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff1661105b565b826001600160a01b0316611688826108af565b6001600160a01b0316146116f05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105fe565b6001600160a01b0382166117525760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105fe565b61175d6000826111f3565b6001600160a01b03831660009081526068602052604081208054600192906117869084906126e3565b90915550506001600160a01b03821660009081526068602052604081208054600192906117b4908490612698565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff168061182e575060005460ff16155b61184a5760405162461bcd60e51b81526004016105fe906125c8565b600054610100900460ff1615801561186c576000805461ffff19166101011790555b611874611d65565b61187c611d65565b6118868383611dd0565b8015610734576000805461ff0019169055505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156119505760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105fe565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000816119c8610e68565b6104f1919061277c565b6001600160a01b038216611a285760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105fe565b6000818152606760205260409020546001600160a01b031615611a8d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105fe565b6001600160a01b0382166000908152606860205260408120805460019290611ab6908490612698565b9091555050600081815260676020526040812080546001600160a01b0319166001600160a01b03851617905560ca805460019290611af59084906126e3565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611b41848484611675565b611b4d84848484611e65565b610e625760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105fe565b606060d3805461050690612726565b606081611be75750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611c115780611bfb81612761565b9150611c0a9050600a836126b0565b9150611beb565b60008167ffffffffffffffff811115611c3a57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c64576020820181803683370190505b5090505b841561105b57611c796001836126e3565b9150611c86600a8661277c565b611c91906030612698565b60f81b818381518110611cb457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611cd6600a866126b0565b9450611c68565b6107de81604051602401611cf191906125b5565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611fc8565b6107de81604051602401611d3691815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611fc8565b600054610100900460ff1680611d7e575060005460ff16155b611d9a5760405162461bcd60e51b81526004016105fe906125c8565b600054610100900460ff16158015611dbc576000805461ffff19166101011790555b80156107de576000805461ff001916905550565b600054610100900460ff1680611de9575060005460ff16155b611e055760405162461bcd60e51b81526004016105fe906125c8565b600054610100900460ff16158015611e27576000805461ffff19166101011790555b8251611e3a906065906020860190611fe9565b508151611e4e906066906020850190611fe9565b508015610734576000805461ff0019169055505050565b60006001600160a01b0384163b15611fbd57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ea9903390899088908890600401612547565b602060405180830381600087803b158015611ec357600080fd5b505af1925050508015611ef3575060408051601f3d908101601f19168201909252611ef091810190612379565b60015b611fa3573d808015611f21576040519150601f19603f3d011682016040523d82523d6000602084013e611f26565b606091505b508051611f9b5760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e746572000000000000000060648201526084016105fe565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061105b565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054611ff590612726565b90600052602060002090601f016020900481019282612017576000855561205d565b82601f1061203057805160ff191683800117855561205d565b8280016001018555821561205d579182015b8281111561205d578251825591602001919060010190612042565b5061206992915061208b565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115612069576000815560010161208c565b600067ffffffffffffffff8311156120ba576120ba6127bc565b6120cd601f8401601f1916602001612667565b90508281528383830111156120e157600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b038116811461210f57600080fd5b919050565b600082601f830112612124578081fd5b612133838335602085016120a0565b9392505050565b60006020828403121561214b578081fd5b612133826120f8565b60008060408385031215612166578081fd5b61216f836120f8565b915061217d602084016120f8565b90509250929050565b60008060006060848603121561219a578081fd5b6121a3846120f8565b92506121b1602085016120f8565b9150604084013590509250925092565b600080600080608085870312156121d6578081fd5b6121df856120f8565b93506121ed602086016120f8565b925060408501359150606085013567ffffffffffffffff81111561220f578182fd5b8501601f8101871361221f578182fd5b61222e878235602084016120a0565b91505092959194509250565b6000806040838503121561224c578182fd5b612255836120f8565b91506020830135612265816127d2565b809150509250929050565b60008060408385031215612282578182fd5b61228b836120f8565b946020939093013593505050565b600060208083850312156122ab578182fd5b823567ffffffffffffffff808211156122c2578384fd5b818501915085601f8301126122d5578384fd5b8135818111156122e7576122e76127bc565b8060051b91506122f8848301612667565b8181528481019084860184860187018a1015612312578788fd5b8795505b83861015612334578035835260019590950194918601918601612316565b5098975050505050505050565b600060208284031215612352578081fd5b8151612133816127d2565b60006020828403121561236e578081fd5b8135612133816127e0565b60006020828403121561238a578081fd5b8151612133816127e0565b600080600080600080600060e0888a0312156123af578283fd5b873567ffffffffffffffff808211156123c6578485fd5b6123d28b838c01612114565b985060208a01359150808211156123e7578485fd5b6123f38b838c01612114565b975061240160408b016120f8565b965060608a0135915080821115612416578485fd5b506124238a828b01612114565b9450506080880135925060a0880135915061244060c089016120f8565b905092959891949750929550565b60006020828403121561245f578081fd5b5035919050565b60008060408385031215612478578182fd5b50508035926020909101359150565b6000815180845261249f8160208601602086016126fa565b601f01601f19169290920160200192915050565b600084516124c58184602089016126fa565b676d6574616461746160c01b908301908152602f60f81b6008820152686d657461646174612d60b81b600982015284516125068160128401602089016126fa565b605f60f81b6012929091019182015283516125288160138401602088016126fa565b64173539b7b760d91b6013929091019182015260180195945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061257a90830184612487565b9695505050505050565b60408101818360005b60028110156125ac57815183526020928301929091019060010161258d565b50505092915050565b6020815260006121336020830184612487565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff81118282101715612690576126906127bc565b604052919050565b600082198211156126ab576126ab612790565b500190565b6000826126bf576126bf6127a6565b500490565b60008160001904831182151516156126de576126de612790565b500290565b6000828210156126f5576126f5612790565b500390565b60005b838110156127155781810151838201526020016126fd565b83811115610e625750506000910152565b600181811c9082168061273a57607f821691505b6020821081141561275b57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561277557612775612790565b5060010190565b60008261278b5761278b6127a6565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146107de57600080fd5b6001600160e01b0319811681146107de57600080fdfea26469706673582212206dcb9b68c285738c1f69a09f5573feeff40a9b6da1db24c03b3d61d4a79b1c0c64736f6c63430008040033";

type PXMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMock__factory extends ContractFactory {
  constructor(...args: PXMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMock> {
    return super.deploy(overrides || {}) as Promise<PXMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PXMock {
    return super.attach(address) as PXMock;
  }
  connect(signer: Signer): PXMock__factory {
    return super.connect(signer) as PXMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockInterface {
    return new utils.Interface(_abi) as PXMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PXMock {
    return new Contract(address, _abi, signerOrProvider) as PXMock;
  }
}
