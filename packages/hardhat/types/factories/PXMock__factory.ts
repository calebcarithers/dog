/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMock, PXMockInterface } from "../PXMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
    ],
    name: "__PXMock_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxRand",
        type: "uint256",
      },
    ],
    name: "randYishInRange",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061264d806100206000396000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c80637e33a8c211610146578063b43ff0f0116100c3578063d85d95ef11610087578063d85d95ef146104c9578063dbddb26a146104d1578063e4e4dc42146104d9578063e985e9c5146104ec578063f2fde38b14610528578063fc784d491461053b57600080fd5b8063b43ff0f01461047f578063b807f85714610488578063b88d4fde1461049b578063bcb00f29146104ae578063c87b56dd146104b657600080fd5b8063a035386d1161010a578063a035386d1461042a578063a144819414610433578063a22cb46514610446578063a6053eb514610459578063ae2430c31461046c57600080fd5b80637e33a8c2146103e25780638832e6e3146103f55780638da5cb5b1461040857806395d89b411461041957806397b874f71461042157600080fd5b806342966c68116101d45780636c0360eb116101985780636c0360eb1461038c5780636d677a741461039457806370a08231146103a7578063715018a6146103ba57806379d90b17146103c257600080fd5b806342966c68146103415780634f558e79146103545780635d29904e146103675780636352211e14610370578063690c9f431461038357600080fd5b806318160ddd1161021b57806318160ddd146102ec57806323b872dd146102f55780632d99e94f1461030857806340c10f191461031b57806342842e0e1461032e57600080fd5b806301ffc9a714610258578063055fa0d51461028057806306fdde0314610297578063081812fc146102ac578063095ea7b3146102d7575b600080fd5b61026b6102663660046121d1565b61054e565b60405190151581526020015b60405180910390f35b61028960ca5481565b604051908152602001610277565b61029f6105a0565b60405161027791906123b5565b6102bf6102ba366004612292565b610632565b6040516001600160a01b039091168152602001610277565b6102ea6102e5366004612137565b6106cc565b005b61028960cb5481565b6102ea610303366004612060565b6107e2565b610289610316366004612292565b610813565b6102ea610329366004612137565b610828565b6102ea61033c366004612060565b610836565b6102ea61034f366004612292565b610851565b61026b610362366004612292565b61085d565b61028960d25481565b6102bf61037e366004612292565b61087c565b61028960d15481565b61029f6108f3565b6102ea6103a2366004612292565b610902565b6102896103b536600461200d565b610a96565b6102ea610b1d565b6103d56103d0366004612292565b610b83565b6040516102779190612384565b6102ea6103f0366004612209565b610bd2565b6102ea610403366004612160565b610c4d565b6097546001600160a01b03166102bf565b61029f610c58565b61028960d05481565b61028960ce5481565b6102ea610441366004612137565b610c67565b6102ea610454366004612101565b610c71565b6102ea610467366004612292565b610c7c565b6102ea61047a366004612209565b610ca0565b61028960cf5481565b6102ea610496366004612292565b60ce55565b6102ea6104a936600461209b565b610d9f565b610289610dd7565b61029f6104c4366004612292565b610ed5565b610289610fd2565b61029f61117e565b6102896104e7366004612292565b61120c565b61026b6104fa36600461202e565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6102ea61053636600461200d565b61121c565b6102ea6105493660046122aa565b6112e4565b60006001600160e01b031982166380ac58cd60e01b148061057f57506001600160e01b03198216635b5e139f60e01b145b8061059a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546105af90612547565b80601f01602080910402602001604051908101604052809291908181526020018280546105db90612547565b80156106285780601f106105fd57610100808354040283529160200191610628565b820191906000526020600020905b81548152906001019060200180831161060b57829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166106b05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006106d78261087c565b9050806001600160a01b0316836001600160a01b031614156107455760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016106a7565b336001600160a01b0382161480610761575061076181336104fa565b6107d35760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016106a7565b6107dd8383611304565b505050565b6107ec3382611372565b6108085760405162461bcd60e51b81526004016106a790612468565b6107dd838383611465565b60008161081e610dd7565b61059a919061259d565b6108328282611605565b5050565b6107dd83838360405180602001604052806000815250610d9f565b61085a81611769565b50565b6000818152606760205260408120546001600160a01b0316151561059a565b6000818152606760205260408120546001600160a01b03168061059a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016106a7565b60606108fd611856565b905090565b60d0548114156109465760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b60448201526064016106a7565b336109508261087c565b6001600160a01b03161461099c5760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b60448201526064016106a7565b600081815260cd602052604081205460ca5460cf549192916109be91906124b9565b600081815260cc60208181526040808420805489865260cd84528286208790558086528286208990558886529390925283208290559183905290859055909150610a0784611769565b60c95460ce5460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610a5757600080fd5b505af1158015610a6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8f91906121b5565b5050505050565b60006001600160a01b038216610b015760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016106a7565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610b775760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a7565b610b816000611865565b565b610b8b611eb3565b600060cf5483610b9b9190612504565b9050604051806040016040528060d15483610bb6919061259d565b815260200160d15483610bc991906124d1565b90529392505050565b600054610100900460ff1680610beb575060005460ff16155b610c075760405162461bcd60e51b81526004016106a79061241a565b600054610100900460ff16158015610c29576000805461ffff19166101011790555b610c3585858585610ca0565b8015610a8f576000805461ff00191690555050505050565b6107dd8383836118b7565b6060606680546105af90612547565b61083282826118ea565b610832338383611904565b60005b8181101561083257610c8f610fd2565b50610c9981612582565b9050610c7f565b600054610100900460ff1680610cb9575060005460ff16155b610cd55760405162461bcd60e51b81526004016106a79061241a565b600054610100900460ff16158015610cf7576000805461ffff19166101011790555b610d0185856119d3565b6001600160a01b038316610d1457600080fd5b60c980546001600160a01b0319166001600160a01b03851617905564014941658b60ce55620f424060cf55600060d05561028060d18190556101e060d2819055610d5d916124e5565b60cb5560d25460d154610d7091906124e5565b60ca558151610d869060d3906020850190611ed1565b508015610a8f576000805461ff00191690555050505050565b610da93383611372565b610dc55760405162461bcd60e51b81526004016106a790612468565b610dd184848484611a5a565b50505050565b60ca546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610e2491906124d1565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610e6991906124d1565b610e7344426124b9565b610e7d91906124b9565b610e8791906124b9565b610e9191906124b9565b610e9b91906124b9565b610ea591906124b9565b604051602001610eb791815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610f545760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016106a7565b6000610f5e611856565b90506000610f6b84610b83565b90506000825111610f8b5760405180602001604052806000815250610fca565b81610f9d8260005b6020020151611a8d565b610fa8836001610f93565b604051602001610fba939291906122f7565b6040516020818303038152906040525b949350505050565b60008060ca541161101c5760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016106a7565b600061102960ca54610813565b60cf5461103691906124b9565b60d054600082815260cc6020526040902054919250141561106357600081815260cc602052604090208190555b6000600160ca5460cf5461107791906124b9565b6110819190612504565b60d054600082815260cc602052604090205491925014156110ae57600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd90925290912082905592506110ea3384611605565b60c95460ce546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561114057600080fd5b505af1158015611154573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117891906121b5565b50505090565b60d3805461118b90612547565b80601f01602080910402602001604051908101604052809291908181526020018280546111b790612547565b80156112045780601f106111d957610100808354040283529160200191611204565b820191906000526020600020905b8154815290600101906020018083116111e757829003601f168201915b505050505081565b600060cf548261059a9190612504565b6097546001600160a01b031633146112765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a7565b6001600160a01b0381166112db5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106a7565b61085a81611865565b60006112f082846124e5565b60ca81905560cb555060d19190915560d255565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906113398261087c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152606760205260408120546001600160a01b03166113eb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106a7565b60006113f68361087c565b9050806001600160a01b0316846001600160a01b031614806114315750836001600160a01b031661142684610632565b6001600160a01b0316145b80610fca57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff16610fca565b826001600160a01b03166114788261087c565b6001600160a01b0316146114e05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016106a7565b6001600160a01b0382166115425760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106a7565b61154d600082611304565b6001600160a01b0383166000908152606860205260408120805460019290611576908490612504565b90915550506001600160a01b03821660009081526068602052604081208054600192906115a49084906124b9565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b03821661165b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106a7565b6000818152606760205260409020546001600160a01b0316156116c05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106a7565b6001600160a01b03821660009081526068602052604081208054600192906116e99084906124b9565b9091555050600081815260676020526040812080546001600160a01b0319166001600160a01b03851617905560ca805460019290611728908490612504565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006117748261087c565b9050611781600083611304565b6117b06040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b815250611ba7565b6117b982611bea565b6001600160a01b03811660009081526068602052604081208054600192906117e2908490612504565b92505081905550600160ca60008282546117fc91906124b9565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b606060d380546105af90612547565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6118c18383611605565b6118ce6000848484611c2f565b6107dd5760405162461bcd60e51b81526004016106a7906123c8565b6108328282604051806020016040528060008152506118b7565b816001600160a01b0316836001600160a01b031614156119665760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106a7565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600054610100900460ff16806119ec575060005460ff16155b611a085760405162461bcd60e51b81526004016106a79061241a565b600054610100900460ff16158015611a2a576000805461ffff19166101011790555b611a32611d92565b611a3a611d92565b611a448383611dfd565b80156107dd576000805461ff0019169055505050565b611a65848484611465565b611a7184848484611c2f565b610dd15760405162461bcd60e51b81526004016106a7906123c8565b606081611ab15750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611adb5780611ac581612582565b9150611ad49050600a836124d1565b9150611ab5565b60008167ffffffffffffffff811115611b0457634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611b2e576020820181803683370190505b5090505b8415610fca57611b43600183612504565b9150611b50600a8661259d565b611b5b9060306124b9565b60f81b818381518110611b7e57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611ba0600a866124d1565b9450611b32565b61085a81604051602401611bbb91906123b5565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611e92565b61085a81604051602401611c0091815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611e92565b60006001600160a01b0384163b15611d8757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611c73903390899088908890600401612347565b602060405180830381600087803b158015611c8d57600080fd5b505af1925050508015611cbd575060408051601f3d908101601f19168201909252611cba918101906121ed565b60015b611d6d573d808015611ceb576040519150601f19603f3d011682016040523d82523d6000602084013e611cf0565b606091505b508051611d655760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e746572000000000000000060648201526084016106a7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610fca565b506001949350505050565b600054610100900460ff1680611dab575060005460ff16155b611dc75760405162461bcd60e51b81526004016106a79061241a565b600054610100900460ff16158015611de9576000805461ffff19166101011790555b801561085a576000805461ff001916905550565b600054610100900460ff1680611e16575060005460ff16155b611e325760405162461bcd60e51b81526004016106a79061241a565b600054610100900460ff16158015611e54576000805461ffff19166101011790555b8251611e67906065906020860190611ed1565b508151611e7b906066906020850190611ed1565b5080156107dd576000805461ff0019169055505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60405180604001604052806002906020820280368337509192915050565b828054611edd90612547565b90600052602060002090601f016020900481019282611eff5760008555611f45565b82601f10611f1857805160ff1916838001178555611f45565b82800160010185558215611f45579182015b82811115611f45578251825591602001919060010190611f2a565b50611f51929150611f55565b5090565b5b80821115611f515760008155600101611f56565b80356001600160a01b0381168114611f8157600080fd5b919050565b600082601f830112611f96578081fd5b813567ffffffffffffffff80821115611fb157611fb16125dd565b604051601f8301601f19908116603f01168101908282118183101715611fd957611fd96125dd565b81604052838152866020858801011115611ff1578485fd5b8360208701602083013792830160200193909352509392505050565b60006020828403121561201e578081fd5b61202782611f6a565b9392505050565b60008060408385031215612040578081fd5b61204983611f6a565b915061205760208401611f6a565b90509250929050565b600080600060608486031215612074578081fd5b61207d84611f6a565b925061208b60208501611f6a565b9150604084013590509250925092565b600080600080608085870312156120b0578081fd5b6120b985611f6a565b93506120c760208601611f6a565b925060408501359150606085013567ffffffffffffffff8111156120e9578182fd5b6120f587828801611f86565b91505092959194509250565b60008060408385031215612113578182fd5b61211c83611f6a565b9150602083013561212c816125f3565b809150509250929050565b60008060408385031215612149578182fd5b61215283611f6a565b946020939093013593505050565b600080600060608486031215612174578283fd5b61217d84611f6a565b925060208401359150604084013567ffffffffffffffff81111561219f578182fd5b6121ab86828701611f86565b9150509250925092565b6000602082840312156121c6578081fd5b8151612027816125f3565b6000602082840312156121e2578081fd5b813561202781612601565b6000602082840312156121fe578081fd5b815161202781612601565b6000806000806080858703121561221e578384fd5b843567ffffffffffffffff80821115612235578586fd5b61224188838901611f86565b95506020870135915080821115612256578485fd5b61226288838901611f86565b945061227060408801611f6a565b93506060870135915080821115612285578283fd5b506120f587828801611f86565b6000602082840312156122a3578081fd5b5035919050565b600080604083850312156122bc578182fd5b50508035926020909101359150565b600081518084526122e381602086016020860161251b565b601f01601f19169290920160200192915050565b6000845161230981846020890161251b565b84519083019061231d81836020890161251b565b605f60f81b9101908152835161233a81600184016020880161251b565b0160010195945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061237a908301846122cb565b9695505050505050565b60408101818360005b60028110156123ac57815183526020928301929091019060010161238d565b50505092915050565b60208152600061202760208301846122cb565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156124cc576124cc6125b1565b500190565b6000826124e0576124e06125c7565b500490565b60008160001904831182151516156124ff576124ff6125b1565b500290565b600082821015612516576125166125b1565b500390565b60005b8381101561253657818101518382015260200161251e565b83811115610dd15750506000910152565b600181811c9082168061255b57607f821691505b6020821081141561257c57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612596576125966125b1565b5060010190565b6000826125ac576125ac6125c7565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461085a57600080fd5b6001600160e01b03198116811461085a57600080fdfea2646970667358221220e9f7ed0fc4f7f96df22abbafa54e8a535c68cc1cfdd36f1285d638e931d9e8d164736f6c63430008040033";

type PXMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMock__factory extends ContractFactory {
  constructor(...args: PXMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMock> {
    return super.deploy(overrides || {}) as Promise<PXMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PXMock {
    return super.attach(address) as PXMock;
  }
  connect(signer: Signer): PXMock__factory {
    return super.connect(signer) as PXMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockInterface {
    return new utils.Interface(_abi) as PXMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PXMock {
    return new Contract(address, _abi, signerOrProvider) as PXMock;
  }
}
