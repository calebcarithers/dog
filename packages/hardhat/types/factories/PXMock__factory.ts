/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMock, PXMockInterface } from "../PXMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
    ],
    name: "__PXMock_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fuelPuppyDispenser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxRand",
        type: "uint256",
      },
    ],
    name: "randYishInRange",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612599806100206000396000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c806379d90b171161013b578063b43ff0f0116100b8578063d85d95ef1161007c578063d85d95ef146104b9578063e25aee2f146104c1578063e4e4dc42146104d4578063e985e9c5146104e7578063f2fde38b1461052357600080fd5b8063b43ff0f01461046f578063b807f85714610478578063b88d4fde1461048b578063bcb00f291461049e578063c87b56dd146104a657600080fd5b806397b874f7116100ff57806397b874f714610424578063a035386d1461042d578063a144819414610436578063a22cb46514610449578063a6053eb51461045c57600080fd5b806379d90b17146103c55780638777cb93146103e55780638832e6e3146103f85780638da5cb5b1461040b57806395d89b411461041c57600080fd5b806340c10f19116101c957806368a254771161018d57806368a254771461037c5780636c0360eb1461038f5780636d677a741461039757806370a08231146103aa578063715018a6146103bd57600080fd5b806340c10f191461031d57806342842e0e1461033057806342966c68146103435780634f558e79146103565780636352211e1461036957600080fd5b8063095ea7b311610210578063095ea7b3146102c157806318160ddd146102d657806323b872dd146102df5780632d99e94f146102f25780633b4c4b251461030557600080fd5b806301ffc9a714610242578063055fa0d51461026a57806306fdde0314610281578063081812fc14610296575b600080fd5b610255610250366004612142565b610536565b60405190151581526020015b60405180910390f35b61027360ca5481565b604051908152602001610261565b610289610588565b60405161026191906122cc565b6102a96102a43660046121eb565b61061a565b6040516001600160a01b039091168152602001610261565b6102d46102cf3660046120a8565b6106b4565b005b61027360cb5481565b6102d46102ed366004611fd1565b6107ca565b6102736103003660046121eb565b6107fb565b6102d46103133660046121eb565b60ca81905560cb55565b6102d461032b3660046120a8565b610810565b6102d461033e366004611fd1565b61081e565b6102d46103513660046121eb565b610839565b6102556103643660046121eb565b610845565b6102a96103773660046121eb565b610864565b6102d461038a36600461217a565b6108db565b610289610955565b6102d46103a53660046121eb565b610971565b6102736103b8366004611f85565b610b05565b6102d4610b8c565b6103d86103d33660046121eb565b610bc2565b604051610261919061229b565b6102d46103f336600461217a565b610c0f565b6102d46104063660046120d1565b610cec565b6097546001600160a01b03166102a9565b610289610cf7565b61027360d05481565b61027360ce5481565b6102d46104443660046120a8565b610d06565b6102d4610457366004612072565b610d10565b6102d461046a3660046121eb565b610d1b565b61027360cf5481565b6102d46104863660046121eb565b60ce55565b6102d461049936600461200c565b610d3f565b610273610d71565b6102896104b43660046121eb565b610e93565b610273610f7b565b6102d46104cf3660046121eb565b611127565b6102736104e23660046121eb565b6111df565b6102556104f5366004611f9f565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6102d4610531366004611f85565b6111ef565b60006001600160e01b031982166380ac58cd60e01b148061056757506001600160e01b03198216635b5e139f60e01b145b8061058257506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461059790612493565b80601f01602080910402602001604051908101604052809291908181526020018280546105c390612493565b80156106105780601f106105e557610100808354040283529160200191610610565b820191906000526020600020905b8154815290600101906020018083116105f357829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166106985760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006106bf82610864565b9050806001600160a01b0316836001600160a01b0316141561072d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161068f565b336001600160a01b0382161480610749575061074981336104f5565b6107bb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161068f565b6107c58383611287565b505050565b6107d433826112f5565b6107f05760405162461bcd60e51b815260040161068f906123b4565b6107c58383836113ec565b600081610806610d71565b61058291906124e9565b61081a828261158c565b5050565b6107c583838360405180602001604052806000815250610d3f565b610842816116f0565b50565b6000818152606760205260408120546001600160a01b03161515610582565b6000818152606760205260408120546001600160a01b0316806105825760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161068f565b600054610100900460ff16806108f4575060005460ff16155b6109105760405162461bcd60e51b815260040161068f90612331565b600054610100900460ff16158015610932576000805461ffff19166101011790555b61093d848484610c0f565b801561094f576000805461ff00191690555b50505050565b606061096c60408051602081019091526000815290565b905090565b60d0548114156109b55760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b604482015260640161068f565b336109bf82610864565b6001600160a01b031614610a0b5760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b604482015260640161068f565b600081815260cd602052604081205460ca5460cf54919291610a2d9190612405565b600081815260cc60208181526040808420805489865260cd84528286208790558086528286208990558886529390925283208290559183905290859055909150610a76846116f0565b60c95460ce5460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610ac657600080fd5b505af1158015610ada573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afe9190612126565b5050505050565b60006001600160a01b038216610b705760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161068f565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610bb65760405162461bcd60e51b815260040161068f9061237f565b610bc060006117dd565b565b610bca611e2b565b600060cf5483610bda9190612450565b9050604051806040016040528061028083610bf591906124e9565b8152602001610c066102808461241d565b90529392505050565b600054610100900460ff1680610c28575060005460ff16155b610c445760405162461bcd60e51b815260040161068f90612331565b600054610100900460ff16158015610c66576000805461ffff19166101011790555b610c70848461182f565b6001600160a01b038216610c8357600080fd5b60c980546001600160a01b0319166001600160a01b0384161790556102806101e0610cae8183612431565b60cb55610cbb8183612431565b60ca55505064014941658b60ce55620f424060cf55600060d055801561094f576000805461ff001916905550505050565b6107c58383836118b6565b60606066805461059790612493565b61081a82826118e9565b61081a338383611903565b60005b8181101561081a57610d2e610f7b565b50610d38816124ce565b9050610d1e565b610d4933836112f5565b610d655760405162461bcd60e51b815260040161068f906123b4565b61094f848484846119d2565b60ca546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610dbe919061241d565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610e03919061241d565b610e0d4442612405565b610e179190612405565b610e219190612405565b610e2b9190612405565b610e359190612405565b610e3f9190612405565b604051602001610e5191815260200190565b60408051601f1981840301815291905280516020909101209050610e776103e88261241d565b610e83906103e8612431565b610e8d9082612450565b91505090565b6000818152606760205260409020546060906001600160a01b0316610f125760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161068f565b6000610f2960408051602081019091526000815290565b90506000815111610f495760405180602001604052806000815250610f74565b80610f5384611a05565b604051602001610f6492919061222f565b6040516020818303038152906040525b9392505050565b60008060ca5411610fc55760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b604482015260640161068f565b6000610fd260ca546107fb565b60cf54610fdf9190612405565b60d054600082815260cc6020526040902054919250141561100c57600081815260cc602052604090208190555b6000600160ca5460cf546110209190612405565b61102a9190612450565b60d054600082815260cc6020526040902054919250141561105757600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd9092529091208290559250611093338461158c565b60c95460ce546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156110e957600080fd5b505af11580156110fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111219190612126565b50505090565b6097546001600160a01b031633146111515760405162461bcd60e51b815260040161068f9061237f565b60c95460ce546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156111a757600080fd5b505af11580156111bb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190612126565b600060cf54826105829190612450565b6097546001600160a01b031633146112195760405162461bcd60e51b815260040161068f9061237f565b6001600160a01b03811661127e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161068f565b610842816117dd565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906112bc82610864565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152606760205260408120546001600160a01b031661136e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161068f565b600061137983610864565b9050806001600160a01b0316846001600160a01b031614806113b45750836001600160a01b03166113a98461061a565b6001600160a01b0316145b806113e457506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166113ff82610864565b6001600160a01b0316146114675760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161068f565b6001600160a01b0382166114c95760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161068f565b6114d4600082611287565b6001600160a01b03831660009081526068602052604081208054600192906114fd908490612450565b90915550506001600160a01b038216600090815260686020526040812080546001929061152b908490612405565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166115e25760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161068f565b6000818152606760205260409020546001600160a01b0316156116475760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161068f565b6001600160a01b0382166000908152606860205260408120805460019290611670908490612405565b9091555050600081815260676020526040812080546001600160a01b0319166001600160a01b03851617905560ca8054600192906116af908490612450565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006116fb82610864565b9050611708600083611287565b6117376040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b815250611b1f565b61174082611b62565b6001600160a01b0381166000908152606860205260408120805460019290611769908490612450565b92505081905550600160ca60008282546117839190612405565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680611848575060005460ff16155b6118645760405162461bcd60e51b815260040161068f90612331565b600054610100900460ff16158015611886576000805461ffff19166101011790555b61188e611ba7565b611896611ba7565b6118a08383611c12565b80156107c5576000805461ff0019169055505050565b6118c0838361158c565b6118cd6000848484611ca7565b6107c55760405162461bcd60e51b815260040161068f906122df565b61081a8282604051806020016040528060008152506118b6565b816001600160a01b0316836001600160a01b031614156119655760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161068f565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6119dd8484846113ec565b6119e984848484611ca7565b61094f5760405162461bcd60e51b815260040161068f906122df565b606081611a295750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a535780611a3d816124ce565b9150611a4c9050600a8361241d565b9150611a2d565b60008167ffffffffffffffff811115611a7c57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611aa6576020820181803683370190505b5090505b84156113e457611abb600183612450565b9150611ac8600a866124e9565b611ad3906030612405565b60f81b818381518110611af657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611b18600a8661241d565b9450611aaa565b61084281604051602401611b3391906122cc565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611e0a565b61084281604051602401611b7891815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611e0a565b600054610100900460ff1680611bc0575060005460ff16155b611bdc5760405162461bcd60e51b815260040161068f90612331565b600054610100900460ff16158015611bfe576000805461ffff19166101011790555b8015610842576000805461ff001916905550565b600054610100900460ff1680611c2b575060005460ff16155b611c475760405162461bcd60e51b815260040161068f90612331565b600054610100900460ff16158015611c69576000805461ffff19166101011790555b8251611c7c906065906020860190611e49565b508151611c90906066906020850190611e49565b5080156107c5576000805461ff0019169055505050565b60006001600160a01b0384163b15611dff57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ceb90339089908890889060040161225e565b602060405180830381600087803b158015611d0557600080fd5b505af1925050508015611d35575060408051601f3d908101601f19168201909252611d329181019061215e565b60015b611de5573d808015611d63576040519150601f19603f3d011682016040523d82523d6000602084013e611d68565b606091505b508051611ddd5760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e7465720000000000000000606482015260840161068f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506113e4565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60405180604001604052806002906020820280368337509192915050565b828054611e5590612493565b90600052602060002090601f016020900481019282611e775760008555611ebd565b82601f10611e9057805160ff1916838001178555611ebd565b82800160010185558215611ebd579182015b82811115611ebd578251825591602001919060010190611ea2565b50611ec9929150611ecd565b5090565b5b80821115611ec95760008155600101611ece565b80356001600160a01b0381168114611ef957600080fd5b919050565b600082601f830112611f0e578081fd5b813567ffffffffffffffff80821115611f2957611f29612529565b604051601f8301601f19908116603f01168101908282118183101715611f5157611f51612529565b81604052838152866020858801011115611f69578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611f96578081fd5b610f7482611ee2565b60008060408385031215611fb1578081fd5b611fba83611ee2565b9150611fc860208401611ee2565b90509250929050565b600080600060608486031215611fe5578081fd5b611fee84611ee2565b9250611ffc60208501611ee2565b9150604084013590509250925092565b60008060008060808587031215612021578081fd5b61202a85611ee2565b935061203860208601611ee2565b925060408501359150606085013567ffffffffffffffff81111561205a578182fd5b61206687828801611efe565b91505092959194509250565b60008060408385031215612084578182fd5b61208d83611ee2565b9150602083013561209d8161253f565b809150509250929050565b600080604083850312156120ba578182fd5b6120c383611ee2565b946020939093013593505050565b6000806000606084860312156120e5578283fd5b6120ee84611ee2565b925060208401359150604084013567ffffffffffffffff811115612110578182fd5b61211c86828701611efe565b9150509250925092565b600060208284031215612137578081fd5b8151610f748161253f565b600060208284031215612153578081fd5b8135610f748161254d565b60006020828403121561216f578081fd5b8151610f748161254d565b60008060006060848603121561218e578283fd5b833567ffffffffffffffff808211156121a5578485fd5b6121b187838801611efe565b945060208601359150808211156121c6578384fd5b506121d386828701611efe565b9250506121e260408501611ee2565b90509250925092565b6000602082840312156121fc578081fd5b5035919050565b6000815180845261221b816020860160208601612467565b601f01601f19169290920160200192915050565b60008351612241818460208801612467565b835190830190612255818360208801612467565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061229190830184612203565b9695505050505050565b60408101818360005b60028110156122c35781518352602092830192909101906001016122a4565b50505092915050565b602081526000610f746020830184612203565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115612418576124186124fd565b500190565b60008261242c5761242c612513565b500490565b600081600019048311821515161561244b5761244b6124fd565b500290565b600082821015612462576124626124fd565b500390565b60005b8381101561248257818101518382015260200161246a565b8381111561094f5750506000910152565b600181811c908216806124a757607f821691505b602082108114156124c857634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156124e2576124e26124fd565b5060010190565b6000826124f8576124f8612513565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461084257600080fd5b6001600160e01b03198116811461084257600080fdfea2646970667358221220fa5a01a1ab59ac4679bf5e2a409443c1aac02ed21c6dffec47e91398b94cbcc764736f6c63430008040033";

type PXMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMock__factory extends ContractFactory {
  constructor(...args: PXMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMock> {
    return super.deploy(overrides || {}) as Promise<PXMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PXMock {
    return super.attach(address) as PXMock;
  }
  connect(signer: Signer): PXMock__factory {
    return super.connect(signer) as PXMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockInterface {
    return new utils.Interface(_abi) as PXMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PXMock {
    return new Contract(address, _abi, signerOrProvider) as PXMock;
  }
}
