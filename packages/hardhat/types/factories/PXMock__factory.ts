/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMock, PXMockInterface } from "../PXMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
    ],
    name: "__PXMock_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fuelPuppyDispenser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxRand",
        type: "uint256",
      },
    ],
    name: "randYishInRange",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612596806100206000396000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c806379d90b171161013b578063b43ff0f0116100b8578063d85d95ef1161007c578063d85d95ef146104b9578063e25aee2f146104c1578063e4e4dc42146104d4578063e985e9c5146104e7578063f2fde38b1461052357600080fd5b8063b43ff0f01461046f578063b807f85714610478578063b88d4fde1461048b578063bcb00f291461049e578063c87b56dd146104a657600080fd5b806397b874f7116100ff57806397b874f714610424578063a035386d1461042d578063a144819414610436578063a22cb46514610449578063a6053eb51461045c57600080fd5b806379d90b17146103c55780638777cb93146103e55780638832e6e3146103f85780638da5cb5b1461040b57806395d89b411461041c57600080fd5b806340c10f19116101c957806368a254771161018d57806368a254771461037c5780636c0360eb1461038f5780636d677a741461039757806370a08231146103aa578063715018a6146103bd57600080fd5b806340c10f191461031d57806342842e0e1461033057806342966c68146103435780634f558e79146103565780636352211e1461036957600080fd5b8063095ea7b311610210578063095ea7b3146102c157806318160ddd146102d657806323b872dd146102df5780632d99e94f146102f25780633b4c4b251461030557600080fd5b806301ffc9a714610242578063055fa0d51461026a57806306fdde0314610281578063081812fc14610296575b600080fd5b61025561025036600461213f565b610536565b60405190151581526020015b60405180910390f35b61027360ca5481565b604051908152602001610261565b610289610588565b60405161026191906122c9565b6102a96102a43660046121e8565b61061a565b6040516001600160a01b039091168152602001610261565b6102d46102cf3660046120a5565b6106b4565b005b61027360cb5481565b6102d46102ed366004611fce565b6107ca565b6102736103003660046121e8565b6107fb565b6102d46103133660046121e8565b60ca81905560cb55565b6102d461032b3660046120a5565b610810565b6102d461033e366004611fce565b61081e565b6102d46103513660046121e8565b610839565b6102556103643660046121e8565b610845565b6102a96103773660046121e8565b610864565b6102d461038a366004612177565b6108db565b610289610955565b6102d46103a53660046121e8565b610971565b6102736103b8366004611f82565b610b05565b6102d4610b8c565b6103d86103d33660046121e8565b610bc2565b6040516102619190612298565b6102d46103f3366004612177565b610c0f565b6102d46104063660046120ce565b610ce9565b6097546001600160a01b03166102a9565b610289610cf4565b61027360d05481565b61027360ce5481565b6102d46104443660046120a5565b610d03565b6102d461045736600461206f565b610d0d565b6102d461046a3660046121e8565b610d18565b61027360cf5481565b6102d46104863660046121e8565b60ce55565b6102d4610499366004612009565b610d3c565b610273610d6e565b6102896104b43660046121e8565b610e90565b610273610f78565b6102d46104cf3660046121e8565b611124565b6102736104e23660046121e8565b6111dc565b6102556104f5366004611f9c565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6102d4610531366004611f82565b6111ec565b60006001600160e01b031982166380ac58cd60e01b148061056757506001600160e01b03198216635b5e139f60e01b145b8061058257506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461059790612490565b80601f01602080910402602001604051908101604052809291908181526020018280546105c390612490565b80156106105780601f106105e557610100808354040283529160200191610610565b820191906000526020600020905b8154815290600101906020018083116105f357829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166106985760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006106bf82610864565b9050806001600160a01b0316836001600160a01b0316141561072d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161068f565b336001600160a01b0382161480610749575061074981336104f5565b6107bb5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161068f565b6107c58383611284565b505050565b6107d433826112f2565b6107f05760405162461bcd60e51b815260040161068f906123b1565b6107c58383836113e9565b600081610806610d6e565b61058291906124e6565b61081a8282611589565b5050565b6107c583838360405180602001604052806000815250610d3c565b610842816116ed565b50565b6000818152606760205260408120546001600160a01b03161515610582565b6000818152606760205260408120546001600160a01b0316806105825760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161068f565b600054610100900460ff16806108f4575060005460ff16155b6109105760405162461bcd60e51b815260040161068f9061232e565b600054610100900460ff16158015610932576000805461ffff19166101011790555b61093d848484610c0f565b801561094f576000805461ff00191690555b50505050565b606061096c60408051602081019091526000815290565b905090565b60d0548114156109b55760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b604482015260640161068f565b336109bf82610864565b6001600160a01b031614610a0b5760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b604482015260640161068f565b600081815260cd602052604081205460ca5460cf54919291610a2d9190612402565b600081815260cc60208181526040808420805489865260cd84528286208790558086528286208990558886529390925283208290559183905290859055909150610a76846116ed565b60c95460ce5460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610ac657600080fd5b505af1158015610ada573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afe9190612123565b5050505050565b60006001600160a01b038216610b705760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161068f565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610bb65760405162461bcd60e51b815260040161068f9061237c565b610bc060006117da565b565b610bca611e28565b600060cf5483610bda919061244d565b9050604051806040016040528061020083610bf591906124e6565b8152602001610c066102008461241a565b90529392505050565b600054610100900460ff1680610c28575060005460ff16155b610c445760405162461bcd60e51b815260040161068f9061232e565b600054610100900460ff16158015610c66576000805461ffff19166101011790555b610c70848461182c565b6001600160a01b038216610c8357600080fd5b60c980546001600160a01b0319166001600160a01b038416179055600a80610cab818061242e565b60cb55610cb8818361242e565b60ca55505064014941658b60ce55620f424060cf55600060d055801561094f576000805461ff001916905550505050565b6107c58383836118b3565b60606066805461059790612490565b61081a82826118e6565b61081a338383611900565b60005b8181101561081a57610d2b610f78565b50610d35816124cb565b9050610d1b565b610d4633836112f2565b610d625760405162461bcd60e51b815260040161068f906123b1565b61094f848484846119cf565b60ca546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610dbb919061241a565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610e00919061241a565b610e0a4442612402565b610e149190612402565b610e1e9190612402565b610e289190612402565b610e329190612402565b610e3c9190612402565b604051602001610e4e91815260200190565b60408051601f1981840301815291905280516020909101209050610e746103e88261241a565b610e80906103e861242e565b610e8a908261244d565b91505090565b6000818152606760205260409020546060906001600160a01b0316610f0f5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161068f565b6000610f2660408051602081019091526000815290565b90506000815111610f465760405180602001604052806000815250610f71565b80610f5084611a02565b604051602001610f6192919061222c565b6040516020818303038152906040525b9392505050565b60008060ca5411610fc25760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b604482015260640161068f565b6000610fcf60ca546107fb565b60cf54610fdc9190612402565b60d054600082815260cc6020526040902054919250141561100957600081815260cc602052604090208190555b6000600160ca5460cf5461101d9190612402565b611027919061244d565b60d054600082815260cc6020526040902054919250141561105457600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd90925290912082905592506110903384611589565b60c95460ce546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156110e657600080fd5b505af11580156110fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061111e9190612123565b50505090565b6097546001600160a01b0316331461114e5760405162461bcd60e51b815260040161068f9061237c565b60c95460ce546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156111a457600080fd5b505af11580156111b8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190612123565b600060cf5482610582919061244d565b6097546001600160a01b031633146112165760405162461bcd60e51b815260040161068f9061237c565b6001600160a01b03811661127b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161068f565b610842816117da565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906112b982610864565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152606760205260408120546001600160a01b031661136b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161068f565b600061137683610864565b9050806001600160a01b0316846001600160a01b031614806113b15750836001600160a01b03166113a68461061a565b6001600160a01b0316145b806113e157506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166113fc82610864565b6001600160a01b0316146114645760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161068f565b6001600160a01b0382166114c65760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161068f565b6114d1600082611284565b6001600160a01b03831660009081526068602052604081208054600192906114fa90849061244d565b90915550506001600160a01b0382166000908152606860205260408120805460019290611528908490612402565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166115df5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161068f565b6000818152606760205260409020546001600160a01b0316156116445760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161068f565b6001600160a01b038216600090815260686020526040812080546001929061166d908490612402565b9091555050600081815260676020526040812080546001600160a01b0319166001600160a01b03851617905560ca8054600192906116ac90849061244d565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006116f882610864565b9050611705600083611284565b6117346040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b815250611b1c565b61173d82611b5f565b6001600160a01b038116600090815260686020526040812080546001929061176690849061244d565b92505081905550600160ca60008282546117809190612402565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1680611845575060005460ff16155b6118615760405162461bcd60e51b815260040161068f9061232e565b600054610100900460ff16158015611883576000805461ffff19166101011790555b61188b611ba4565b611893611ba4565b61189d8383611c0f565b80156107c5576000805461ff0019169055505050565b6118bd8383611589565b6118ca6000848484611ca4565b6107c55760405162461bcd60e51b815260040161068f906122dc565b61081a8282604051806020016040528060008152506118b3565b816001600160a01b0316836001600160a01b031614156119625760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161068f565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6119da8484846113e9565b6119e684848484611ca4565b61094f5760405162461bcd60e51b815260040161068f906122dc565b606081611a265750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a505780611a3a816124cb565b9150611a499050600a8361241a565b9150611a2a565b60008167ffffffffffffffff811115611a7957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611aa3576020820181803683370190505b5090505b84156113e157611ab860018361244d565b9150611ac5600a866124e6565b611ad0906030612402565b60f81b818381518110611af357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611b15600a8661241a565b9450611aa7565b61084281604051602401611b3091906122c9565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611e07565b61084281604051602401611b7591815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611e07565b600054610100900460ff1680611bbd575060005460ff16155b611bd95760405162461bcd60e51b815260040161068f9061232e565b600054610100900460ff16158015611bfb576000805461ffff19166101011790555b8015610842576000805461ff001916905550565b600054610100900460ff1680611c28575060005460ff16155b611c445760405162461bcd60e51b815260040161068f9061232e565b600054610100900460ff16158015611c66576000805461ffff19166101011790555b8251611c79906065906020860190611e46565b508151611c8d906066906020850190611e46565b5080156107c5576000805461ff0019169055505050565b60006001600160a01b0384163b15611dfc57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ce890339089908890889060040161225b565b602060405180830381600087803b158015611d0257600080fd5b505af1925050508015611d32575060408051601f3d908101601f19168201909252611d2f9181019061215b565b60015b611de2573d808015611d60576040519150601f19603f3d011682016040523d82523d6000602084013e611d65565b606091505b508051611dda5760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e7465720000000000000000606482015260840161068f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506113e1565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60405180604001604052806002906020820280368337509192915050565b828054611e5290612490565b90600052602060002090601f016020900481019282611e745760008555611eba565b82601f10611e8d57805160ff1916838001178555611eba565b82800160010185558215611eba579182015b82811115611eba578251825591602001919060010190611e9f565b50611ec6929150611eca565b5090565b5b80821115611ec65760008155600101611ecb565b80356001600160a01b0381168114611ef657600080fd5b919050565b600082601f830112611f0b578081fd5b813567ffffffffffffffff80821115611f2657611f26612526565b604051601f8301601f19908116603f01168101908282118183101715611f4e57611f4e612526565b81604052838152866020858801011115611f66578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611f93578081fd5b610f7182611edf565b60008060408385031215611fae578081fd5b611fb783611edf565b9150611fc560208401611edf565b90509250929050565b600080600060608486031215611fe2578081fd5b611feb84611edf565b9250611ff960208501611edf565b9150604084013590509250925092565b6000806000806080858703121561201e578081fd5b61202785611edf565b935061203560208601611edf565b925060408501359150606085013567ffffffffffffffff811115612057578182fd5b61206387828801611efb565b91505092959194509250565b60008060408385031215612081578182fd5b61208a83611edf565b9150602083013561209a8161253c565b809150509250929050565b600080604083850312156120b7578182fd5b6120c083611edf565b946020939093013593505050565b6000806000606084860312156120e2578283fd5b6120eb84611edf565b925060208401359150604084013567ffffffffffffffff81111561210d578182fd5b61211986828701611efb565b9150509250925092565b600060208284031215612134578081fd5b8151610f718161253c565b600060208284031215612150578081fd5b8135610f718161254a565b60006020828403121561216c578081fd5b8151610f718161254a565b60008060006060848603121561218b578283fd5b833567ffffffffffffffff808211156121a2578485fd5b6121ae87838801611efb565b945060208601359150808211156121c3578384fd5b506121d086828701611efb565b9250506121df60408501611edf565b90509250925092565b6000602082840312156121f9578081fd5b5035919050565b60008151808452612218816020860160208601612464565b601f01601f19169290920160200192915050565b6000835161223e818460208801612464565b835190830190612252818360208801612464565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061228e90830184612200565b9695505050505050565b60408101818360005b60028110156122c05781518352602092830192909101906001016122a1565b50505092915050565b602081526000610f716020830184612200565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115612415576124156124fa565b500190565b60008261242957612429612510565b500490565b6000816000190483118215151615612448576124486124fa565b500290565b60008282101561245f5761245f6124fa565b500390565b60005b8381101561247f578181015183820152602001612467565b8381111561094f5750506000910152565b600181811c908216806124a457607f821691505b602082108114156124c557634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156124df576124df6124fa565b5060010190565b6000826124f5576124f5612510565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461084257600080fd5b6001600160e01b03198116811461084257600080fdfea2646970667358221220ae1f9914bceba20d108b51288ef98cd505990396928b84f658708e49d98c912264736f6c63430008040033";

type PXMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMock__factory extends ContractFactory {
  constructor(...args: PXMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMock> {
    return super.deploy(overrides || {}) as Promise<PXMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PXMock {
    return super.attach(address) as PXMock;
  }
  connect(signer: Signer): PXMock__factory {
    return super.connect(signer) as PXMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockInterface {
    return new utils.Interface(_abi) as PXMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PXMock {
    return new Contract(address, _abi, signerOrProvider) as PXMock;
  }
}
