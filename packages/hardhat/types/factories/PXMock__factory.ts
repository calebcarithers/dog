/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMock, PXMockInterface } from "../PXMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
    ],
    name: "__PXMock_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "puppers",
        type: "uint256[]",
      },
    ],
    name: "burnPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061285b806100206000396000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c8063715018a611610146578063b43ff0f0116100c3578063d85d95ef11610087578063d85d95ef146104c9578063dbddb26a146104d1578063e4e4dc42146104d9578063e985e9c5146104ec578063f2fde38b14610528578063fc784d491461053b57600080fd5b8063b43ff0f01461047f578063b807f85714610488578063b88d4fde1461049b578063bcb00f29146104ae578063c87b56dd146104b657600080fd5b806397b874f71161010a57806397b874f714610434578063a035386d1461043d578063a144819414610446578063a22cb46514610459578063a6053eb51461046c57600080fd5b8063715018a6146103e057806379d90b17146103e85780638832e6e3146104085780638da5cb5b1461041b57806395d89b411461042c57600080fd5b806342966c68116101d457806367983ca61161019857806367983ca614610396578063690c9f43146103a95780636c0360eb146103b25780636d677a74146103ba57806370a08231146103cd57600080fd5b806342966c68146103415780634f558e79146103545780635334dbb7146103675780635d29904e1461037a5780636352211e1461038357600080fd5b8063109429901161021b57806310942990146102ec57806318160ddd146102ff57806323b872dd1461030857806340c10f191461031b57806342842e0e1461032e57600080fd5b806301ffc9a714610258578063055fa0d51461028057806306fdde0314610297578063081812fc146102ac578063095ea7b3146102d7575b600080fd5b61026b610266366004612390565b61054e565b60405190151581526020015b60405180910390f35b61028960ca5481565b604051908152602001610277565b61029f6105a0565b6040516102779190612592565b6102bf6102ba36600461246f565b610632565b6040516001600160a01b039091168152602001610277565b6102ea6102e536600461224e565b6106cc565b005b6102ea6102fa3660046122cc565b6107e2565b61028960cb5481565b6102ea610316366004612177565b610919565b6102ea61032936600461224e565b61094a565b6102ea61033c366004612177565b610954565b6102ea61034f36600461246f565b61096f565b61026b61036236600461246f565b61097b565b6102ea6103753660046123c8565b61099a565b61028960d25481565b6102bf61039136600461246f565b610a97565b6102ea6103a43660046123c8565b610b0e565b61028960d15481565b61029f610b8d565b6102ea6103c836600461246f565b610b9c565b6102896103db366004612124565b610bca565b6102ea610c51565b6103fb6103f636600461246f565b610cb7565b6040516102779190612561565b6102ea610416366004612277565b610d06565b6097546001600160a01b03166102bf565b61029f610d11565b61028960d05481565b61028960ce5481565b6102ea61045436600461224e565b610d20565b6102ea610467366004612218565b610d2a565b6102ea61047a36600461246f565b610d35565b61028960cf5481565b6102ea61049636600461246f565b60ce55565b6102ea6104a93660046121b2565b610f64565b610289610f9c565b61029f6104c436600461246f565b61109a565b6102ea611197565b61029f6111a1565b6102896104e736600461246f565b61122f565b61026b6104fa366004612145565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6102ea610536366004612124565b61123f565b6102ea610549366004612487565b611307565b60006001600160e01b031982166380ac58cd60e01b148061057f57506001600160e01b03198216635b5e139f60e01b145b8061059a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546105af90612755565b80601f01602080910402602001604051908101604052809291908181526020018280546105db90612755565b80156106285780601f106105fd57610100808354040283529160200191610628565b820191906000526020600020905b81548152906001019060200180831161060b57829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166106b05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006106d782610a97565b9050806001600160a01b0316836001600160a01b031614156107455760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016106a7565b336001600160a01b0382161480610761575061076181336104fa565b6107d35760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016106a7565b6107dd8383611327565b505050565b60008151116108235760405162461bcd60e51b815260206004820152600d60248201526c456d707479207075707065727360981b60448201526064016106a7565b60005b815181101561086f5761085f82828151811061085257634e487b7160e01b600052603260045260246000fd5b6020026020010151611395565b61086881612790565b9050610826565b5060c95460ce5482516001600160a01b039092169163a9059cbb91339161089691906126f3565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044015b602060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109159190612374565b5050565b610923338261157d565b61093f5760405162461bcd60e51b81526004016106a790612645565b6107dd838383611670565b6109158282611810565b6107dd83838360405180602001604052806000815250610f64565b61097881611395565b50565b6000818152606760205260408120546001600160a01b0316151561059a565b600054610100900460ff16806109b3575060005460ff16155b6109cf5760405162461bcd60e51b81526004016106a7906125f7565b600054610100900460ff161580156109f1576000805461ffff19166101011790555b6109fb8787611974565b6001600160a01b038516610a0e57600080fd5b60c980546001600160a01b0319166001600160a01b03871617905564014941658b60ce55620f424060cf55600060d05560d183905560d2829055610a5282846126f3565b60cb5560d25460d154610a6591906126f3565b60ca558351610a7b9060d3906020870190611fe6565b508015610a8e576000805461ff00191690555b50505050505050565b6000818152606760205260408120546001600160a01b03168061059a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016106a7565b600054610100900460ff1680610b27575060005460ff16155b610b435760405162461bcd60e51b81526004016106a7906125f7565b600054610100900460ff16158015610b65576000805461ffff19166101011790555b610b7387878787878761099a565b8015610a8e576000805461ff001916905550505050505050565b6060610b976119fb565b905090565b610ba581611395565b60c95460ce546001600160a01b039091169063a9059cbb9033906108969060016126f3565b60006001600160a01b038216610c355760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016106a7565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610cab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a7565b610cb56000611a0a565b565b610cbf61206a565b600060cf5483610ccf9190612712565b9050604051806040016040528060d15483610cea91906127ab565b815260200160d15483610cfd91906126df565b90529392505050565b6107dd838383611a5c565b6060606680546105af90612755565b6109158282611a8f565b610915338383611aa9565b60008111610d7d5760405162461bcd60e51b81526020600482015260156024820152744e6f6e20706f736974697665207175616e7469747960581b60448201526064016106a7565b60ca54811115610dcf5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f7567682070757070657273206c65667400000000000000000060448201526064016106a7565b60005b81811015610f0357600060ca5411610e235760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016106a7565b6000610e3060ca54611b78565b60cf54610e3d91906126c7565b60d054600082815260cc60205260409020549192501415610e6a57600081815260cc602052604090208190555b6000600160ca5460cf54610e7e91906126c7565b610e889190612712565b60d054600082815260cc60205260409020549192501415610eb557600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd909252909120829055610eef3382611810565b50505080610efc90612790565b9050610dd2565b5060c95460ce546001600160a01b03909116906323b872dd9033903090610f2a90866126f3565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016108c3565b610f6e338361157d565b610f8a5760405162461bcd60e51b81526004016106a790612645565b610f9684848484611b8d565b50505050565b60ca546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610fe991906126df565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c61102e91906126df565b61103844426126c7565b61104291906126c7565b61104c91906126c7565b61105691906126c7565b61106091906126c7565b61106a91906126c7565b60405160200161107c91815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b03166111195760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016106a7565b60006111236119fb565b9050600061113084610cb7565b90506000825111611150576040518060200160405280600081525061118f565b816111628260005b6020020151611bc0565b61116d836001611158565b60405160200161117f939291906124d4565b6040516020818303038152906040525b949350505050565b610cb56001610d35565b60d380546111ae90612755565b80601f01602080910402602001604051908101604052809291908181526020018280546111da90612755565b80156112275780601f106111fc57610100808354040283529160200191611227565b820191906000526020600020905b81548152906001019060200180831161120a57829003601f168201915b505050505081565b600060cf548261059a9190612712565b6097546001600160a01b031633146112995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a7565b6001600160a01b0381166112fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106a7565b61097881611a0a565b600061131382846126f3565b60ca81905560cb555060d19190915560d255565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061135c82610a97565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60d0548114156113d95760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b60448201526064016106a7565b336113e382610a97565b6001600160a01b03161461142f5760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b60448201526064016106a7565b600081815260cd602052604081205460ca5460cf5491929161145191906126c7565b600081815260cc60208181526040808420805489865260cd845282862087905580865282862089905588865293909252832082905583835286905591925061149885610a97565b90506114a5600086611327565b6114d46040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b815250611cda565b6114dd85611d1d565b6001600160a01b0381166000908152606860205260408120805460019290611506908490612712565b92505081905550600160ca600082825461152091906126c7565b909155505060008581526067602052604080822080546001600160a01b0319169055518691906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050505050565b6000818152606760205260408120546001600160a01b03166115f65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106a7565b600061160183610a97565b9050806001600160a01b0316846001600160a01b0316148061163c5750836001600160a01b031661163184610632565b6001600160a01b0316145b8061118f57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff1661118f565b826001600160a01b031661168382610a97565b6001600160a01b0316146116eb5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016106a7565b6001600160a01b03821661174d5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106a7565b611758600082611327565b6001600160a01b0383166000908152606860205260408120805460019290611781908490612712565b90915550506001600160a01b03821660009081526068602052604081208054600192906117af9084906126c7565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166118665760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106a7565b6000818152606760205260409020546001600160a01b0316156118cb5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106a7565b6001600160a01b03821660009081526068602052604081208054600192906118f49084906126c7565b9091555050600081815260676020526040812080546001600160a01b0319166001600160a01b03851617905560ca805460019290611933908490612712565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600054610100900460ff168061198d575060005460ff16155b6119a95760405162461bcd60e51b81526004016106a7906125f7565b600054610100900460ff161580156119cb576000805461ffff19166101011790555b6119d3611d62565b6119db611d62565b6119e58383611dcd565b80156107dd576000805461ff0019169055505050565b606060d380546105af90612755565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611a668383611810565b611a736000848484611e62565b6107dd5760405162461bcd60e51b81526004016106a7906125a5565b610915828260405180602001604052806000815250611a5c565b816001600160a01b0316836001600160a01b03161415611b0b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106a7565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600081611b83610f9c565b61059a91906127ab565b611b98848484611670565b611ba484848484611e62565b610f965760405162461bcd60e51b81526004016106a7906125a5565b606081611be45750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611c0e5780611bf881612790565b9150611c079050600a836126df565b9150611be8565b60008167ffffffffffffffff811115611c3757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c61576020820181803683370190505b5090505b841561118f57611c76600183612712565b9150611c83600a866127ab565b611c8e9060306126c7565b60f81b818381518110611cb157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611cd3600a866126df565b9450611c65565b61097881604051602401611cee9190612592565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611fc5565b61097881604051602401611d3391815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611fc5565b600054610100900460ff1680611d7b575060005460ff16155b611d975760405162461bcd60e51b81526004016106a7906125f7565b600054610100900460ff16158015611db9576000805461ffff19166101011790555b8015610978576000805461ff001916905550565b600054610100900460ff1680611de6575060005460ff16155b611e025760405162461bcd60e51b81526004016106a7906125f7565b600054610100900460ff16158015611e24576000805461ffff19166101011790555b8251611e37906065906020860190611fe6565b508151611e4b906066906020850190611fe6565b5080156107dd576000805461ff0019169055505050565b60006001600160a01b0384163b15611fba57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ea6903390899088908890600401612524565b602060405180830381600087803b158015611ec057600080fd5b505af1925050508015611ef0575060408051601f3d908101601f19168201909252611eed918101906123ac565b60015b611fa0573d808015611f1e576040519150601f19603f3d011682016040523d82523d6000602084013e611f23565b606091505b508051611f985760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e746572000000000000000060648201526084016106a7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061118f565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054611ff290612755565b90600052602060002090601f016020900481019282612014576000855561205a565b82601f1061202d57805160ff191683800117855561205a565b8280016001018555821561205a579182015b8281111561205a57825182559160200191906001019061203f565b50612066929150612088565b5090565b60405180604001604052806002906020820280368337509192915050565b5b808211156120665760008155600101612089565b80356001600160a01b03811681146120b457600080fd5b919050565b600082601f8301126120c9578081fd5b813567ffffffffffffffff8111156120e3576120e36127eb565b6120f6601f8201601f1916602001612696565b81815284602083860101111561210a578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215612135578081fd5b61213e8261209d565b9392505050565b60008060408385031215612157578081fd5b6121608361209d565b915061216e6020840161209d565b90509250929050565b60008060006060848603121561218b578081fd5b6121948461209d565b92506121a26020850161209d565b9150604084013590509250925092565b600080600080608085870312156121c7578081fd5b6121d08561209d565b93506121de6020860161209d565b925060408501359150606085013567ffffffffffffffff811115612200578182fd5b61220c878288016120b9565b91505092959194509250565b6000806040838503121561222a578182fd5b6122338361209d565b9150602083013561224381612801565b809150509250929050565b60008060408385031215612260578182fd5b6122698361209d565b946020939093013593505050565b60008060006060848603121561228b578283fd5b6122948461209d565b925060208401359150604084013567ffffffffffffffff8111156122b6578182fd5b6122c2868287016120b9565b9150509250925092565b600060208083850312156122de578182fd5b823567ffffffffffffffff808211156122f5578384fd5b818501915085601f830112612308578384fd5b81358181111561231a5761231a6127eb565b8060051b915061232b848301612696565b8181528481019084860184860187018a1015612345578788fd5b8795505b83861015612367578035835260019590950194918601918601612349565b5098975050505050505050565b600060208284031215612385578081fd5b815161213e81612801565b6000602082840312156123a1578081fd5b813561213e8161280f565b6000602082840312156123bd578081fd5b815161213e8161280f565b60008060008060008060c087890312156123e0578384fd5b863567ffffffffffffffff808211156123f7578586fd5b6124038a838b016120b9565b97506020890135915080821115612418578586fd5b6124248a838b016120b9565b965061243260408a0161209d565b95506060890135915080821115612447578384fd5b5061245489828a016120b9565b9350506080870135915060a087013590509295509295509295565b600060208284031215612480578081fd5b5035919050565b60008060408385031215612499578182fd5b50508035926020909101359150565b600081518084526124c0816020860160208601612729565b601f01601f19169290920160200192915050565b600084516124e6818460208901612729565b8451908301906124fa818360208901612729565b605f60f81b91019081528351612517816001840160208801612729565b0160010195945050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612557908301846124a8565b9695505050505050565b60408101818360005b600281101561258957815183526020928301929091019060010161256a565b50505092915050565b60208152600061213e60208301846124a8565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff811182821017156126bf576126bf6127eb565b604052919050565b600082198211156126da576126da6127bf565b500190565b6000826126ee576126ee6127d5565b500490565b600081600019048311821515161561270d5761270d6127bf565b500290565b600082821015612724576127246127bf565b500390565b60005b8381101561274457818101518382015260200161272c565b83811115610f965750506000910152565b600181811c9082168061276957607f821691505b6020821081141561278a57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156127a4576127a46127bf565b5060010190565b6000826127ba576127ba6127d5565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461097857600080fd5b6001600160e01b03198116811461097857600080fdfea2646970667358221220db9467e872135adb36767714180208e343c8aa3778aa4abac0d825e23e83689964736f6c63430008040033";

type PXMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMock__factory extends ContractFactory {
  constructor(...args: PXMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMock> {
    return super.deploy(overrides || {}) as Promise<PXMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PXMock {
    return super.attach(address) as PXMock;
  }
  connect(signer: Signer): PXMock__factory {
    return super.connect(signer) as PXMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockInterface {
    return new utils.Interface(_abi) as PXMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PXMock {
    return new Contract(address, _abi, signerOrProvider) as PXMock;
  }
}
