/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMock, PXMockInterface } from "../PXMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fuelPuppyDispenser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxRand",
        type: "uint256",
      },
    ],
    name: "randYishInRange",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405264014941658b600b55620f4240600c556000600d553480156200002657600080fd5b50604051620025283803806200252883398101604081905262000049916200029e565b828282828281600090805190602001906200006692919062000145565b5080516200007c90600190602084019062000145565b5050506200009962000093620000ef60201b60201c565b620000f3565b6001600160a01b038116620000ad57600080fd5b6001600160601b0319606082901b16608052600a80620000ce818062000327565b600855620000dd818362000327565b60075550620003a69650505050505050565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001539062000353565b90600052602060002090601f016020900481019282620001775760008555620001c2565b82601f106200019257805160ff1916838001178555620001c2565b82800160010185558215620001c2579182015b82811115620001c2578251825591602001919060010190620001a5565b50620001d0929150620001d4565b5090565b5b80821115620001d05760008155600101620001d5565b600082601f830112620001fc578081fd5b81516001600160401b038082111562000219576200021962000390565b604051601f8301601f19908116603f0116810190828211818310171562000244576200024462000390565b8160405283815260209250868385880101111562000260578485fd5b8491505b8382101562000283578582018301518183018401529082019062000264565b838211156200029457848385830101525b9695505050505050565b600080600060608486031215620002b3578283fd5b83516001600160401b0380821115620002ca578485fd5b620002d887838801620001eb565b94506020860151915080821115620002ee578384fd5b50620002fd86828701620001eb565b604086015190935090506001600160a01b03811681146200031c578182fd5b809150509250925092565b60008160001904831182151516156200034e57634e487b7160e01b81526011600452602481fd5b500290565b600181811c908216806200036857607f821691505b602082108114156200038a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c612155620003d3600039600081816109e001528181610f72015261104c01526121556000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c806379d90b1711610130578063b43ff0f0116100b8578063d85d95ef1161007c578063d85d95ef1461047d578063e25aee2f14610485578063e4e4dc4214610498578063e985e9c5146104ab578063f2fde38b146104e757600080fd5b8063b43ff0f014610433578063b807f8571461043c578063b88d4fde1461044f578063bcb00f2914610462578063c87b56dd1461046a57600080fd5b806395d89b41116100ff57806395d89b41146103f357806397b874f7146103fb578063a035386d14610404578063a14481941461040d578063a22cb4651461042057600080fd5b806379d90b171461039c5780637e5c067f146103bc5780638832e6e3146103cf5780638da5cb5b146103e257600080fd5b806340c10f19116101b35780636352211e116101825780636352211e146103535780636c0360eb146103665780636d677a741461036e57806370a0823114610381578063715018a61461039457600080fd5b806340c10f191461030757806342842e0e1461031a57806342966c681461032d5780634f558e791461034057600080fd5b8063095ea7b3116101fa578063095ea7b3146102ab57806318160ddd146102c057806323b872dd146102c95780632d99e94f146102dc5780633b4c4b25146102ef57600080fd5b806301ffc9a71461022c578063055fa0d51461025457806306fdde031461026b578063081812fc14610280575b600080fd5b61023f61023a366004611dbd565b6104fa565b60405190151581526020015b60405180910390f35b61025d60075481565b60405190815260200161024b565b61027361054c565b60405161024b9190611ed6565b61029361028e366004611df5565b6105de565b6040516001600160a01b03909116815260200161024b565b6102be6102b9366004611d23565b610678565b005b61025d60085481565b6102be6102d7366004611c4c565b61078e565b61025d6102ea366004611df5565b6107bf565b6102be6102fd366004611df5565b6007819055600855565b6102be610315366004611d23565b6107d4565b6102be610328366004611c4c565b6107e2565b6102be61033b366004611df5565b6107fd565b61023f61034e366004611df5565b610809565b610293610361366004611df5565b610828565b61027361089f565b6102be61037c366004611df5565b6108bb565b61025d61038f366004611c00565b610a6b565b6102be610af2565b6103af6103aa366004611df5565b610b28565b60405161024b9190611ea5565b6102be6103ca366004611d23565b610b75565b6102be6103dd366004611d4c565b610bc3565b6006546001600160a01b0316610293565b610273610bce565b61025d600d5481565b61025d600b5481565b6102be61041b366004611d23565b610bdd565b6102be61042e366004611ced565b610be7565b61025d600c5481565b6102be61044a366004611df5565b600b55565b6102be61045d366004611c87565b610bf2565b61025d610c2a565b610273610478366004611df5565b610d4c565b61025d610e34565b6102be610493366004611df5565b610ffc565b61025d6104a6366004611df5565b6110d0565b61023f6104b9366004611c1a565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102be6104f5366004611c00565b6110e0565b60006001600160e01b031982166380ac58cd60e01b148061052b57506001600160e01b03198216635b5e139f60e01b145b8061054657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461055b9061204f565b80601f01602080910402602001604051908101604052809291908181526020018280546105879061204f565b80156105d45780601f106105a9576101008083540402835291602001916105d4565b820191906000526020600020905b8154815290600101906020018083116105b757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661065c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061068382610828565b9050806001600160a01b0316836001600160a01b031614156106f15760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610653565b336001600160a01b038216148061070d575061070d81336104b9565b61077f5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610653565b6107898383611178565b505050565b61079833826111e6565b6107b45760405162461bcd60e51b815260040161065390611f70565b6107898383836112dd565b6000816107ca610c2a565b61054691906120a5565b6107de828261147d565b5050565b61078983838360405180602001604052806000815250610bf2565b610806816115e1565b50565b6000818152600260205260408120546001600160a01b03161515610546565b6000818152600260205260408120546001600160a01b0316806105465760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610653565b60606108b660408051602081019091526000815290565b905090565b600d548114156108ff5760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b6044820152606401610653565b3361090982610828565b6001600160a01b0316146109555760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b6044820152606401610653565b6000818152600a6020526040812054600754600c549192916109779190611fc1565b60008181526009602081815260408084208054898652600a845282862087905580865282862089905588865293909252832082905591839052908590559091506109c0846115e1565b600b5460405163a9059cbb60e01b815233600482015260248101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b158015610a2c57600080fd5b505af1158015610a40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a649190611da1565b5050505050565b60006001600160a01b038216610ad65760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610653565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b03163314610b1c5760405162461bcd60e51b815260040161065390611f3b565b610b2660006116ce565b565b610b30611b3f565b6000600c5483610b40919061200c565b9050604051806040016040528061020083610b5b91906120a5565b8152602001610b6c61020084611fd9565b90529392505050565b6006546001600160a01b03163314610b9f5760405162461bcd60e51b815260040161065390611f3b565b60005b8181101561078957610bb2610e34565b50610bbc8161208a565b9050610ba2565b610789838383611720565b60606001805461055b9061204f565b6107de8282611753565b6107de33838361176d565b610bfc33836111e6565b610c185760405162461bcd60e51b815260040161065390611f70565b610c248484848461183c565b50505050565b6007546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610c779190611fd9565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610cbc9190611fd9565b610cc64442611fc1565b610cd09190611fc1565b610cda9190611fc1565b610ce49190611fc1565b610cee9190611fc1565b610cf89190611fc1565b604051602001610d0a91815260200190565b60408051601f1981840301815291905280516020909101209050610d306103e882611fd9565b610d3c906103e8611fed565b610d46908261200c565b91505090565b6000818152600260205260409020546060906001600160a01b0316610dcb5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610653565b6000610de260408051602081019091526000815290565b90506000815111610e025760405180602001604052806000815250610e2d565b80610e0c8461186f565b604051602001610e1d929190611e39565b6040516020818303038152906040525b9392505050565b60008060075411610e7e5760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b6044820152606401610653565b6000610e8b6007546107bf565b600c54610e989190611fc1565b600d546000828152600960205260409020549192501415610ec55760008181526009602052604090208190555b60006001600754600c54610ed99190611fc1565b610ee3919061200c565b600d546000828152600960205260409020549192501415610f105760008181526009602052604090208190555b60008281526009602090815260408083208054858552828520805490925590819055808452600a9092529091208290559250610f4c338461147d565b600b546040516323b872dd60e01b815233600482015230602482015260448101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610fbe57600080fd5b505af1158015610fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff69190611da1565b50505090565b6006546001600160a01b031633146110265760405162461bcd60e51b815260040161065390611f3b565b600b546040516323b872dd60e01b815233600482015230602482015260448101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561109857600080fd5b505af11580156110ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107de9190611da1565b6000600c5482610546919061200c565b6006546001600160a01b0316331461110a5760405162461bcd60e51b815260040161065390611f3b565b6001600160a01b03811661116f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610653565b610806816116ce565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906111ad82610828565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661125f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610653565b600061126a83610828565b9050806001600160a01b0316846001600160a01b031614806112a55750836001600160a01b031661129a846105de565b6001600160a01b0316145b806112d557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166112f082610828565b6001600160a01b0316146113585760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610653565b6001600160a01b0382166113ba5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610653565b6113c5600082611178565b6001600160a01b03831660009081526003602052604081208054600192906113ee90849061200c565b90915550506001600160a01b038216600090815260036020526040812080546001929061141c908490611fc1565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166114d35760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610653565b6000818152600260205260409020546001600160a01b0316156115385760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610653565b6001600160a01b0382166000908152600360205260408120805460019290611561908490611fc1565b9091555050600081815260026020526040812080546001600160a01b0319166001600160a01b03851617905560078054600192906115a090849061200c565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006115ec82610828565b90506115f9600083611178565b6116286040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b815250611989565b611631826119cc565b6001600160a01b038116600090815260036020526040812080546001929061165a90849061200c565b925050819055506001600760008282546116749190611fc1565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61172a838361147d565b6117376000848484611a11565b6107895760405162461bcd60e51b815260040161065390611ee9565b6107de828260405180602001604052806000815250611720565b816001600160a01b0316836001600160a01b031614156117cf5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610653565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6118478484846112dd565b61185384848484611a11565b610c245760405162461bcd60e51b815260040161065390611ee9565b6060816118935750506040805180820190915260018152600360fc1b602082015290565b8160005b81156118bd57806118a78161208a565b91506118b69050600a83611fd9565b9150611897565b60008167ffffffffffffffff8111156118e657634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611910576020820181803683370190505b5090505b84156112d55761192560018361200c565b9150611932600a866120a5565b61193d906030611fc1565b60f81b81838151811061196057634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611982600a86611fd9565b9450611914565b6108068160405160240161199d9190611ed6565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611b1e565b610806816040516024016119e291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611b1e565b60006001600160a01b0384163b15611b1357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611a55903390899088908890600401611e68565b602060405180830381600087803b158015611a6f57600080fd5b505af1925050508015611a9f575060408051601f3d908101601f19168201909252611a9c91810190611dd9565b60015b611af9573d808015611acd576040519150601f19603f3d011682016040523d82523d6000602084013e611ad2565b606091505b508051611af15760405162461bcd60e51b815260040161065390611ee9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506112d5565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60405180604001604052806002906020820280368337509192915050565b80356001600160a01b0381168114611b7457600080fd5b919050565b600082601f830112611b89578081fd5b813567ffffffffffffffff80821115611ba457611ba46120e5565b604051601f8301601f19908116603f01168101908282118183101715611bcc57611bcc6120e5565b81604052838152866020858801011115611be4578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611c11578081fd5b610e2d82611b5d565b60008060408385031215611c2c578081fd5b611c3583611b5d565b9150611c4360208401611b5d565b90509250929050565b600080600060608486031215611c60578081fd5b611c6984611b5d565b9250611c7760208501611b5d565b9150604084013590509250925092565b60008060008060808587031215611c9c578081fd5b611ca585611b5d565b9350611cb360208601611b5d565b925060408501359150606085013567ffffffffffffffff811115611cd5578182fd5b611ce187828801611b79565b91505092959194509250565b60008060408385031215611cff578182fd5b611d0883611b5d565b91506020830135611d18816120fb565b809150509250929050565b60008060408385031215611d35578182fd5b611d3e83611b5d565b946020939093013593505050565b600080600060608486031215611d60578283fd5b611d6984611b5d565b925060208401359150604084013567ffffffffffffffff811115611d8b578182fd5b611d9786828701611b79565b9150509250925092565b600060208284031215611db2578081fd5b8151610e2d816120fb565b600060208284031215611dce578081fd5b8135610e2d81612109565b600060208284031215611dea578081fd5b8151610e2d81612109565b600060208284031215611e06578081fd5b5035919050565b60008151808452611e25816020860160208601612023565b601f01601f19169290920160200192915050565b60008351611e4b818460208801612023565b835190830190611e5f818360208801612023565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e9b90830184611e0d565b9695505050505050565b60408101818360005b6002811015611ecd578151835260209283019290910190600101611eae565b50505092915050565b602081526000610e2d6020830184611e0d565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611fd457611fd46120b9565b500190565b600082611fe857611fe86120cf565b500490565b6000816000190483118215151615612007576120076120b9565b500290565b60008282101561201e5761201e6120b9565b500390565b60005b8381101561203e578181015183820152602001612026565b83811115610c245750506000910152565b600181811c9082168061206357607f821691505b6020821081141561208457634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561209e5761209e6120b9565b5060010190565b6000826120b4576120b46120cf565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461080657600080fd5b6001600160e01b03198116811461080657600080fdfea2646970667358221220e46804036aac1f16b38eec1e30425c5da81702f71814a90f845a79fb6d1bb34364736f6c63430008040033";

type PXMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMock__factory extends ContractFactory {
  constructor(...args: PXMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    DOG20Address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMock> {
    return super.deploy(
      name_,
      symbol_,
      DOG20Address,
      overrides || {}
    ) as Promise<PXMock>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    DOG20Address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      DOG20Address,
      overrides || {}
    );
  }
  attach(address: string): PXMock {
    return super.attach(address) as PXMock;
  }
  connect(signer: Signer): PXMock__factory {
    return super.connect(signer) as PXMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockInterface {
    return new utils.Interface(_abi) as PXMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PXMock {
    return new Contract(address, _abi, signerOrProvider) as PXMock;
  }
}
