/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMock, PXMockInterface } from "../PXMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fuelPuppyDispenser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxRand",
        type: "uint256",
      },
    ],
    name: "randYishInRange",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405264014941658b600b556001600c556000600d553480156200002457600080fd5b50604051620024313803806200243183398101604081905262000047916200029c565b828282828281600090805190602001906200006492919062000143565b5080516200007a90600190602084019062000143565b5050506200009762000091620000ed60201b60201c565b620000f1565b6001600160a01b038116620000ab57600080fd5b6001600160601b0319606082901b16608052600a80620000cc818062000325565b600855620000db818362000325565b60075550620003a49650505050505050565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001519062000351565b90600052602060002090601f016020900481019282620001755760008555620001c0565b82601f106200019057805160ff1916838001178555620001c0565b82800160010185558215620001c0579182015b82811115620001c0578251825591602001919060010190620001a3565b50620001ce929150620001d2565b5090565b5b80821115620001ce5760008155600101620001d3565b600082601f830112620001fa578081fd5b81516001600160401b03808211156200021757620002176200038e565b604051601f8301601f19908116603f011681019082821181831017156200024257620002426200038e565b816040528381526020925086838588010111156200025e578485fd5b8491505b8382101562000281578582018301518183018401529082019062000262565b838211156200029257848385830101525b9695505050505050565b600080600060608486031215620002b1578283fd5b83516001600160401b0380821115620002c8578485fd5b620002d687838801620001e9565b94506020860151915080821115620002ec578384fd5b50620002fb86828701620001e9565b604086015190935090506001600160a01b03811681146200031a578182fd5b809150509250925092565b60008160001904831182151516156200034c57634e487b7160e01b81526011600452602481fd5b500290565b600181811c908216806200036657607f821691505b602082108114156200038857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c612060620003d16000396000818161099701528181610edc0152610fb601526120606000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c8063715018a611610125578063b43ff0f0116100ad578063c87b56dd1161007c578063c87b56dd14610434578063d85d95ef14610447578063e25aee2f1461044f578063e985e9c514610462578063f2fde38b1461049e57600080fd5b8063b43ff0f0146103fd578063b807f85714610406578063b88d4fde14610419578063bcb00f291461042c57600080fd5b806395d89b41116100f457806395d89b41146103bd57806397b874f7146103c5578063a035386d146103ce578063a1448194146103d7578063a22cb465146103ea57600080fd5b8063715018a61461037e5780637e5c067f146103865780638832e6e3146103995780638da5cb5b146103ac57600080fd5b80633b4c4b25116101a85780634f558e79116101775780634f558e791461032a5780636352211e1461033d5780636c0360eb146103505780636d677a741461035857806370a082311461036b57600080fd5b80633b4c4b25146102d957806340c10f19146102f157806342842e0e1461030457806342966c681461031757600080fd5b8063095ea7b3116101e4578063095ea7b31461029557806318160ddd146102aa57806323b872dd146102b35780632d99e94f146102c657600080fd5b806301ffc9a714610216578063055fa0d51461023e57806306fdde0314610255578063081812fc1461026a575b600080fd5b610229610224366004611cf9565b6104b1565b60405190151581526020015b60405180910390f35b61024760075481565b604051908152602001610235565b61025d610503565b6040516102359190611de1565b61027d610278366004611d31565b610595565b6040516001600160a01b039091168152602001610235565b6102a86102a3366004611c5f565b61062f565b005b61024760085481565b6102a86102c1366004611b88565b610745565b6102476102d4366004611d31565b610776565b6102a86102e7366004611d31565b6007819055600855565b6102a86102ff366004611c5f565b61078b565b6102a8610312366004611b88565b610799565b6102a8610325366004611d31565b6107b4565b610229610338366004611d31565b6107c0565b61027d61034b366004611d31565b6107df565b61025d610856565b6102a8610366366004611d31565b610872565b610247610379366004611b3c565b610a22565b6102a8610aa9565b6102a8610394366004611c5f565b610adf565b6102a86103a7366004611c88565b610b2d565b6006546001600160a01b031661027d565b61025d610b38565b610247600d5481565b610247600b5481565b6102a86103e5366004611c5f565b610b47565b6102a86103f8366004611c29565b610b51565b610247600c5481565b6102a8610414366004611d31565b600b55565b6102a8610427366004611bc3565b610b5c565b610247610b94565b61025d610442366004611d31565b610cb6565b610247610d9e565b6102a861045d366004611d31565b610f66565b610229610470366004611b56565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102a86104ac366004611b3c565b61103a565b60006001600160e01b031982166380ac58cd60e01b14806104e257506001600160e01b03198216635b5e139f60e01b145b806104fd57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461051290611f5a565b80601f016020809104026020016040519081016040528092919081815260200182805461053e90611f5a565b801561058b5780601f106105605761010080835404028352916020019161058b565b820191906000526020600020905b81548152906001019060200180831161056e57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166106135760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061063a826107df565b9050806001600160a01b0316836001600160a01b031614156106a85760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161060a565b336001600160a01b03821614806106c457506106c48133610470565b6107365760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161060a565b61074083836110d2565b505050565b61074f3382611140565b61076b5760405162461bcd60e51b815260040161060a90611e7b565b610740838383611237565b600081610781610b94565b6104fd9190611fb0565b61079582826113d7565b5050565b61074083838360405180602001604052806000815250610b5c565b6107bd8161153b565b50565b6000818152600260205260408120546001600160a01b031615156104fd565b6000818152600260205260408120546001600160a01b0316806104fd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161060a565b606061086d60408051602081019091526000815290565b905090565b600d548114156108b65760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b604482015260640161060a565b336108c0826107df565b6001600160a01b03161461090c5760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b604482015260640161060a565b6000818152600a6020526040812054600754600c5491929161092e9190611ecc565b60008181526009602081815260408084208054898652600a845282862087905580865282862089905588865293909252832082905591839052908590559091506109778461153b565b600b5460405163a9059cbb60e01b815233600482015260248101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156109e357600080fd5b505af11580156109f7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1b9190611cdd565b5050505050565b60006001600160a01b038216610a8d5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161060a565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b03163314610ad35760405162461bcd60e51b815260040161060a90611e46565b610add6000611628565b565b6006546001600160a01b03163314610b095760405162461bcd60e51b815260040161060a90611e46565b60005b8181101561074057610b1c610d9e565b50610b2681611f95565b9050610b0c565b61074083838361167a565b60606001805461051290611f5a565b61079582826116ad565b6107953383836116c7565b610b663383611140565b610b825760405162461bcd60e51b815260040161060a90611e7b565b610b8e84848484611796565b50505050565b6007546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610be19190611ee4565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610c269190611ee4565b610c304442611ecc565b610c3a9190611ecc565b610c449190611ecc565b610c4e9190611ecc565b610c589190611ecc565b610c629190611ecc565b604051602001610c7491815260200190565b60408051601f1981840301815291905280516020909101209050610c9a6103e882611ee4565b610ca6906103e8611ef8565b610cb09082611f17565b91505090565b6000818152600260205260409020546060906001600160a01b0316610d355760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161060a565b6000610d4c60408051602081019091526000815290565b90506000815111610d6c5760405180602001604052806000815250610d97565b80610d76846117c9565b604051602001610d87929190611d75565b6040516020818303038152906040525b9392505050565b60008060075411610de85760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b604482015260640161060a565b6000610df5600754610776565b600c54610e029190611ecc565b600d546000828152600960205260409020549192501415610e2f5760008181526009602052604090208190555b60006001600754600c54610e439190611ecc565b610e4d9190611f17565b600d546000828152600960205260409020549192501415610e7a5760008181526009602052604090208190555b60008281526009602090815260408083208054858552828520805490925590819055808452600a9092529091208290559250610eb633846113d7565b600b546040516323b872dd60e01b815233600482015230602482015260448101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610f2857600080fd5b505af1158015610f3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f609190611cdd565b50505090565b6006546001600160a01b03163314610f905760405162461bcd60e51b815260040161060a90611e46565b600b546040516323b872dd60e01b815233600482015230602482015260448101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561100257600080fd5b505af1158015611016573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107959190611cdd565b6006546001600160a01b031633146110645760405162461bcd60e51b815260040161060a90611e46565b6001600160a01b0381166110c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161060a565b6107bd81611628565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611107826107df565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166111b95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161060a565b60006111c4836107df565b9050806001600160a01b0316846001600160a01b031614806111ff5750836001600160a01b03166111f484610595565b6001600160a01b0316145b8061122f57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661124a826107df565b6001600160a01b0316146112b25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161060a565b6001600160a01b0382166113145760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161060a565b61131f6000826110d2565b6001600160a01b0383166000908152600360205260408120805460019290611348908490611f17565b90915550506001600160a01b0382166000908152600360205260408120805460019290611376908490611ecc565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b03821661142d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161060a565b6000818152600260205260409020546001600160a01b0316156114925760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161060a565b6001600160a01b03821660009081526003602052604081208054600192906114bb908490611ecc565b9091555050600081815260026020526040812080546001600160a01b0319166001600160a01b03851617905560078054600192906114fa908490611f17565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000611546826107df565b90506115536000836110d2565b6115826040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b8152506118e3565b61158b82611926565b6001600160a01b03811660009081526003602052604081208054600192906115b4908490611f17565b925050819055506001600760008282546115ce9190611ecc565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61168483836113d7565b611691600084848461196b565b6107405760405162461bcd60e51b815260040161060a90611df4565b61079582826040518060200160405280600081525061167a565b816001600160a01b0316836001600160a01b031614156117295760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161060a565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6117a1848484611237565b6117ad8484848461196b565b610b8e5760405162461bcd60e51b815260040161060a90611df4565b6060816117ed5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611817578061180181611f95565b91506118109050600a83611ee4565b91506117f1565b60008167ffffffffffffffff81111561184057634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561186a576020820181803683370190505b5090505b841561122f5761187f600183611f17565b915061188c600a86611fb0565b611897906030611ecc565b60f81b8183815181106118ba57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506118dc600a86611ee4565b945061186e565b6107bd816040516024016118f79190611de1565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611a78565b6107bd8160405160240161193c91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611a78565b60006001600160a01b0384163b15611a6d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906119af903390899088908890600401611da4565b602060405180830381600087803b1580156119c957600080fd5b505af19250505080156119f9575060408051601f3d908101601f191682019092526119f691810190611d15565b60015b611a53573d808015611a27576040519150601f19603f3d011682016040523d82523d6000602084013e611a2c565b606091505b508051611a4b5760405162461bcd60e51b815260040161060a90611df4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061122f565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b0381168114611ab057600080fd5b919050565b600082601f830112611ac5578081fd5b813567ffffffffffffffff80821115611ae057611ae0611ff0565b604051601f8301601f19908116603f01168101908282118183101715611b0857611b08611ff0565b81604052838152866020858801011115611b20578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611b4d578081fd5b610d9782611a99565b60008060408385031215611b68578081fd5b611b7183611a99565b9150611b7f60208401611a99565b90509250929050565b600080600060608486031215611b9c578081fd5b611ba584611a99565b9250611bb360208501611a99565b9150604084013590509250925092565b60008060008060808587031215611bd8578081fd5b611be185611a99565b9350611bef60208601611a99565b925060408501359150606085013567ffffffffffffffff811115611c11578182fd5b611c1d87828801611ab5565b91505092959194509250565b60008060408385031215611c3b578182fd5b611c4483611a99565b91506020830135611c5481612006565b809150509250929050565b60008060408385031215611c71578182fd5b611c7a83611a99565b946020939093013593505050565b600080600060608486031215611c9c578283fd5b611ca584611a99565b925060208401359150604084013567ffffffffffffffff811115611cc7578182fd5b611cd386828701611ab5565b9150509250925092565b600060208284031215611cee578081fd5b8151610d9781612006565b600060208284031215611d0a578081fd5b8135610d9781612014565b600060208284031215611d26578081fd5b8151610d9781612014565b600060208284031215611d42578081fd5b5035919050565b60008151808452611d61816020860160208601611f2e565b601f01601f19169290920160200192915050565b60008351611d87818460208801611f2e565b835190830190611d9b818360208801611f2e565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611dd790830184611d49565b9695505050505050565b602081526000610d976020830184611d49565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611edf57611edf611fc4565b500190565b600082611ef357611ef3611fda565b500490565b6000816000190483118215151615611f1257611f12611fc4565b500290565b600082821015611f2957611f29611fc4565b500390565b60005b83811015611f49578181015183820152602001611f31565b83811115610b8e5750506000910152565b600181811c90821680611f6e57607f821691505b60208210811415611f8f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611fa957611fa9611fc4565b5060010190565b600082611fbf57611fbf611fda565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146107bd57600080fd5b6001600160e01b0319811681146107bd57600080fdfea26469706673582212201454e899c4adf644766095bc254310d0f6e1e1618677415f43dddfd3c501d7c464736f6c63430008040033";

type PXMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMock__factory extends ContractFactory {
  constructor(...args: PXMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    DOG20Address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMock> {
    return super.deploy(
      name_,
      symbol_,
      DOG20Address,
      overrides || {}
    ) as Promise<PXMock>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    DOG20Address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      DOG20Address,
      overrides || {}
    );
  }
  attach(address: string): PXMock {
    return super.attach(address) as PXMock;
  }
  connect(signer: Signer): PXMock__factory {
    return super.connect(signer) as PXMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockInterface {
    return new utils.Interface(_abi) as PXMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PXMock {
    return new Contract(address, _abi, signerOrProvider) as PXMock;
  }
}
