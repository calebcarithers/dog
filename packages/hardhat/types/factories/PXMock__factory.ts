/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMock, PXMockInterface } from "../PXMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
    ],
    name: "__PXMock_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "puppers",
        type: "uint256[]",
      },
    ],
    name: "burnPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061289b806100206000396000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c8063715018a611610146578063b43ff0f0116100c3578063d85d95ef11610087578063d85d95ef146104c9578063dbddb26a146104d1578063e4e4dc42146104d9578063e985e9c5146104ec578063f2fde38b14610528578063fc784d491461053b57600080fd5b8063b43ff0f01461047f578063b807f85714610488578063b88d4fde1461049b578063bcb00f29146104ae578063c87b56dd146104b657600080fd5b806397b874f71161010a57806397b874f714610434578063a035386d1461043d578063a144819414610446578063a22cb46514610459578063a6053eb51461046c57600080fd5b8063715018a6146103e057806379d90b17146103e85780638832e6e3146104085780638da5cb5b1461041b57806395d89b411461042c57600080fd5b806342966c68116101d457806367983ca61161019857806367983ca614610396578063690c9f43146103a95780636c0360eb146103b25780636d677a74146103ba57806370a08231146103cd57600080fd5b806342966c68146103415780634f558e79146103545780635334dbb7146103675780635d29904e1461037a5780636352211e1461038357600080fd5b8063109429901161021b57806310942990146102ec57806318160ddd146102ff57806323b872dd1461030857806340c10f191461031b57806342842e0e1461032e57600080fd5b806301ffc9a714610258578063055fa0d51461028057806306fdde0314610297578063081812fc146102ac578063095ea7b3146102d7575b600080fd5b61026b61026636600461238c565b61054e565b60405190151581526020015b60405180910390f35b61028960ca5481565b604051908152602001610277565b61029f6105a0565b60405161027791906125d2565b6102bf6102ba36600461246b565b610632565b6040516001600160a01b039091168152602001610277565b6102ea6102e536600461224a565b6106cc565b005b6102ea6102fa3660046122c8565b6107e2565b61028960cb5481565b6102ea610316366004612173565b610919565b6102ea61032936600461224a565b61094a565b6102ea61033c366004612173565b610954565b6102ea61034f36600461246b565b61096f565b61026b61036236600461246b565b61097b565b6102ea6103753660046123c4565b61099a565b61028960d25481565b6102bf61039136600461246b565b610a9c565b6102ea6103a43660046123c4565b610b13565b61028960d15481565b61029f610b92565b6102ea6103c836600461246b565b610ba1565b6102896103db366004612120565b610bcf565b6102ea610c56565b6103fb6103f636600461246b565b610cbc565b60405161027791906125a1565b6102ea610416366004612273565b610d0b565b6097546001600160a01b03166102bf565b61029f610d16565b61028960d05481565b61028960ce5481565b6102ea61045436600461224a565b610d25565b6102ea610467366004612214565b610d2f565b6102ea61047a36600461246b565b610d3a565b61028960cf5481565b6102ea61049636600461246b565b60ce55565b6102ea6104a93660046121ae565b610f60565b610289610f98565b61029f6104c436600461246b565b611096565b6102ea611193565b61029f61119d565b6102896104e736600461246b565b61122b565b61026b6104fa366004612141565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6102ea610536366004612120565b61123b565b6102ea610549366004612483565b611303565b60006001600160e01b031982166380ac58cd60e01b148061057f57506001600160e01b03198216635b5e139f60e01b145b8061059a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546105af90612795565b80601f01602080910402602001604051908101604052809291908181526020018280546105db90612795565b80156106285780601f106105fd57610100808354040283529160200191610628565b820191906000526020600020905b81548152906001019060200180831161060b57829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166106b05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006106d782610a9c565b9050806001600160a01b0316836001600160a01b031614156107455760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016106a7565b336001600160a01b0382161480610761575061076181336104fa565b6107d35760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016106a7565b6107dd8383611323565b505050565b60008151116108235760405162461bcd60e51b815260206004820152600d60248201526c456d707479207075707065727360981b60448201526064016106a7565b60005b815181101561086f5761085f82828151811061085257634e487b7160e01b600052603260045260246000fd5b6020026020010151611391565b610868816127d0565b9050610826565b5060c95460ce5482516001600160a01b039092169163a9059cbb9133916108969190612733565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044015b602060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109159190612370565b5050565b6109233382611579565b61093f5760405162461bcd60e51b81526004016106a790612685565b6107dd83838361166c565b610915828261180c565b6107dd83838360405180602001604052806000815250610f60565b61097881611391565b50565b6000818152606760205260408120546001600160a01b0316151561059a565b600054610100900460ff16806109b3575060005460ff16155b6109cf5760405162461bcd60e51b81526004016106a790612637565b600054610100900460ff161580156109f1576000805461ffff19166101011790555b6109fb8787611970565b6001600160a01b038516610a0e57600080fd5b60c980546001600160a01b0319166001600160a01b038716179055690bb28f98c1e0715ce00060ce55620f424060cf55600060d05560d183905560d2829055610a578284612733565b60cb5560d25460d154610a6a9190612733565b60ca558351610a809060d3906020870190611fe2565b508015610a93576000805461ff00191690555b50505050505050565b6000818152606760205260408120546001600160a01b03168061059a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016106a7565b600054610100900460ff1680610b2c575060005460ff16155b610b485760405162461bcd60e51b81526004016106a790612637565b600054610100900460ff16158015610b6a576000805461ffff19166101011790555b610b7887878787878761099a565b8015610a93576000805461ff001916905550505050505050565b6060610b9c6119f7565b905090565b610baa81611391565b60c95460ce546001600160a01b039091169063a9059cbb903390610896906001612733565b60006001600160a01b038216610c3a5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016106a7565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610cb05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a7565b610cba6000611a06565b565b610cc4612066565b600060cf5483610cd49190612752565b9050604051806040016040528060d15483610cef91906127eb565b815260200160d15483610d02919061271f565b90529392505050565b6107dd838383611a58565b6060606680546105af90612795565b6109158282611a8b565b610915338383611aa5565b60008111610d825760405162461bcd60e51b81526020600482015260156024820152744e6f6e20706f736974697665207175616e7469747960581b60448201526064016106a7565b60ca54811115610dcb5760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016106a7565b60005b81811015610eff57600060ca5411610e1f5760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016106a7565b6000610e2c60ca54611b74565b60cf54610e399190612707565b60d054600082815260cc60205260409020549192501415610e6657600081815260cc602052604090208190555b6000600160ca5460cf54610e7a9190612707565b610e849190612752565b60d054600082815260cc60205260409020549192501415610eb157600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd909252909120829055610eeb338261180c565b50505080610ef8906127d0565b9050610dce565b5060c95460ce546001600160a01b03909116906323b872dd9033903090610f269086612733565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016108c3565b610f6a3383611579565b610f865760405162461bcd60e51b81526004016106a790612685565b610f9284848484611b89565b50505050565b60ca546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610fe5919061271f565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c61102a919061271f565b6110344442612707565b61103e9190612707565b6110489190612707565b6110529190612707565b61105c9190612707565b6110669190612707565b60405160200161107891815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b03166111155760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016106a7565b600061111f6119f7565b9050600061112c84610cbc565b9050600082511161114c576040518060200160405280600081525061118b565b8161115e8260005b6020020151611bbc565b611169836001611154565b60405160200161117b939291906124d0565b6040516020818303038152906040525b949350505050565b610cba6001610d3a565b60d380546111aa90612795565b80601f01602080910402602001604051908101604052809291908181526020018280546111d690612795565b80156112235780601f106111f857610100808354040283529160200191611223565b820191906000526020600020905b81548152906001019060200180831161120657829003601f168201915b505050505081565b600060cf548261059a9190612752565b6097546001600160a01b031633146112955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106a7565b6001600160a01b0381166112fa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106a7565b61097881611a06565b600061130f8284612733565b60ca81905560cb555060d19190915560d255565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061135882610a9c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60d0548114156113d55760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b60448201526064016106a7565b336113df82610a9c565b6001600160a01b03161461142b5760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b60448201526064016106a7565b600081815260cd602052604081205460ca5460cf5491929161144d9190612707565b600081815260cc60208181526040808420805489865260cd845282862087905580865282862089905588865293909252832082905583835286905591925061149485610a9c565b90506114a1600086611323565b6114d06040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b815250611cd6565b6114d985611d19565b6001600160a01b0381166000908152606860205260408120805460019290611502908490612752565b92505081905550600160ca600082825461151c9190612707565b909155505060008581526067602052604080822080546001600160a01b0319169055518691906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050505050565b6000818152606760205260408120546001600160a01b03166115f25760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106a7565b60006115fd83610a9c565b9050806001600160a01b0316846001600160a01b031614806116385750836001600160a01b031661162d84610632565b6001600160a01b0316145b8061118b57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff1661118b565b826001600160a01b031661167f82610a9c565b6001600160a01b0316146116e75760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016106a7565b6001600160a01b0382166117495760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106a7565b611754600082611323565b6001600160a01b038316600090815260686020526040812080546001929061177d908490612752565b90915550506001600160a01b03821660009081526068602052604081208054600192906117ab908490612707565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166118625760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106a7565b6000818152606760205260409020546001600160a01b0316156118c75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106a7565b6001600160a01b03821660009081526068602052604081208054600192906118f0908490612707565b9091555050600081815260676020526040812080546001600160a01b0319166001600160a01b03851617905560ca80546001929061192f908490612752565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600054610100900460ff1680611989575060005460ff16155b6119a55760405162461bcd60e51b81526004016106a790612637565b600054610100900460ff161580156119c7576000805461ffff19166101011790555b6119cf611d5e565b6119d7611d5e565b6119e18383611dc9565b80156107dd576000805461ff0019169055505050565b606060d380546105af90612795565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611a62838361180c565b611a6f6000848484611e5e565b6107dd5760405162461bcd60e51b81526004016106a7906125e5565b610915828260405180602001604052806000815250611a58565b816001600160a01b0316836001600160a01b03161415611b075760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106a7565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600081611b7f610f98565b61059a91906127eb565b611b9484848461166c565b611ba084848484611e5e565b610f925760405162461bcd60e51b81526004016106a7906125e5565b606081611be05750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611c0a5780611bf4816127d0565b9150611c039050600a8361271f565b9150611be4565b60008167ffffffffffffffff811115611c3357634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c5d576020820181803683370190505b5090505b841561118b57611c72600183612752565b9150611c7f600a866127eb565b611c8a906030612707565b60f81b818381518110611cad57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611ccf600a8661271f565b9450611c61565b61097881604051602401611cea91906125d2565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611fc1565b61097881604051602401611d2f91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611fc1565b600054610100900460ff1680611d77575060005460ff16155b611d935760405162461bcd60e51b81526004016106a790612637565b600054610100900460ff16158015611db5576000805461ffff19166101011790555b8015610978576000805461ff001916905550565b600054610100900460ff1680611de2575060005460ff16155b611dfe5760405162461bcd60e51b81526004016106a790612637565b600054610100900460ff16158015611e20576000805461ffff19166101011790555b8251611e33906065906020860190611fe2565b508151611e47906066906020850190611fe2565b5080156107dd576000805461ff0019169055505050565b60006001600160a01b0384163b15611fb657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ea2903390899088908890600401612564565b602060405180830381600087803b158015611ebc57600080fd5b505af1925050508015611eec575060408051601f3d908101601f19168201909252611ee9918101906123a8565b60015b611f9c573d808015611f1a576040519150601f19603f3d011682016040523d82523d6000602084013e611f1f565b606091505b508051611f945760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e746572000000000000000060648201526084016106a7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061118b565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054611fee90612795565b90600052602060002090601f0160209004810192826120105760008555612056565b82601f1061202957805160ff1916838001178555612056565b82800160010185558215612056579182015b8281111561205657825182559160200191906001019061203b565b50612062929150612084565b5090565b60405180604001604052806002906020820280368337509192915050565b5b808211156120625760008155600101612085565b80356001600160a01b03811681146120b057600080fd5b919050565b600082601f8301126120c5578081fd5b813567ffffffffffffffff8111156120df576120df61282b565b6120f2601f8201601f19166020016126d6565b818152846020838601011115612106578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215612131578081fd5b61213a82612099565b9392505050565b60008060408385031215612153578081fd5b61215c83612099565b915061216a60208401612099565b90509250929050565b600080600060608486031215612187578081fd5b61219084612099565b925061219e60208501612099565b9150604084013590509250925092565b600080600080608085870312156121c3578081fd5b6121cc85612099565b93506121da60208601612099565b925060408501359150606085013567ffffffffffffffff8111156121fc578182fd5b612208878288016120b5565b91505092959194509250565b60008060408385031215612226578182fd5b61222f83612099565b9150602083013561223f81612841565b809150509250929050565b6000806040838503121561225c578182fd5b61226583612099565b946020939093013593505050565b600080600060608486031215612287578283fd5b61229084612099565b925060208401359150604084013567ffffffffffffffff8111156122b2578182fd5b6122be868287016120b5565b9150509250925092565b600060208083850312156122da578182fd5b823567ffffffffffffffff808211156122f1578384fd5b818501915085601f830112612304578384fd5b8135818111156123165761231661282b565b8060051b91506123278483016126d6565b8181528481019084860184860187018a1015612341578788fd5b8795505b83861015612363578035835260019590950194918601918601612345565b5098975050505050505050565b600060208284031215612381578081fd5b815161213a81612841565b60006020828403121561239d578081fd5b813561213a8161284f565b6000602082840312156123b9578081fd5b815161213a8161284f565b60008060008060008060c087890312156123dc578384fd5b863567ffffffffffffffff808211156123f3578586fd5b6123ff8a838b016120b5565b97506020890135915080821115612414578586fd5b6124208a838b016120b5565b965061242e60408a01612099565b95506060890135915080821115612443578384fd5b5061245089828a016120b5565b9350506080870135915060a087013590509295509295509295565b60006020828403121561247c578081fd5b5035919050565b60008060408385031215612495578182fd5b50508035926020909101359150565b600081518084526124bc816020860160208601612769565b601f01601f19169290920160200192915050565b600084516124e2818460208901612769565b676d6574616461746160c01b908301908152602f60f81b6008820152686d657461646174612d60b81b60098201528451612523816012840160208901612769565b605f60f81b601292909101918201528351612545816013840160208801612769565b64173539b7b760d91b6013929091019182015260180195945050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612597908301846124a4565b9695505050505050565b60408101818360005b60028110156125c95781518352602092830192909101906001016125aa565b50505092915050565b60208152600061213a60208301846124a4565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff811182821017156126ff576126ff61282b565b604052919050565b6000821982111561271a5761271a6127ff565b500190565b60008261272e5761272e612815565b500490565b600081600019048311821515161561274d5761274d6127ff565b500290565b600082821015612764576127646127ff565b500390565b60005b8381101561278457818101518382015260200161276c565b83811115610f925750506000910152565b600181811c908216806127a957607f821691505b602082108114156127ca57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156127e4576127e46127ff565b5060010190565b6000826127fa576127fa612815565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461097857600080fd5b6001600160e01b03198116811461097857600080fdfea2646970667358221220dfad1be6eac9386f10e54129f5bd8d253528d530c4c78ec2ebd11d8e5099901664736f6c63430008040033";

type PXMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMock__factory extends ContractFactory {
  constructor(...args: PXMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMock> {
    return super.deploy(overrides || {}) as Promise<PXMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PXMock {
    return super.attach(address) as PXMock;
  }
  connect(signer: Signer): PXMock__factory {
    return super.connect(signer) as PXMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockInterface {
    return new utils.Interface(_abi) as PXMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PXMock {
    return new Contract(address, _abi, signerOrProvider) as PXMock;
  }
}
