/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMockV2, PXMockV2Interface } from "../PXMockV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_DEV_",
        type: "address",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_PLEASR_",
        type: "address",
      },
    ],
    name: "__PXMock_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_DEV_",
        type: "address",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_PLEASR_",
        type: "address",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "puppers",
        type: "uint256[]",
      },
    ],
    name: "burnPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "v2Test",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff168061002a575060005460ff16155b6100915760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100b3576000805461ffff19166101011790555b80156100c5576000805461ff00191690555b5061263c80620000d66000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806397a4dd281161010f578063b807f857116100a2578063dbddb26a11610071578063dbddb26a146103ee578063e4e4dc42146103f6578063e985e9c514610409578063fc784d491461044557600080fd5b8063b807f857146103ad578063b88d4fde146103c0578063bcb00f29146103d3578063c87b56dd146103db57600080fd5b8063a6053eb5116100de578063a6053eb51461036b578063a739d6441461037e578063b43ff0f014610391578063b78a7d721461039a57600080fd5b806397a4dd281461033e57806397b874f714610346578063a035386d1461034f578063a22cb4651461035857600080fd5b806323b872dd11610187578063690c9f4311610156578063690c9f43146102fa57806370a082311461030357806379d90b171461031657806395d89b411461033657600080fd5b806323b872dd146102b857806342842e0e146102cb5780635d29904e146102de5780636352211e146102e757600080fd5b8063095ea7b3116101c3578063095ea7b314610274578063109429901461028957806318160ddd1461029c578063199f90a6146102a557600080fd5b806301ffc9a7146101f5578063055fa0d51461021d57806306fdde0314610234578063081812fc14610249575b600080fd5b610208610203366004612163565b610458565b60405190151581526020015b60405180910390f35b61022660985481565b604051908152602001610214565b61023c6104aa565b60405161021491906123c5565b61025c610257366004612265565b61053c565b6040516001600160a01b039091168152602001610214565b610287610282366004612076565b6105d6565b005b61028761029736600461209f565b6106ec565b61022660995481565b6102876102b336600461219b565b610794565b6102876102c6366004611f8c565b6108d2565b6102876102d9366004611f8c565b610903565b61022660a05481565b61025c6102f5366004612265565b61091e565b610226609f5481565b610226610311366004611f40565b610995565b610329610324366004612265565b610a1c565b6040516102149190612394565b61023c610a6b565b609854610226565b610226609e5481565b610226609c5481565b610287610366366004612040565b610a7a565b610287610379366004612265565b610a89565b61028761038c36600461219b565b610cae565b610226609d5481565b60975461025c906001600160a01b031681565b6102876103bb366004612265565b609c55565b6102876103ce366004611fc7565b610d31565b610226610d69565b61023c6103e9366004612265565b610e74565b61023c610f84565b610226610404366004612265565b611012565b610208610417366004611f5a565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61028761045336600461227d565b611022565b60006001600160e01b031982166380ac58cd60e01b148061048957506001600160e01b03198216635b5e139f60e01b145b806104a457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546104b990612536565b80601f01602080910402602001604051908101604052809291908181526020018280546104e590612536565b80156105325780601f1061050757610100808354040283529160200191610532565b820191906000526020600020905b81548152906001019060200180831161051557829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166105ba5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105e18261091e565b9050806001600160a01b0316836001600160a01b0316141561064f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105b1565b336001600160a01b038216148061066b575061066b8133610417565b6106dd5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105b1565b6106e78383611042565b505050565b600081511161072d5760405162461bcd60e51b815260206004820152600d60248201526c456d707479207075707065727360981b60448201526064016105b1565b60005b81518110156107795761076982828151811061075c57634e487b7160e01b600052603260045260246000fd5b60200260200101516110b0565b61077281612571565b9050610730565b50610791609c54825161078c91906124d4565b6111ce565b50565b600054610100900460ff16806107ad575060005460ff16155b6107c95760405162461bcd60e51b81526004016105b1906123d8565b600054610100900460ff161580156107eb576000805461ffff19166101011790555b6107f589896113e4565b6001600160a01b03871661080857600080fd5b609780546001600160a01b0319166001600160a01b038916179055690bb28f98c1e0715ce000609c55620f4240609d556000609e55609f85905560a084905561085184866124d4565b60995560a054609f5461086491906124d4565b609855855161087a9060a1906020890190611def565b5060a280546001600160a01b038086166001600160a01b03199283161790925560a3805492851692909116919091179055602860a455603c60a55580156108c7576000805461ff00191690555b505050505050505050565b6108dc338261146b565b6108f85760405162461bcd60e51b81526004016105b190612426565b6106e783838361155e565b6106e783838360405180602001604052806000815250610d31565b6000818152606760205260408120546001600160a01b0316806104a45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105b1565b60006001600160a01b038216610a005760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105b1565b506001600160a01b031660009081526068602052604090205490565b610a24611e73565b6000609d5483610a3491906124f3565b90506040518060400160405280609f5483610a4f919061258c565b8152602001609f5483610a6291906124c0565b90529392505050565b6060606680546104b990612536565b610a853383836116fe565b5050565b60008111610ad15760405162461bcd60e51b81526020600482015260156024820152744e6f6e20706f736974697665207175616e7469747960581b60448201526064016105b1565b609854811115610b1a5760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016105b1565b60005b81811015610c05576000610b326098546117cd565b609d54610b3f91906124a8565b609e546000828152609a60205260409020549192501415610b6c576000818152609a602052604090208190555b60006001609854609d54610b8091906124a8565b610b8a91906124f3565b609e546000828152609a60205260409020549192501415610bb7576000818152609a602052604090208190555b6000828152609a602090815260408083208054858552828520805490925590819055808452609b909252909120829055610bf133826117e2565b50505080610bfe90612571565b9050610b1d565b506097546001600160a01b03166323b872dd3330609c5485610c2791906124d4565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b158015610c7657600080fd5b505af1158015610c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a859190612147565b600054610100900460ff1680610cc7575060005460ff16155b610ce35760405162461bcd60e51b81526004016105b1906123d8565b600054610100900460ff16158015610d05576000805461ffff19166101011790555b610d158989898989898989610794565b80156108c7576000805461ff0019169055505050505050505050565b610d3b338361146b565b610d575760405162461bcd60e51b81526004016105b190612426565b610d6384848484611808565b50505050565b6000806098544342610d783390565b604051602001610da0919060609190911b6bffffffffffffffffffffffff1916815260140190565b6040516020818303038152906040528051906020012060001c610dc391906124c0565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610e0891906124c0565b610e1244426124a8565b610e1c91906124a8565b610e2691906124a8565b610e3091906124a8565b610e3a91906124a8565b610e4491906124a8565b604051602001610e5691815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610ef35760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016105b1565b6000610efd611886565b90506000611388609d5485610f1291906124f3565b610f1c91906124c0565b610f279060016124a8565b90506000825111610f475760405180602001604052806000815250610f7c565b81610f5182611895565b610f5a86611895565b604051602001610f6c939291906122ca565b6040516020818303038152906040525b949350505050565b60a18054610f9190612536565b80601f0160208091040260200160405190810160405280929190818152602001828054610fbd90612536565b801561100a5780601f10610fdf5761010080835404028352916020019161100a565b820191906000526020600020905b815481529060010190602001808311610fed57829003601f168201915b505050505081565b6000609d54826104a491906124f3565b600061102e82846124d4565b609881905560995550609f9190915560a055565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906110778261091e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b609e548114156110f45760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b60448201526064016105b1565b336110fe8261091e565b6001600160a01b03161461114a5760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b60448201526064016105b1565b6000818152609b6020526040812054609854609d5491929161116c91906124a8565b6000818152609a602081815260408084208054898652609b8452828620879055808652828620899055888652939092528320829055838352869055609880549394509092600192906111bf9084906124a8565b90915550610d639050846119af565b600060648060a454846111e191906124d4565b6111eb91906124c0565b6111f591906124c0565b9050600060648060a5548561120a91906124d4565b61121491906124c0565b61121e91906124c0565b905060008161122d84866124f3565b61123791906124f3565b60975460a25460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101879052929350169063a9059cbb90604401602060405180830381600087803b15801561128957600080fd5b505af115801561129d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c19190612147565b5060975460a35460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561131257600080fd5b505af1158015611326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134a9190612147565b506097546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b1580156113a557600080fd5b505af11580156113b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113dd9190612147565b5050505050565b600054610100900460ff16806113fd575060005460ff16155b6114195760405162461bcd60e51b81526004016105b1906123d8565b600054610100900460ff1615801561143b576000805461ffff19166101011790555b611443611a4a565b61144b611a4a565b6114558383611ab5565b80156106e7576000805461ff0019169055505050565b6000818152606760205260408120546001600160a01b03166114e45760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105b1565b60006114ef8361091e565b9050806001600160a01b0316846001600160a01b0316148061152a5750836001600160a01b031661151f8461053c565b6001600160a01b0316145b80610f7c57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff16610f7c565b826001600160a01b03166115718261091e565b6001600160a01b0316146115d95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105b1565b6001600160a01b03821661163b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105b1565b611646600082611042565b6001600160a01b038316600090815260686020526040812080546001929061166f9084906124f3565b90915550506001600160a01b038216600090815260686020526040812080546001929061169d9084906124a8565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031614156117605760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105b1565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000816117d8610d69565b6104a4919061258c565b6117ec8282611b4a565b6001609860008282546117ff91906124f3565b90915550505050565b61181384848461155e565b61181f84848484611c8c565b610d635760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105b1565b606060a180546104b990612536565b6060816118b95750506040805180820190915260018152600360fc1b602082015290565b8160005b81156118e357806118cd81612571565b91506118dc9050600a836124c0565b91506118bd565b60008167ffffffffffffffff81111561190c57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611936576020820181803683370190505b5090505b8415610f7c5761194b6001836124f3565b9150611958600a8661258c565b6119639060306124a8565b60f81b81838151811061198657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506119a8600a866124c0565b945061193a565b60006119ba8261091e565b90506119c7600083611042565b6001600160a01b03811660009081526068602052604081208054600192906119f09084906124f3565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff1680611a63575060005460ff16155b611a7f5760405162461bcd60e51b81526004016105b1906123d8565b600054610100900460ff16158015611aa1576000805461ffff19166101011790555b8015610791576000805461ff001916905550565b600054610100900460ff1680611ace575060005460ff16155b611aea5760405162461bcd60e51b81526004016105b1906123d8565b600054610100900460ff16158015611b0c576000805461ffff19166101011790555b8251611b1f906065906020860190611def565b508151611b33906066906020850190611def565b5080156106e7576000805461ff0019169055505050565b6001600160a01b038216611ba05760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105b1565b6000818152606760205260409020546001600160a01b031615611c055760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105b1565b6001600160a01b0382166000908152606860205260408120805460019290611c2e9084906124a8565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b15611de457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611cd0903390899088908890600401612357565b602060405180830381600087803b158015611cea57600080fd5b505af1925050508015611d1a575060408051601f3d908101601f19168201909252611d179181019061217f565b60015b611dca573d808015611d48576040519150601f19603f3d011682016040523d82523d6000602084013e611d4d565b606091505b508051611dc25760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e746572000000000000000060648201526084016105b1565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f7c565b506001949350505050565b828054611dfb90612536565b90600052602060002090601f016020900481019282611e1d5760008555611e63565b82601f10611e3657805160ff1916838001178555611e63565b82800160010185558215611e63579182015b82811115611e63578251825591602001919060010190611e48565b50611e6f929150611e91565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115611e6f5760008155600101611e92565b600067ffffffffffffffff831115611ec057611ec06125cc565b611ed3601f8401601f1916602001612477565b9050828152838383011115611ee757600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b0381168114611f1557600080fd5b919050565b600082601f830112611f2a578081fd5b611f3983833560208501611ea6565b9392505050565b600060208284031215611f51578081fd5b611f3982611efe565b60008060408385031215611f6c578081fd5b611f7583611efe565b9150611f8360208401611efe565b90509250929050565b600080600060608486031215611fa0578081fd5b611fa984611efe565b9250611fb760208501611efe565b9150604084013590509250925092565b60008060008060808587031215611fdc578081fd5b611fe585611efe565b9350611ff360208601611efe565b925060408501359150606085013567ffffffffffffffff811115612015578182fd5b8501601f81018713612025578182fd5b61203487823560208401611ea6565b91505092959194509250565b60008060408385031215612052578182fd5b61205b83611efe565b9150602083013561206b816125e2565b809150509250929050565b60008060408385031215612088578182fd5b61209183611efe565b946020939093013593505050565b600060208083850312156120b1578182fd5b823567ffffffffffffffff808211156120c8578384fd5b818501915085601f8301126120db578384fd5b8135818111156120ed576120ed6125cc565b8060051b91506120fe848301612477565b8181528481019084860184860187018a1015612118578788fd5b8795505b8386101561213a57803583526001959095019491860191860161211c565b5098975050505050505050565b600060208284031215612158578081fd5b8151611f39816125e2565b600060208284031215612174578081fd5b8135611f39816125f0565b600060208284031215612190578081fd5b8151611f39816125f0565b600080600080600080600080610100898b0312156121b7578384fd5b883567ffffffffffffffff808211156121ce578586fd5b6121da8c838d01611f1a565b995060208b01359150808211156121ef578586fd5b6121fb8c838d01611f1a565b985061220960408c01611efe565b975060608b013591508082111561221e578586fd5b5061222b8b828c01611f1a565b9550506080890135935060a0890135925061224860c08a01611efe565b915061225660e08a01611efe565b90509295985092959890939650565b600060208284031215612276578081fd5b5035919050565b6000806040838503121561228f578182fd5b50508035926020909101359150565b600081518084526122b681602086016020860161250a565b601f01601f19169290920160200192915050565b600084516122dc81846020890161250a565b6a0dacae8c2c8c2e8c25ae6d60ab1b908301908152845161230481600b84016020890161250a565b602f60f81b600b9290910191820152686d657461646174612d60b81b600c820152835161233881601584016020880161250a565b64173539b7b760d91b60159290910191820152601a0195945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061238a9083018461229e565b9695505050505050565b60408101818360005b60028110156123bc57815183526020928301929091019060010161239d565b50505092915050565b602081526000611f39602083018461229e565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff811182821017156124a0576124a06125cc565b604052919050565b600082198211156124bb576124bb6125a0565b500190565b6000826124cf576124cf6125b6565b500490565b60008160001904831182151516156124ee576124ee6125a0565b500290565b600082821015612505576125056125a0565b500390565b60005b8381101561252557818101518382015260200161250d565b83811115610d635750506000910152565b600181811c9082168061254a57607f821691505b6020821081141561256b57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612585576125856125a0565b5060010190565b60008261259b5761259b6125b6565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461079157600080fd5b6001600160e01b03198116811461079157600080fdfea26469706673582212209f08ae79f8ff2c4148c7f3d4741256327ce0d17225ec824846797b2b2f83cf5664736f6c63430008040033";

type PXMockV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMockV2__factory extends ContractFactory {
  constructor(...args: PXMockV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMockV2> {
    return super.deploy(overrides || {}) as Promise<PXMockV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PXMockV2 {
    return super.attach(address) as PXMockV2;
  }
  connect(signer: Signer): PXMockV2__factory {
    return super.connect(signer) as PXMockV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockV2Interface {
    return new utils.Interface(_abi) as PXMockV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PXMockV2 {
    return new Contract(address, _abi, signerOrProvider) as PXMockV2;
  }
}
