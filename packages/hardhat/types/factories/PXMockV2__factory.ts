/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMockV2, PXMockV2Interface } from "../PXMockV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_",
        type: "address",
      },
    ],
    name: "__PXMock_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_",
        type: "address",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "puppers",
        type: "uint256[]",
      },
    ],
    name: "burnPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "v2Test",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506126e2806100206000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c80638da5cb5b1161011a578063b807f857116100ad578063dbddb26a1161007c578063dbddb26a1461040a578063e4e4dc4214610412578063e985e9c514610425578063f2fde38b14610461578063fc784d491461047457600080fd5b8063b807f857146103c9578063b88d4fde146103dc578063bcb00f29146103ef578063c87b56dd146103f757600080fd5b8063a035386d116100e9578063a035386d14610391578063a22cb4651461039a578063a6053eb5146103ad578063b43ff0f0146103c057600080fd5b80638da5cb5b1461036757806395d89b411461037857806397a4dd281461038057806397b874f71461038857600080fd5b8063369df6e71161019d578063690c9f431161016c578063690c9f431461031057806370a08231146103195780637132e47b1461032c578063715018a61461033f57806379d90b171461034757600080fd5b8063369df6e7146102ce57806342842e0e146102e15780635d29904e146102f45780636352211e146102fd57600080fd5b8063095ea7b3116101d9578063095ea7b31461028a578063109429901461029f57806318160ddd146102b257806323b872dd146102bb57600080fd5b806301ffc9a71461020b578063055fa0d51461023357806306fdde031461024a578063081812fc1461025f575b600080fd5b61021e610219366004612213565b610487565b60405190151581526020015b60405180910390f35b61023c60ca5481565b60405190815260200161022a565b6102526104d9565b60405161022a919061246b565b61027261026d366004612304565b61056b565b6040516001600160a01b03909116815260200161022a565b61029d610298366004612126565b610605565b005b61029d6102ad36600461214f565b61071b565b61023c60cb5481565b61029d6102c936600461203c565b6107c3565b61029d6102dc36600461224b565b6107f4565b61029d6102ef36600461203c565b610876565b61023c60d25481565b61027261030b366004612304565b610891565b61023c60d15481565b61023c610327366004611ff0565b610908565b61029d61033a36600461224b565b61098f565b61029d610ab1565b61035a610355366004612304565b610b17565b60405161022a919061243a565b6097546001600160a01b0316610272565b610252610b66565b60ca5461023c565b61023c60d05481565b61023c60ce5481565b61029d6103a83660046120f0565b610b75565b61029d6103bb366004612304565b610b84565b61023c60cf5481565b61029d6103d7366004612304565b60ce55565b61029d6103ea366004612077565b610da9565b61023c610de1565b610252610405366004612304565b610eec565b610252610fe9565b61023c610420366004612304565b611077565b61021e61043336600461200a565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61029d61046f366004611ff0565b611087565b61029d61048236600461231c565b61114f565b60006001600160e01b031982166380ac58cd60e01b14806104b857506001600160e01b03198216635b5e139f60e01b145b806104d357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546104e8906125dc565b80601f0160208091040260200160405190810160405280929190818152602001828054610514906125dc565b80156105615780601f1061053657610100808354040283529160200191610561565b820191906000526020600020905b81548152906001019060200180831161054457829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166105e95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b600061061082610891565b9050806001600160a01b0316836001600160a01b0316141561067e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105e0565b336001600160a01b038216148061069a575061069a8133610433565b61070c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105e0565b610716838361116f565b505050565b600081511161075c5760405162461bcd60e51b815260206004820152600d60248201526c456d707479207075707065727360981b60448201526064016105e0565b60005b81518110156107a85761079882828151811061078b57634e487b7160e01b600052603260045260246000fd5b60200260200101516111dd565b6107a181612617565b905061075f565b506107c060ce5482516107bb919061257a565b6112fb565b50565b6107cd3382611442565b6107e95760405162461bcd60e51b81526004016105e0906124cc565b610716838383611535565b600054610100900460ff168061080d575060005460ff16155b6108295760405162461bcd60e51b81526004016105e09061247e565b600054610100900460ff1615801561084b576000805461ffff19166101011790555b61085a8888888888888861098f565b801561086c576000805461ff00191690555b5050505050505050565b61071683838360405180602001604052806000815250610da9565b6000818152606760205260408120546001600160a01b0316806104d35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105e0565b60006001600160a01b0382166109735760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105e0565b506001600160a01b031660009081526068602052604090205490565b600054610100900460ff16806109a8575060005460ff16155b6109c45760405162461bcd60e51b81526004016105e09061247e565b600054610100900460ff161580156109e6576000805461ffff19166101011790555b6109f088886116d5565b6001600160a01b038616610a0357600080fd5b60c980546001600160a01b0319166001600160a01b038816179055690bb28f98c1e0715ce00060ce55620f424060cf55600060d05560d184905560d2839055610a4c838561257a565b60cb5560d25460d154610a5f919061257a565b60ca558451610a759060d3906020880190611e9f565b5060d480546001600160a01b0319166001600160a01b038416179055601460d555801561086c576000805461ff00191690555050505050505050565b6097546001600160a01b03163314610b0b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e0565b610b15600061175c565b565b610b1f611f23565b600060cf5483610b2f9190612599565b9050604051806040016040528060d15483610b4a9190612632565b815260200160d15483610b5d9190612566565b90529392505050565b6060606680546104e8906125dc565b610b803383836117ae565b5050565b60008111610bcc5760405162461bcd60e51b81526020600482015260156024820152744e6f6e20706f736974697665207175616e7469747960581b60448201526064016105e0565b60ca54811115610c155760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016105e0565b60005b81811015610d00576000610c2d60ca5461187d565b60cf54610c3a919061254e565b60d054600082815260cc60205260409020549192501415610c6757600081815260cc602052604090208190555b6000600160ca5460cf54610c7b919061254e565b610c859190612599565b60d054600082815260cc60205260409020549192501415610cb257600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd909252909120829055610cec3382611892565b50505080610cf990612617565b9050610c18565b5060c9546001600160a01b03166323b872dd333060ce5485610d22919061257a565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b158015610d7157600080fd5b505af1158015610d85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8091906121f7565b610db33383611442565b610dcf5760405162461bcd60e51b81526004016105e0906124cc565b610ddb848484846118b8565b50505050565b60008060ca544342610df03390565b604051602001610e18919060609190911b6bffffffffffffffffffffffff1916815260140190565b6040516020818303038152906040528051906020012060001c610e3b9190612566565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610e809190612566565b610e8a444261254e565b610e94919061254e565b610e9e919061254e565b610ea8919061254e565b610eb2919061254e565b610ebc919061254e565b604051602001610ece91815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610f6b5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016105e0565b6000610f75611936565b90506000610f8284610b17565b90506000825111610fa25760405180602001604052806000815250610fe1565b81610fb48260005b6020020151611945565b610fbf836001610faa565b604051602001610fd193929190612369565b6040516020818303038152906040525b949350505050565b60d38054610ff6906125dc565b80601f0160208091040260200160405190810160405280929190818152602001828054611022906125dc565b801561106f5780601f106110445761010080835404028352916020019161106f565b820191906000526020600020905b81548152906001019060200180831161105257829003601f168201915b505050505081565b600060cf54826104d39190612599565b6097546001600160a01b031633146110e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e0565b6001600160a01b0381166111465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e0565b6107c08161175c565b600061115b828461257a565b60ca81905560cb555060d19190915560d255565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906111a482610891565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60d0548114156112215760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b60448201526064016105e0565b3361122b82610891565b6001600160a01b0316146112775760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b60448201526064016105e0565b600081815260cd602052604081205460ca5460cf54919291611299919061254e565b600081815260cc60208181526040808420805489865260cd845282862087905580865282862089905588865293909252832082905583835286905560ca80549394509092600192906112ec90849061254e565b90915550610ddb905084611a5f565b6000606460d5548361130d919061257a565b6113179190612566565b905060006113258284612599565b60c95460d45460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101869052929350169063a9059cbb90604401602060405180830381600087803b15801561137757600080fd5b505af115801561138b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113af91906121f7565b5060c9546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b15801561140a57600080fd5b505af115801561141e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddb91906121f7565b6000818152606760205260408120546001600160a01b03166114bb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105e0565b60006114c683610891565b9050806001600160a01b0316846001600160a01b031614806115015750836001600160a01b03166114f68461056b565b6001600160a01b0316145b80610fe157506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff16610fe1565b826001600160a01b031661154882610891565b6001600160a01b0316146115b05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105e0565b6001600160a01b0382166116125760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105e0565b61161d60008261116f565b6001600160a01b0383166000908152606860205260408120805460019290611646908490612599565b90915550506001600160a01b038216600090815260686020526040812080546001929061167490849061254e565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff16806116ee575060005460ff16155b61170a5760405162461bcd60e51b81526004016105e09061247e565b600054610100900460ff1615801561172c576000805461ffff19166101011790555b611734611afa565b61173c611afa565b6117468383611b65565b8015610716576000805461ff0019169055505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156118105760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105e0565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600081611888610de1565b6104d39190612632565b61189c8282611bfa565b600160ca60008282546118af9190612599565b90915550505050565b6118c3848484611535565b6118cf84848484611d3c565b610ddb5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105e0565b606060d380546104e8906125dc565b6060816119695750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611993578061197d81612617565b915061198c9050600a83612566565b915061196d565b60008167ffffffffffffffff8111156119bc57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156119e6576020820181803683370190505b5090505b8415610fe1576119fb600183612599565b9150611a08600a86612632565b611a1390603061254e565b60f81b818381518110611a3657634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611a58600a86612566565b94506119ea565b6000611a6a82610891565b9050611a7760008361116f565b6001600160a01b0381166000908152606860205260408120805460019290611aa0908490612599565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff1680611b13575060005460ff16155b611b2f5760405162461bcd60e51b81526004016105e09061247e565b600054610100900460ff16158015611b51576000805461ffff19166101011790555b80156107c0576000805461ff001916905550565b600054610100900460ff1680611b7e575060005460ff16155b611b9a5760405162461bcd60e51b81526004016105e09061247e565b600054610100900460ff16158015611bbc576000805461ffff19166101011790555b8251611bcf906065906020860190611e9f565b508151611be3906066906020850190611e9f565b508015610716576000805461ff0019169055505050565b6001600160a01b038216611c505760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105e0565b6000818152606760205260409020546001600160a01b031615611cb55760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105e0565b6001600160a01b0382166000908152606860205260408120805460019290611cde90849061254e565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b15611e9457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611d809033908990889088906004016123fd565b602060405180830381600087803b158015611d9a57600080fd5b505af1925050508015611dca575060408051601f3d908101601f19168201909252611dc79181019061222f565b60015b611e7a573d808015611df8576040519150601f19603f3d011682016040523d82523d6000602084013e611dfd565b606091505b508051611e725760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e746572000000000000000060648201526084016105e0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610fe1565b506001949350505050565b828054611eab906125dc565b90600052602060002090601f016020900481019282611ecd5760008555611f13565b82601f10611ee657805160ff1916838001178555611f13565b82800160010185558215611f13579182015b82811115611f13578251825591602001919060010190611ef8565b50611f1f929150611f41565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115611f1f5760008155600101611f42565b600067ffffffffffffffff831115611f7057611f70612672565b611f83601f8401601f191660200161251d565b9050828152838383011115611f9757600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b0381168114611fc557600080fd5b919050565b600082601f830112611fda578081fd5b611fe983833560208501611f56565b9392505050565b600060208284031215612001578081fd5b611fe982611fae565b6000806040838503121561201c578081fd5b61202583611fae565b915061203360208401611fae565b90509250929050565b600080600060608486031215612050578081fd5b61205984611fae565b925061206760208501611fae565b9150604084013590509250925092565b6000806000806080858703121561208c578081fd5b61209585611fae565b93506120a360208601611fae565b925060408501359150606085013567ffffffffffffffff8111156120c5578182fd5b8501601f810187136120d5578182fd5b6120e487823560208401611f56565b91505092959194509250565b60008060408385031215612102578182fd5b61210b83611fae565b9150602083013561211b81612688565b809150509250929050565b60008060408385031215612138578182fd5b61214183611fae565b946020939093013593505050565b60006020808385031215612161578182fd5b823567ffffffffffffffff80821115612178578384fd5b818501915085601f83011261218b578384fd5b81358181111561219d5761219d612672565b8060051b91506121ae84830161251d565b8181528481019084860184860187018a10156121c8578788fd5b8795505b838610156121ea5780358352600195909501949186019186016121cc565b5098975050505050505050565b600060208284031215612208578081fd5b8151611fe981612688565b600060208284031215612224578081fd5b8135611fe981612696565b600060208284031215612240578081fd5b8151611fe981612696565b600080600080600080600060e0888a031215612265578283fd5b873567ffffffffffffffff8082111561227c578485fd5b6122888b838c01611fca565b985060208a013591508082111561229d578485fd5b6122a98b838c01611fca565b97506122b760408b01611fae565b965060608a01359150808211156122cc578485fd5b506122d98a828b01611fca565b9450506080880135925060a088013591506122f660c08901611fae565b905092959891949750929550565b600060208284031215612315578081fd5b5035919050565b6000806040838503121561232e578182fd5b50508035926020909101359150565b600081518084526123558160208601602086016125b0565b601f01601f19169290920160200192915050565b6000845161237b8184602089016125b0565b676d6574616461746160c01b908301908152602f60f81b6008820152686d657461646174612d60b81b600982015284516123bc8160128401602089016125b0565b605f60f81b6012929091019182015283516123de8160138401602088016125b0565b64173539b7b760d91b6013929091019182015260180195945050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906124309083018461233d565b9695505050505050565b60408101818360005b6002811015612462578151835260209283019290910190600101612443565b50505092915050565b602081526000611fe9602083018461233d565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561254657612546612672565b604052919050565b6000821982111561256157612561612646565b500190565b6000826125755761257561265c565b500490565b600081600019048311821515161561259457612594612646565b500290565b6000828210156125ab576125ab612646565b500390565b60005b838110156125cb5781810151838201526020016125b3565b83811115610ddb5750506000910152565b600181811c908216806125f057607f821691505b6020821081141561261157634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561262b5761262b612646565b5060010190565b6000826126415761264161265c565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146107c057600080fd5b6001600160e01b0319811681146107c057600080fdfea2646970667358221220e2c93914b8b3ab760bb2da08f3e525863fd497d052c1826de88f6633e8ea096e64736f6c63430008040033";

type PXMockV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMockV2__factory extends ContractFactory {
  constructor(...args: PXMockV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMockV2> {
    return super.deploy(overrides || {}) as Promise<PXMockV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PXMockV2 {
    return super.attach(address) as PXMockV2;
  }
  connect(signer: Signer): PXMockV2__factory {
    return super.connect(signer) as PXMockV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockV2Interface {
    return new utils.Interface(_abi) as PXMockV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PXMockV2 {
    return new Contract(address, _abi, signerOrProvider) as PXMockV2;
  }
}
