/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMockV2, PXMockV2Interface } from "../PXMockV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_DEV_",
        type: "address",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_PLEASR_",
        type: "address",
      },
    ],
    name: "__PXMock_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_DEV_",
        type: "address",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_PLEASR_",
        type: "address",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "puppers",
        type: "uint256[]",
      },
    ],
    name: "burnPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "v2Test",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612794806100206000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806395d89b411161011a578063b807f857116100ad578063dbddb26a1161007c578063dbddb26a1461040a578063e4e4dc4214610412578063e985e9c514610425578063f2fde38b14610461578063fc784d491461047457600080fd5b8063b807f857146103c9578063b88d4fde146103dc578063bcb00f29146103ef578063c87b56dd146103f757600080fd5b8063a22cb465116100e9578063a22cb46514610387578063a6053eb51461039a578063a739d644146103ad578063b43ff0f0146103c057600080fd5b806395d89b411461036557806397a4dd281461036d57806397b874f714610375578063a035386d1461037e57600080fd5b806323b872dd1161019d578063690c9f431161016c578063690c9f431461031057806370a0823114610319578063715018a61461032c57806379d90b17146103345780638da5cb5b1461035457600080fd5b806323b872dd146102ce57806342842e0e146102e15780635d29904e146102f45780636352211e146102fd57600080fd5b8063095ea7b3116101d9578063095ea7b31461028a578063109429901461029f57806318160ddd146102b2578063199f90a6146102bb57600080fd5b806301ffc9a71461020b578063055fa0d51461023357806306fdde031461024a578063081812fc1461025f575b600080fd5b61021e6102193660046122da565b610487565b60405190151581526020015b60405180910390f35b61023c60ca5481565b60405190815260200161022a565b6102526104d9565b60405161022a919061251d565b61027261026d3660046123dc565b61056b565b6040516001600160a01b03909116815260200161022a565b61029d6102983660046121ed565b610605565b005b61029d6102ad366004612216565b61071b565b61023c60cb5481565b61029d6102c9366004612312565b6107c3565b61029d6102dc366004612103565b610901565b61029d6102ef366004612103565b610932565b61023c60d25481565b61027261030b3660046123dc565b61094d565b61023c60d15481565b61023c6103273660046120b7565b6109c4565b61029d610a4b565b6103476103423660046123dc565b610ab1565b60405161022a91906124ec565b6097546001600160a01b0316610272565b610252610b00565b60ca5461023c565b61023c60d05481565b61023c60ce5481565b61029d6103953660046121b7565b610b0f565b61029d6103a83660046123dc565b610b1e565b61029d6103bb366004612312565b610d43565b61023c60cf5481565b61029d6103d73660046123dc565b60ce55565b61029d6103ea36600461213e565b610dc6565b61023c610dfe565b6102526104053660046123dc565b610f09565b610252610fe4565b61023c6104203660046123dc565b611072565b61021e6104333660046120d1565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b61029d61046f3660046120b7565b611082565b61029d6104823660046123f4565b61114a565b60006001600160e01b031982166380ac58cd60e01b14806104b857506001600160e01b03198216635b5e139f60e01b145b806104d357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546104e89061268e565b80601f01602080910402602001604051908101604052809291908181526020018280546105149061268e565b80156105615780601f1061053657610100808354040283529160200191610561565b820191906000526020600020905b81548152906001019060200180831161054457829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166105e95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006106108261094d565b9050806001600160a01b0316836001600160a01b0316141561067e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105e0565b336001600160a01b038216148061069a575061069a8133610433565b61070c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105e0565b610716838361116a565b505050565b600081511161075c5760405162461bcd60e51b815260206004820152600d60248201526c456d707479207075707065727360981b60448201526064016105e0565b60005b81518110156107a85761079882828151811061078b57634e487b7160e01b600052603260045260246000fd5b60200260200101516111d8565b6107a1816126c9565b905061075f565b506107c060ce5482516107bb919061262c565b6112f6565b50565b600054610100900460ff16806107dc575060005460ff16155b6107f85760405162461bcd60e51b81526004016105e090612530565b600054610100900460ff1615801561081a576000805461ffff19166101011790555b610824898961150c565b6001600160a01b03871661083757600080fd5b60c980546001600160a01b0319166001600160a01b038916179055690bb28f98c1e0715ce00060ce55620f424060cf55600060d05560d185905560d2849055610880848661262c565b60cb5560d25460d154610893919061262c565b60ca5585516108a99060d3906020890190611f6d565b5060d480546001600160a01b038086166001600160a01b03199283161790925560d5805492851692909116919091179055602860d655603c60d75580156108f6576000805461ff00191690555b505050505050505050565b61090b3382611593565b6109275760405162461bcd60e51b81526004016105e09061257e565b61071683838361168a565b61071683838360405180602001604052806000815250610dc6565b6000818152606760205260408120546001600160a01b0316806104d35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105e0565b60006001600160a01b038216610a2f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105e0565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610aa55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e0565b610aaf600061182a565b565b610ab9611ff1565b600060cf5483610ac9919061264b565b9050604051806040016040528060d15483610ae491906126e4565b815260200160d15483610af79190612618565b90529392505050565b6060606680546104e89061268e565b610b1a33838361187c565b5050565b60008111610b665760405162461bcd60e51b81526020600482015260156024820152744e6f6e20706f736974697665207175616e7469747960581b60448201526064016105e0565b60ca54811115610baf5760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016105e0565b60005b81811015610c9a576000610bc760ca5461194b565b60cf54610bd49190612600565b60d054600082815260cc60205260409020549192501415610c0157600081815260cc602052604090208190555b6000600160ca5460cf54610c159190612600565b610c1f919061264b565b60d054600082815260cc60205260409020549192501415610c4c57600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd909252909120829055610c863382611960565b50505080610c93906126c9565b9050610bb2565b5060c9546001600160a01b03166323b872dd333060ce5485610cbc919061262c565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b158015610d0b57600080fd5b505af1158015610d1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1a91906122be565b600054610100900460ff1680610d5c575060005460ff16155b610d785760405162461bcd60e51b81526004016105e090612530565b600054610100900460ff16158015610d9a576000805461ffff19166101011790555b610daa89898989898989896107c3565b80156108f6576000805461ff0019169055505050505050505050565b610dd03383611593565b610dec5760405162461bcd60e51b81526004016105e09061257e565b610df884848484611986565b50505050565b60008060ca544342610e0d3390565b604051602001610e35919060609190911b6bffffffffffffffffffffffff1916815260140190565b6040516020818303038152906040528051906020012060001c610e589190612618565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610e9d9190612618565b610ea74442612600565b610eb19190612600565b610ebb9190612600565b610ec59190612600565b610ecf9190612600565b610ed99190612600565b604051602001610eeb91815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610f885760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016105e0565b6000610f92611a04565b90506000815111610fb25760405180602001604052806000815250610fdd565b80610fbc84611a13565b604051602001610fcd929190612441565b6040516020818303038152906040525b9392505050565b60d38054610ff19061268e565b80601f016020809104026020016040519081016040528092919081815260200182805461101d9061268e565b801561106a5780601f1061103f5761010080835404028352916020019161106a565b820191906000526020600020905b81548152906001019060200180831161104d57829003601f168201915b505050505081565b600060cf54826104d3919061264b565b6097546001600160a01b031633146110dc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e0565b6001600160a01b0381166111415760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e0565b6107c08161182a565b6000611156828461262c565b60ca81905560cb555060d19190915560d255565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061119f8261094d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60d05481141561121c5760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b60448201526064016105e0565b336112268261094d565b6001600160a01b0316146112725760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b60448201526064016105e0565b600081815260cd602052604081205460ca5460cf549192916112949190612600565b600081815260cc60208181526040808420805489865260cd845282862087905580865282862089905588865293909252832082905583835286905560ca80549394509092600192906112e7908490612600565b90915550610df8905084611b2d565b600060648060d65484611309919061262c565b6113139190612618565b61131d9190612618565b9050600060648060d75485611332919061262c565b61133c9190612618565b6113469190612618565b9050600081611355848661264b565b61135f919061264b565b60c95460d45460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101879052929350169063a9059cbb90604401602060405180830381600087803b1580156113b157600080fd5b505af11580156113c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e991906122be565b5060c95460d55460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb90604401602060405180830381600087803b15801561143a57600080fd5b505af115801561144e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147291906122be565b5060c9546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b1580156114cd57600080fd5b505af11580156114e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150591906122be565b5050505050565b600054610100900460ff1680611525575060005460ff16155b6115415760405162461bcd60e51b81526004016105e090612530565b600054610100900460ff16158015611563576000805461ffff19166101011790555b61156b611bc8565b611573611bc8565b61157d8383611c33565b8015610716576000805461ff0019169055505050565b6000818152606760205260408120546001600160a01b031661160c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105e0565b60006116178361094d565b9050806001600160a01b0316846001600160a01b031614806116525750836001600160a01b03166116478461056b565b6001600160a01b0316145b8061168257506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661169d8261094d565b6001600160a01b0316146117055760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105e0565b6001600160a01b0382166117675760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105e0565b61177260008261116a565b6001600160a01b038316600090815260686020526040812080546001929061179b90849061264b565b90915550506001600160a01b03821660009081526068602052604081208054600192906117c9908490612600565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156118de5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105e0565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b600081611956610dfe565b6104d391906126e4565b61196a8282611cc8565b600160ca600082825461197d919061264b565b90915550505050565b61199184848461168a565b61199d84848484611e0a565b610df85760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105e0565b606060d380546104e89061268e565b606081611a375750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a615780611a4b816126c9565b9150611a5a9050600a83612618565b9150611a3b565b60008167ffffffffffffffff811115611a8a57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611ab4576020820181803683370190505b5090505b841561168257611ac960018361264b565b9150611ad6600a866126e4565b611ae1906030612600565b60f81b818381518110611b0457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611b26600a86612618565b9450611ab8565b6000611b388261094d565b9050611b4560008361116a565b6001600160a01b0381166000908152606860205260408120805460019290611b6e90849061264b565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff1680611be1575060005460ff16155b611bfd5760405162461bcd60e51b81526004016105e090612530565b600054610100900460ff16158015611c1f576000805461ffff19166101011790555b80156107c0576000805461ff001916905550565b600054610100900460ff1680611c4c575060005460ff16155b611c685760405162461bcd60e51b81526004016105e090612530565b600054610100900460ff16158015611c8a576000805461ffff19166101011790555b8251611c9d906065906020860190611f6d565b508151611cb1906066906020850190611f6d565b508015610716576000805461ff0019169055505050565b6001600160a01b038216611d1e5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105e0565b6000818152606760205260409020546001600160a01b031615611d835760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105e0565b6001600160a01b0382166000908152606860205260408120805460019290611dac908490612600565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b15611f6257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611e4e9033908990889088906004016124af565b602060405180830381600087803b158015611e6857600080fd5b505af1925050508015611e98575060408051601f3d908101601f19168201909252611e95918101906122f6565b60015b611f48573d808015611ec6576040519150601f19603f3d011682016040523d82523d6000602084013e611ecb565b606091505b508051611f405760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e746572000000000000000060648201526084016105e0565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611682565b506001949350505050565b828054611f799061268e565b90600052602060002090601f016020900481019282611f9b5760008555611fe1565b82601f10611fb457805160ff1916838001178555611fe1565b82800160010185558215611fe1579182015b82811115611fe1578251825591602001919060010190611fc6565b50611fed92915061200f565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115611fed5760008155600101612010565b600067ffffffffffffffff83111561203e5761203e612724565b612051601f8401601f19166020016125cf565b905082815283838301111561206557600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b038116811461209357600080fd5b919050565b600082601f8301126120a8578081fd5b610fdd83833560208501612024565b6000602082840312156120c8578081fd5b610fdd8261207c565b600080604083850312156120e3578081fd5b6120ec8361207c565b91506120fa6020840161207c565b90509250929050565b600080600060608486031215612117578081fd5b6121208461207c565b925061212e6020850161207c565b9150604084013590509250925092565b60008060008060808587031215612153578081fd5b61215c8561207c565b935061216a6020860161207c565b925060408501359150606085013567ffffffffffffffff81111561218c578182fd5b8501601f8101871361219c578182fd5b6121ab87823560208401612024565b91505092959194509250565b600080604083850312156121c9578182fd5b6121d28361207c565b915060208301356121e28161273a565b809150509250929050565b600080604083850312156121ff578182fd5b6122088361207c565b946020939093013593505050565b60006020808385031215612228578182fd5b823567ffffffffffffffff8082111561223f578384fd5b818501915085601f830112612252578384fd5b81358181111561226457612264612724565b8060051b91506122758483016125cf565b8181528481019084860184860187018a101561228f578788fd5b8795505b838610156122b1578035835260019590950194918601918601612293565b5098975050505050505050565b6000602082840312156122cf578081fd5b8151610fdd8161273a565b6000602082840312156122eb578081fd5b8135610fdd81612748565b600060208284031215612307578081fd5b8151610fdd81612748565b600080600080600080600080610100898b03121561232e578384fd5b883567ffffffffffffffff80821115612345578586fd5b6123518c838d01612098565b995060208b0135915080821115612366578586fd5b6123728c838d01612098565b985061238060408c0161207c565b975060608b0135915080821115612395578586fd5b506123a28b828c01612098565b9550506080890135935060a089013592506123bf60c08a0161207c565b91506123cd60e08a0161207c565b90509295985092959890939650565b6000602082840312156123ed578081fd5b5035919050565b60008060408385031215612406578182fd5b50508035926020909101359150565b6000815180845261242d816020860160208601612662565b601f01601f19169290920160200192915050565b60008351612453818460208801612662565b676d6574616461746160c01b908301908152602f60f81b600882015265706978656c2d60d01b6009820152835161249181600f840160208801612662565b64173539b7b760d91b600f9290910191820152601401949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906124e290830184612415565b9695505050505050565b60408101818360005b60028110156125145781518352602092830192909101906001016124f5565b50505092915050565b602081526000610fdd6020830184612415565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff811182821017156125f8576125f8612724565b604052919050565b60008219821115612613576126136126f8565b500190565b6000826126275761262761270e565b500490565b6000816000190483118215151615612646576126466126f8565b500290565b60008282101561265d5761265d6126f8565b500390565b60005b8381101561267d578181015183820152602001612665565b83811115610df85750506000910152565b600181811c908216806126a257607f821691505b602082108114156126c357634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156126dd576126dd6126f8565b5060010190565b6000826126f3576126f361270e565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146107c057600080fd5b6001600160e01b0319811681146107c057600080fdfea2646970667358221220b7f45dce367df2d7f055d4c6c74f51f9de01c38906eafe130fb7fe3ad9791db364736f6c63430008040033";

type PXMockV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMockV2__factory extends ContractFactory {
  constructor(...args: PXMockV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMockV2> {
    return super.deploy(overrides || {}) as Promise<PXMockV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PXMockV2 {
    return super.attach(address) as PXMockV2;
  }
  connect(signer: Signer): PXMockV2__factory {
    return super.connect(signer) as PXMockV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockV2Interface {
    return new utils.Interface(_abi) as PXMockV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PXMockV2 {
    return new Contract(address, _abi, signerOrProvider) as PXMockV2;
  }
}
