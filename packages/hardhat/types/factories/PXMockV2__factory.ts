/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PXMockV2, PXMockV2Interface } from "../PXMockV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_",
        type: "address",
      },
    ],
    name: "__PXMock_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_",
        type: "address",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "puppers",
        type: "uint256[]",
      },
    ],
    name: "burnPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setDOG_TO_PIXEL_SATOSHIS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "width",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "setSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "v2Test",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061283f806100206000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80638da5cb5b11610125578063b88d4fde116100ad578063dbddb26a1161007c578063dbddb26a1461043b578063e4e4dc4214610443578063e985e9c514610456578063f2fde38b14610492578063fc784d49146104a557600080fd5b8063b88d4fde14610405578063bcb00f2914610418578063c87b56dd14610420578063d85d95ef1461043357600080fd5b8063a035386d116100f4578063a035386d146103ba578063a22cb465146103c3578063a6053eb5146103d6578063b43ff0f0146103e9578063b807f857146103f257600080fd5b80638da5cb5b1461039057806395d89b41146103a157806397a4dd28146103a957806397b874f7146103b157600080fd5b806342842e0e116101a85780636d677a74116101775780636d677a741461032f57806370a08231146103425780637132e47b14610355578063715018a61461036857806379d90b171461037057600080fd5b806342842e0e146102f75780635d29904e1461030a5780636352211e14610313578063690c9f431461032657600080fd5b8063095ea7b3116101ef578063095ea7b3146102a057806310942990146102b557806318160ddd146102c857806323b872dd146102d1578063369df6e7146102e457600080fd5b806301ffc9a714610221578063055fa0d51461024957806306fdde0314610260578063081812fc14610275575b600080fd5b61023461022f366004612370565b6104b8565b60405190151581526020015b60405180910390f35b61025260ca5481565b604051908152602001610240565b61026861050a565b60405161024091906125c8565b610288610283366004612461565b61059c565b6040516001600160a01b039091168152602001610240565b6102b36102ae366004612283565b610636565b005b6102b36102c33660046122ac565b61074c565b61025260cb5481565b6102b36102df366004612199565b6107f4565b6102b36102f23660046123a8565b610825565b6102b3610305366004612199565b6108a7565b61025260d25481565b610288610321366004612461565b6108c2565b61025260d15481565b6102b361033d366004612461565b610939565b61025261035036600461214d565b610954565b6102b36103633660046123a8565b6109db565b6102b3610afd565b61038361037e366004612461565b610b63565b6040516102409190612597565b6097546001600160a01b0316610288565b610268610bb2565b60ca54610252565b61025260d05481565b61025260ce5481565b6102b36103d136600461224d565b610bc1565b6102b36103e4366004612461565b610bd0565b61025260cf5481565b6102b3610400366004612461565b60ce55565b6102b36104133660046121d4565b610e43565b610252610e7b565b61026861042e366004612461565b610f79565b6102b3611076565b610268611080565b610252610451366004612461565b61110e565b610234610464366004612167565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6102b36104a036600461214d565b61111e565b6102b36104b3366004612479565b6111e6565b60006001600160e01b031982166380ac58cd60e01b14806104e957506001600160e01b03198216635b5e139f60e01b145b8061050457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461051990612739565b80601f016020809104026020016040519081016040528092919081815260200182805461054590612739565b80156105925780601f1061056757610100808354040283529160200191610592565b820191906000526020600020905b81548152906001019060200180831161057557829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b031661061a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b6000610641826108c2565b9050806001600160a01b0316836001600160a01b031614156106af5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610611565b336001600160a01b03821614806106cb57506106cb8133610464565b61073d5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610611565b6107478383611206565b505050565b600081511161078d5760405162461bcd60e51b815260206004820152600d60248201526c456d707479207075707065727360981b6044820152606401610611565b60005b81518110156107d9576107c98282815181106107bc57634e487b7160e01b600052603260045260246000fd5b6020026020010151611274565b6107d281612774565b9050610790565b506107f160ce5482516107ec91906126d7565b61145c565b50565b6107fe3382611595565b61081a5760405162461bcd60e51b815260040161061190612629565b610747838383611688565b600054610100900460ff168061083e575060005460ff16155b61085a5760405162461bcd60e51b8152600401610611906125db565b600054610100900460ff1615801561087c576000805461ffff19166101011790555b61088b888888888888886109db565b801561089d576000805461ff00191690555b5050505050505050565b61074783838360405180602001604052806000815250610e43565b6000818152606760205260408120546001600160a01b0316806105045760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610611565b61094281611274565b6107f160ce5460016107ec91906126d7565b60006001600160a01b0382166109bf5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610611565b506001600160a01b031660009081526068602052604090205490565b600054610100900460ff16806109f4575060005460ff16155b610a105760405162461bcd60e51b8152600401610611906125db565b600054610100900460ff16158015610a32576000805461ffff19166101011790555b610a3c8888611828565b6001600160a01b038616610a4f57600080fd5b60c980546001600160a01b0319166001600160a01b038816179055690bb28f98c1e0715ce00060ce55620f424060cf55600060d05560d184905560d2839055610a9883856126d7565b60cb5560d25460d154610aab91906126d7565b60ca558451610ac19060d3906020880190611ffc565b5060d480546001600160a01b0319166001600160a01b038416179055601460d555801561089d576000805461ff00191690555050505050505050565b6097546001600160a01b03163314610b575760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610611565b610b6160006118af565b565b610b6b612080565b600060cf5483610b7b91906126f6565b9050604051806040016040528060d15483610b96919061278f565b815260200160d15483610ba991906126c3565b90529392505050565b60606066805461051990612739565b610bcc338383611901565b5050565b60008111610c185760405162461bcd60e51b81526020600482015260156024820152744e6f6e20706f736974697665207175616e7469747960581b6044820152606401610611565b60ca54811115610c615760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b6044820152606401610611565b60005b81811015610d9557600060ca5411610cb55760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b6044820152606401610611565b6000610cc260ca546119d0565b60cf54610ccf91906126ab565b60d054600082815260cc60205260409020549192501415610cfc57600081815260cc602052604090208190555b6000600160ca5460cf54610d1091906126ab565b610d1a91906126f6565b60d054600082815260cc60205260409020549192501415610d4757600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd909252909120829055610d8133826119e5565b50505080610d8e90612774565b9050610c64565b5060c95460ce546001600160a01b03909116906323b872dd9033903090610dbc90866126d7565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b158015610e0b57600080fd5b505af1158015610e1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcc9190612354565b610e4d3383611595565b610e695760405162461bcd60e51b815260040161061190612629565b610e7584848484611b49565b50505050565b60ca546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610ec891906126c3565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610f0d91906126c3565b610f1744426126ab565b610f2191906126ab565b610f2b91906126ab565b610f3591906126ab565b610f3f91906126ab565b610f4991906126ab565b604051602001610f5b91815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610ff85760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610611565b6000611002611bc7565b9050600061100f84610b63565b9050600082511161102f576040518060200160405280600081525061106e565b816110418260005b6020020151611bd6565b61104c836001611037565b60405160200161105e939291906124c6565b6040516020818303038152906040525b949350505050565b610b616001610bd0565b60d3805461108d90612739565b80601f01602080910402602001604051908101604052809291908181526020018280546110b990612739565b80156111065780601f106110db57610100808354040283529160200191611106565b820191906000526020600020905b8154815290600101906020018083116110e957829003601f168201915b505050505081565b600060cf548261050491906126f6565b6097546001600160a01b031633146111785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610611565b6001600160a01b0381166111dd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610611565b6107f1816118af565b60006111f282846126d7565b60ca81905560cb555060d19190915560d255565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061123b826108c2565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60d0548114156112b85760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b6044820152606401610611565b336112c2826108c2565b6001600160a01b03161461130e5760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b6044820152606401610611565b600081815260cd602052604081205460ca5460cf5491929161133091906126ab565b600081815260cc60208181526040808420805489865260cd8452828620879055808652828620899055888652939092528320829055838352869055919250611377856108c2565b9050611384600086611206565b6113b36040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b815250611cf0565b6113bc85611d33565b6001600160a01b03811660009081526068602052604081208054600192906113e59084906126f6565b92505081905550600160ca60008282546113ff91906126ab565b909155505060008581526067602052604080822080546001600160a01b0319169055518691906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050505050565b6000606460d5548361146e91906126d7565b61147891906126c3565b9050600061148682846126f6565b60c95460d45460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101869052929350169063a9059cbb90604401602060405180830381600087803b1580156114d857600080fd5b505af11580156114ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115109190612354565b5060c95460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561155d57600080fd5b505af1158015611571573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e759190612354565b6000818152606760205260408120546001600160a01b031661160e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610611565b6000611619836108c2565b9050806001600160a01b0316846001600160a01b031614806116545750836001600160a01b03166116498461059c565b6001600160a01b0316145b8061106e57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff1661106e565b826001600160a01b031661169b826108c2565b6001600160a01b0316146117035760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610611565b6001600160a01b0382166117655760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610611565b611770600082611206565b6001600160a01b03831660009081526068602052604081208054600192906117999084906126f6565b90915550506001600160a01b03821660009081526068602052604081208054600192906117c79084906126ab565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff1680611841575060005460ff16155b61185d5760405162461bcd60e51b8152600401610611906125db565b600054610100900460ff1615801561187f576000805461ffff19166101011790555b611887611d78565b61188f611d78565b6118998383611de3565b8015610747576000805461ff0019169055505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156119635760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610611565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000816119db610e7b565b610504919061278f565b6001600160a01b038216611a3b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610611565b6000818152606760205260409020546001600160a01b031615611aa05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610611565b6001600160a01b0382166000908152606860205260408120805460019290611ac99084906126ab565b9091555050600081815260676020526040812080546001600160a01b0319166001600160a01b03851617905560ca805460019290611b089084906126f6565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611b54848484611688565b611b6084848484611e78565b610e755760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610611565b606060d3805461051990612739565b606081611bfa5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611c245780611c0e81612774565b9150611c1d9050600a836126c3565b9150611bfe565b60008167ffffffffffffffff811115611c4d57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c77576020820181803683370190505b5090505b841561106e57611c8c6001836126f6565b9150611c99600a8661278f565b611ca49060306126ab565b60f81b818381518110611cc757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611ce9600a866126c3565b9450611c7b565b6107f181604051602401611d0491906125c8565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611fdb565b6107f181604051602401611d4991815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611fdb565b600054610100900460ff1680611d91575060005460ff16155b611dad5760405162461bcd60e51b8152600401610611906125db565b600054610100900460ff16158015611dcf576000805461ffff19166101011790555b80156107f1576000805461ff001916905550565b600054610100900460ff1680611dfc575060005460ff16155b611e185760405162461bcd60e51b8152600401610611906125db565b600054610100900460ff16158015611e3a576000805461ffff19166101011790555b8251611e4d906065906020860190611ffc565b508151611e61906066906020850190611ffc565b508015610747576000805461ff0019169055505050565b60006001600160a01b0384163b15611fd057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ebc90339089908890889060040161255a565b602060405180830381600087803b158015611ed657600080fd5b505af1925050508015611f06575060408051601f3d908101601f19168201909252611f039181019061238c565b60015b611fb6573d808015611f34576040519150601f19603f3d011682016040523d82523d6000602084013e611f39565b606091505b508051611fae5760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e74657200000000000000006064820152608401610611565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061106e565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b82805461200890612739565b90600052602060002090601f01602090048101928261202a5760008555612070565b82601f1061204357805160ff1916838001178555612070565b82800160010185558215612070579182015b82811115612070578251825591602001919060010190612055565b5061207c92915061209e565b5090565b60405180604001604052806002906020820280368337509192915050565b5b8082111561207c576000815560010161209f565b600067ffffffffffffffff8311156120cd576120cd6127cf565b6120e0601f8401601f191660200161267a565b90508281528383830111156120f457600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b038116811461212257600080fd5b919050565b600082601f830112612137578081fd5b612146838335602085016120b3565b9392505050565b60006020828403121561215e578081fd5b6121468261210b565b60008060408385031215612179578081fd5b6121828361210b565b91506121906020840161210b565b90509250929050565b6000806000606084860312156121ad578081fd5b6121b68461210b565b92506121c46020850161210b565b9150604084013590509250925092565b600080600080608085870312156121e9578081fd5b6121f28561210b565b93506122006020860161210b565b925060408501359150606085013567ffffffffffffffff811115612222578182fd5b8501601f81018713612232578182fd5b612241878235602084016120b3565b91505092959194509250565b6000806040838503121561225f578182fd5b6122688361210b565b91506020830135612278816127e5565b809150509250929050565b60008060408385031215612295578182fd5b61229e8361210b565b946020939093013593505050565b600060208083850312156122be578182fd5b823567ffffffffffffffff808211156122d5578384fd5b818501915085601f8301126122e8578384fd5b8135818111156122fa576122fa6127cf565b8060051b915061230b84830161267a565b8181528481019084860184860187018a1015612325578788fd5b8795505b83861015612347578035835260019590950194918601918601612329565b5098975050505050505050565b600060208284031215612365578081fd5b8151612146816127e5565b600060208284031215612381578081fd5b8135612146816127f3565b60006020828403121561239d578081fd5b8151612146816127f3565b600080600080600080600060e0888a0312156123c2578283fd5b873567ffffffffffffffff808211156123d9578485fd5b6123e58b838c01612127565b985060208a01359150808211156123fa578485fd5b6124068b838c01612127565b975061241460408b0161210b565b965060608a0135915080821115612429578485fd5b506124368a828b01612127565b9450506080880135925060a0880135915061245360c0890161210b565b905092959891949750929550565b600060208284031215612472578081fd5b5035919050565b6000806040838503121561248b578182fd5b50508035926020909101359150565b600081518084526124b281602086016020860161270d565b601f01601f19169290920160200192915050565b600084516124d881846020890161270d565b676d6574616461746160c01b908301908152602f60f81b6008820152686d657461646174612d60b81b6009820152845161251981601284016020890161270d565b605f60f81b60129290910191820152835161253b81601384016020880161270d565b64173539b7b760d91b6013929091019182015260180195945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061258d9083018461249a565b9695505050505050565b60408101818360005b60028110156125bf5781518352602092830192909101906001016125a0565b50505092915050565b602081526000612146602083018461249a565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff811182821017156126a3576126a36127cf565b604052919050565b600082198211156126be576126be6127a3565b500190565b6000826126d2576126d26127b9565b500490565b60008160001904831182151516156126f1576126f16127a3565b500290565b600082821015612708576127086127a3565b500390565b60005b83811015612728578181015183820152602001612710565b83811115610e755750506000910152565b600181811c9082168061274d57607f821691505b6020821081141561276e57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612788576127886127a3565b5060010190565b60008261279e5761279e6127b9565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146107f157600080fd5b6001600160e01b0319811681146107f157600080fdfea2646970667358221220994703930b7ea9630c143372ffefa7ca38a47c60aa53d05c900e4b162bab1bc764736f6c63430008040033";

type PXMockV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXMockV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PXMockV2__factory extends ContractFactory {
  constructor(...args: PXMockV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PXMockV2> {
    return super.deploy(overrides || {}) as Promise<PXMockV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PXMockV2 {
    return super.attach(address) as PXMockV2;
  }
  connect(signer: Signer): PXMockV2__factory {
    return super.connect(signer) as PXMockV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXMockV2Interface {
    return new utils.Interface(_abi) as PXMockV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PXMockV2 {
    return new Contract(address, _abi, signerOrProvider) as PXMockV2;
  }
}
