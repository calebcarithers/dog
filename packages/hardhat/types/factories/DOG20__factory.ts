/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DOG20, DOG20Interface } from "../DOG20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "holders",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "__DOG20_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "holders",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "initMock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611009806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063554f120e1161008c57806395d89b411161006657806395d89b41146101a7578063a457c2d7146101af578063a9059cbb146101c2578063dd62ed3e146101d5576100df565b8063554f120e1461016c5780635e8c26bd1461018157806370a0823114610194576100df565b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a5780633950935114610159576100df565b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec61020e565b6040516100f99190610ee6565b60405180910390f35b610115610110366004610df0565b6102a0565b60405190151581526020016100f9565b6035545b6040519081526020016100f9565b610115610145366004610db5565b6102b6565b604051601281526020016100f9565b610115610167366004610df0565b61037a565b61017f61017a366004610e19565b6103b6565b005b61017f61018f366004610e19565b6104e9565b6101296101a2366004610d62565b610538565b6100ec610557565b6101156101bd366004610df0565b610566565b6101156101d0366004610df0565b610617565b6101296101e3366004610d83565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b60606036805461021d90610f51565b80601f016020809104026020016040519081016040528092919081815260200182805461024990610f51565b80156102965780601f1061026b57610100808354040283529160200191610296565b820191906000526020600020905b81548152906001019060200180831161027957829003601f168201915b5050505050905090565b60006102ad338484610624565b50600192915050565b60006102c384848461077c565b6001600160a01b0384166000908152603460209081526040808320338452909152902054828110156103625760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61036f8533858403610624565b506001949350505050565b3360008181526034602090815260408083206001600160a01b038716845290915281205490916102ad9185906103b1908690610f39565b610624565b600054610100900460ff16806103cf575060005460ff16155b6104325760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610359565b600054610100900460ff16158015610454576000805461ffff19166101011790555b6104c86040518060400160405280600581526020017f444f4732300000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4432300000000000000000000000000000000000000000000000000000000000815250610994565b6104d283836104e9565b80156104e4576000805461ff00191690555b505050565b60005b82518110156104e45761052683828151811061051857634e487b7160e01b600052603260045260246000fd5b602002602001015183610a44565b8061053081610f8c565b9150506104ec565b6001600160a01b0381166000908152603360205260409020545b919050565b60606037805461021d90610f51565b3360009081526034602090815260408083206001600160a01b0386168452909152812054828110156106005760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610359565b61060d3385858403610624565b5060019392505050565b60006102ad33848461077c565b6001600160a01b03831661069f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610359565b6001600160a01b03821661071b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610359565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107f85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610359565b6001600160a01b0382166108745760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610359565b6001600160a01b038316600090815260336020526040902054818110156109035760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610359565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061093a908490610f39565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161098691815260200190565b60405180910390a350505050565b600054610100900460ff16806109ad575060005460ff16155b610a105760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610359565b600054610100900460ff16158015610a32576000805461ffff19166101011790555b610a3a610b23565b6104d28383610bd6565b6001600160a01b038216610a9a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610359565b8060356000828254610aac9190610f39565b90915550506001600160a01b03821660009081526033602052604081208054839290610ad9908490610f39565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff1680610b3c575060005460ff16155b610b9f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610359565b600054610100900460ff16158015610bc1576000805461ffff19166101011790555b8015610bd3576000805461ff00191690555b50565b600054610100900460ff1680610bef575060005460ff16155b610c525760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610359565b600054610100900460ff16158015610c74576000805461ffff19166101011790555b8251610c87906036906020860190610cb2565b508151610c9b906037906020850190610cb2565b5080156104e4576000805461ff0019169055505050565b828054610cbe90610f51565b90600052602060002090601f016020900481019282610ce05760008555610d26565b82601f10610cf957805160ff1916838001178555610d26565b82800160010185558215610d26579182015b82811115610d26578251825591602001919060010190610d0b565b50610d32929150610d36565b5090565b5b80821115610d325760008155600101610d37565b80356001600160a01b038116811461055257600080fd5b600060208284031215610d73578081fd5b610d7c82610d4b565b9392505050565b60008060408385031215610d95578081fd5b610d9e83610d4b565b9150610dac60208401610d4b565b90509250929050565b600080600060608486031215610dc9578081fd5b610dd284610d4b565b9250610de060208501610d4b565b9150604084013590509250925092565b60008060408385031215610e02578182fd5b610e0b83610d4b565b946020939093013593505050565b60008060408385031215610e2b578182fd5b823567ffffffffffffffff80821115610e42578384fd5b818501915085601f830112610e55578384fd5b8135602082821115610e6957610e69610fbd565b8160051b604051601f19603f83011681018181108682111715610e8e57610e8e610fbd565b604052838152828101945085830182870184018b1015610eac578889fd5b8896505b84871015610ed557610ec181610d4b565b865260019690960195948301948301610eb0565b509997909101359750505050505050565b6000602080835283518082850152825b81811015610f1257858101830151858201604001528201610ef6565b81811115610f235783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610f4c57610f4c610fa7565b500190565b600181811c90821680610f6557607f821691505b60208210811415610f8657634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610fa057610fa0610fa7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220708f1ed3dc14ad5d8e895def1f3d7c79dca477b1a2ae41a6b64531816e80b30e64736f6c63430008030033";

type DOG20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DOG20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DOG20__factory extends ContractFactory {
  constructor(...args: DOG20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DOG20> {
    return super.deploy(overrides || {}) as Promise<DOG20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DOG20 {
    return super.attach(address) as DOG20;
  }
  connect(signer: Signer): DOG20__factory {
    return super.connect(signer) as DOG20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DOG20Interface {
    return new utils.Interface(_abi) as DOG20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DOG20 {
    return new Contract(address, _abi, signerOrProvider) as DOG20;
  }
}
