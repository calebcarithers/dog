/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DOG20, DOG20Interface } from "../DOG20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "holders",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "__DOG20_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e1e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063554f120e11610071578063554f120e1461014157806370a082311461015657806395d89b411461017f578063a457c2d714610187578063a9059cbb1461019a578063dd62ed3e146101ad57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101e6565b6040516100ce9190610cad565b60405180910390f35b6100ea6100e5366004610bb7565b610278565b60405190151581526020016100ce565b6035545b6040519081526020016100ce565b6100ea61011a366004610b7c565b61028e565b604051601281526020016100ce565b6100ea61013c366004610bb7565b61033d565b61015461014f366004610be0565b610379565b005b6100fe610164366004610b29565b6001600160a01b031660009081526033602052604090205490565b6100c1610483565b6100ea610195366004610bb7565b610492565b6100ea6101a8366004610bb7565b61052b565b6100fe6101bb366004610b4a565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6060603680546101f590610d66565b80601f016020809104026020016040519081016040528092919081815260200182805461022190610d66565b801561026e5780601f106102435761010080835404028352916020019161026e565b820191906000526020600020905b81548152906001019060200180831161025157829003601f168201915b5050505050905090565b6000610285338484610538565b50600192915050565b600061029b84848461065c565b6001600160a01b0384166000908152603460209081526040808320338452909152902054828110156103255760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103328533858403610538565b506001949350505050565b3360008181526034602090815260408083206001600160a01b03871684529091528120549091610285918590610374908690610d4e565b610538565b600054610100900460ff1680610392575060005460ff16155b6103ae5760405162461bcd60e51b815260040161031c90610d00565b600054610100900460ff161580156103d0576000805461ffff19166101011790555b610412604051806040016040528060058152602001640444f4732360dc1b8152506040518060400160405280600381526020016204432360ec1b81525061082b565b60005b83518110156104615761044f84828151811061044157634e487b7160e01b600052603260045260246000fd5b602002602001015184610894565b8061045981610da1565b915050610415565b5061046c3083610894565b801561047e576000805461ff00191690555b505050565b6060603780546101f590610d66565b3360009081526034602090815260408083206001600160a01b0386168452909152812054828110156105145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161031c565b6105213385858403610538565b5060019392505050565b600061028533848461065c565b6001600160a01b03831661059a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161031c565b6001600160a01b0382166105fb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161031c565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166106c05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161031c565b6001600160a01b0382166107225760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161031c565b6001600160a01b0383166000908152603360205260409020548181101561079a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161031c565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906107d1908490610d4e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161081d91815260200190565b60405180910390a350505050565b600054610100900460ff1680610844575060005460ff16155b6108605760405162461bcd60e51b815260040161031c90610d00565b600054610100900460ff16158015610882576000805461ffff19166101011790555b61088a610973565b61046c83836109df565b6001600160a01b0382166108ea5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161031c565b80603560008282546108fc9190610d4e565b90915550506001600160a01b03821660009081526033602052604081208054839290610929908490610d4e565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff168061098c575060005460ff16155b6109a85760405162461bcd60e51b815260040161031c90610d00565b600054610100900460ff161580156109ca576000805461ffff19166101011790555b80156109dc576000805461ff00191690555b50565b600054610100900460ff16806109f8575060005460ff16155b610a145760405162461bcd60e51b815260040161031c90610d00565b600054610100900460ff16158015610a36576000805461ffff19166101011790555b8251610a49906036906020860190610a74565b508151610a5d906037906020850190610a74565b50801561047e576000805461ff0019169055505050565b828054610a8090610d66565b90600052602060002090601f016020900481019282610aa25760008555610ae8565b82601f10610abb57805160ff1916838001178555610ae8565b82800160010185558215610ae8579182015b82811115610ae8578251825591602001919060010190610acd565b50610af4929150610af8565b5090565b5b80821115610af45760008155600101610af9565b80356001600160a01b0381168114610b2457600080fd5b919050565b600060208284031215610b3a578081fd5b610b4382610b0d565b9392505050565b60008060408385031215610b5c578081fd5b610b6583610b0d565b9150610b7360208401610b0d565b90509250929050565b600080600060608486031215610b90578081fd5b610b9984610b0d565b9250610ba760208501610b0d565b9150604084013590509250925092565b60008060408385031215610bc9578182fd5b610bd283610b0d565b946020939093013593505050565b60008060408385031215610bf2578182fd5b823567ffffffffffffffff80821115610c09578384fd5b818501915085601f830112610c1c578384fd5b8135602082821115610c3057610c30610dd2565b8160051b604051601f19603f83011681018181108682111715610c5557610c55610dd2565b604052838152828101945085830182870184018b1015610c73578889fd5b8896505b84871015610c9c57610c8881610b0d565b865260019690960195948301948301610c77565b509997909101359750505050505050565b6000602080835283518082850152825b81811015610cd957858101830151858201604001528201610cbd565b81811115610cea5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008219821115610d6157610d61610dbc565b500190565b600181811c90821680610d7a57607f821691505b60208210811415610d9b57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610db557610db5610dbc565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122078789fd22c2f3d8537d84237035e1c4b395b83dcb8523a16ce3a7f1a311d74cb64736f6c63430008040033";

type DOG20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DOG20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DOG20__factory extends ContractFactory {
  constructor(...args: DOG20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DOG20> {
    return super.deploy(overrides || {}) as Promise<DOG20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DOG20 {
    return super.attach(address) as DOG20;
  }
  connect(signer: Signer): DOG20__factory {
    return super.connect(signer) as DOG20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DOG20Interface {
    return new utils.Interface(_abi) as DOG20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DOG20 {
    return new Contract(address, _abi, signerOrProvider) as DOG20;
  }
}
