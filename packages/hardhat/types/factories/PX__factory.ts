/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PX, PXInterface } from "../PX";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "puppers",
        type: "uint256[]",
      },
    ],
    name: "burnPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506125b8806100206000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806379d90b171161010f578063b88d4fde116100a2578063dbddb26a11610071578063dbddb26a146103e1578063e4e4dc42146103e9578063e985e9c5146103fc578063f2fde38b1461043857600080fd5b8063b88d4fde146103ab578063bcb00f29146103be578063c87b56dd146103c6578063d85d95ef146103d957600080fd5b8063a035386d116100de578063a035386d14610373578063a22cb4651461037c578063a6053eb51461038f578063b43ff0f0146103a257600080fd5b806379d90b17146103315780638da5cb5b1461035157806395d89b411461036257806397b874f71461036a57600080fd5b806342842e0e11610187578063690c9f4311610156578063690c9f43146102fa5780636d677a741461030357806370a0823114610316578063715018a61461032957600080fd5b806342842e0e146102b85780635334dbb7146102cb5780635d29904e146102de5780636352211e146102e757600080fd5b8063095ea7b3116101c3578063095ea7b314610274578063109429901461028957806318160ddd1461029c57806323b872dd146102a557600080fd5b806301ffc9a7146101f5578063055fa0d51461021d57806306fdde0314610234578063081812fc14610249575b600080fd5b610208610203366004612160565b61044b565b60405190151581526020015b60405180910390f35b61022660ca5481565b604051908152602001610214565b61023c61049d565b6040516102149190612341565b61025c61025736600461223f565b61052f565b6040516001600160a01b039091168152602001610214565b610287610282366004612073565b6105c9565b005b61028761029736600461209c565b6106df565b61022660cb5481565b6102876102b3366004611f89565b610816565b6102876102c6366004611f89565b610847565b6102876102d9366004612198565b610862565b61022660d25481565b61025c6102f536600461223f565b61095f565b61022660d15481565b61028761031136600461223f565b6109d6565b610226610324366004611f3d565b610a04565b610287610a8b565b61034461033f36600461223f565b610af1565b6040516102149190612310565b6097546001600160a01b031661025c565b61023c610b40565b61022660d05481565b61022660ce5481565b61028761038a36600461203d565b610b4f565b61028761039d36600461223f565b610b5a565b61022660cf5481565b6102876103b9366004611fc4565b610d89565b610226610dc1565b61023c6103d436600461223f565b610ebf565b610287610fbc565b61023c610fc6565b6102266103f736600461223f565b611054565b61020861040a366004611f57565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b610287610446366004611f3d565b611064565b60006001600160e01b031982166380ac58cd60e01b148061047c57506001600160e01b03198216635b5e139f60e01b145b8061049757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546104ac906124b2565b80601f01602080910402602001604051908101604052809291908181526020018280546104d8906124b2565b80156105255780601f106104fa57610100808354040283529160200191610525565b820191906000526020600020905b81548152906001019060200180831161050857829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166105ad5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105d48261095f565b9050806001600160a01b0316836001600160a01b031614156106425760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105a4565b336001600160a01b038216148061065e575061065e813361040a565b6106d05760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105a4565b6106da838361112f565b505050565b60008151116107205760405162461bcd60e51b815260206004820152600d60248201526c456d707479207075707065727360981b60448201526064016105a4565b60005b815181101561076c5761075c82828151811061074f57634e487b7160e01b600052603260045260246000fd5b602002602001015161119d565b610765816124ed565b9050610723565b5060c95460ce5482516001600160a01b039092169163a9059cbb9133916107939190612450565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044015b602060405180830381600087803b1580156107da57600080fd5b505af11580156107ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108129190612144565b5050565b6108203382611385565b61083c5760405162461bcd60e51b81526004016105a4906123a2565b6106da838383611478565b6106da83838360405180602001604052806000815250610d89565b600054610100900460ff168061087b575060005460ff16155b6108975760405162461bcd60e51b81526004016105a490612354565b600054610100900460ff161580156108b9576000805461ffff19166101011790555b6108c38787611618565b6001600160a01b0385166108d657600080fd5b60c980546001600160a01b0319166001600160a01b03871617905564014941658b60ce55620f424060cf55600060d05560d183905560d282905561091a8284612450565b60cb5560d25460d15461092d9190612450565b60ca5583516109439060d3906020870190611dec565b508015610956576000805461ff00191690555b50505050505050565b6000818152606760205260408120546001600160a01b0316806104975760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105a4565b6109df8161119d565b60c95460ce546001600160a01b039091169063a9059cbb903390610793906001612450565b60006001600160a01b038216610a6f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105a4565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610ae55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a4565b610aef600061169f565b565b610af9611e70565b600060cf5483610b09919061246f565b9050604051806040016040528060d15483610b249190612508565b815260200160d15483610b37919061243c565b90529392505050565b6060606680546104ac906124b2565b6108123383836116f1565b60008111610ba25760405162461bcd60e51b81526020600482015260156024820152744e6f6e20706f736974697665207175616e7469747960581b60448201526064016105a4565b60ca54811115610bf45760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f7567682070757070657273206c65667400000000000000000060448201526064016105a4565b60005b81811015610d2857600060ca5411610c485760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016105a4565b6000610c5560ca546117c0565b60cf54610c629190612424565b60d054600082815260cc60205260409020549192501415610c8f57600081815260cc602052604090208190555b6000600160ca5460cf54610ca39190612424565b610cad919061246f565b60d054600082815260cc60205260409020549192501415610cda57600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd909252909120829055610d1433826117d5565b50505080610d21906124ed565b9050610bf7565b5060c95460ce546001600160a01b03909116906323b872dd9033903090610d4f9086612450565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016107c0565b610d933383611385565b610daf5760405162461bcd60e51b81526004016105a4906123a2565b610dbb84848484611939565b50505050565b60ca546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610e0e919061243c565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610e53919061243c565b610e5d4442612424565b610e679190612424565b610e719190612424565b610e7b9190612424565b610e859190612424565b610e8f9190612424565b604051602001610ea191815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610f3e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016105a4565b6000610f486119b7565b90506000610f5584610af1565b90506000825111610f755760405180602001604052806000815250610fb4565b81610f878260005b60200201516119c6565b610f92836001610f7d565b604051602001610fa493929190612283565b6040516020818303038152906040525b949350505050565b610aef6001610b5a565b60d38054610fd3906124b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610fff906124b2565b801561104c5780601f106110215761010080835404028352916020019161104c565b820191906000526020600020905b81548152906001019060200180831161102f57829003601f168201915b505050505081565b600060cf5482610497919061246f565b6097546001600160a01b031633146110be5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a4565b6001600160a01b0381166111235760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a4565b61112c8161169f565b50565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906111648261095f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60d0548114156111e15760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b60448201526064016105a4565b336111eb8261095f565b6001600160a01b0316146112375760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b60448201526064016105a4565b600081815260cd602052604081205460ca5460cf549192916112599190612424565b600081815260cc60208181526040808420805489865260cd84528286208790558086528286208990558886529390925283208290558383528690559192506112a08561095f565b90506112ad60008661112f565b6112dc6040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b815250611ae0565b6112e585611b23565b6001600160a01b038116600090815260686020526040812080546001929061130e90849061246f565b92505081905550600160ca60008282546113289190612424565b909155505060008581526067602052604080822080546001600160a01b0319169055518691906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050505050565b6000818152606760205260408120546001600160a01b03166113fe5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105a4565b60006114098361095f565b9050806001600160a01b0316846001600160a01b031614806114445750836001600160a01b03166114398461052f565b6001600160a01b0316145b80610fb457506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff16610fb4565b826001600160a01b031661148b8261095f565b6001600160a01b0316146114f35760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105a4565b6001600160a01b0382166115555760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105a4565b61156060008261112f565b6001600160a01b038316600090815260686020526040812080546001929061158990849061246f565b90915550506001600160a01b03821660009081526068602052604081208054600192906115b7908490612424565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff1680611631575060005460ff16155b61164d5760405162461bcd60e51b81526004016105a490612354565b600054610100900460ff1615801561166f576000805461ffff19166101011790555b611677611b68565b61167f611b68565b6116898383611bd3565b80156106da576000805461ff0019169055505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156117535760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105a4565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000816117cb610dc1565b6104979190612508565b6001600160a01b03821661182b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105a4565b6000818152606760205260409020546001600160a01b0316156118905760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105a4565b6001600160a01b03821660009081526068602052604081208054600192906118b9908490612424565b9091555050600081815260676020526040812080546001600160a01b0319166001600160a01b03851617905560ca8054600192906118f890849061246f565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611944848484611478565b61195084848484611c68565b610dbb5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105a4565b606060d380546104ac906124b2565b6060816119ea5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a1457806119fe816124ed565b9150611a0d9050600a8361243c565b91506119ee565b60008167ffffffffffffffff811115611a3d57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611a67576020820181803683370190505b5090505b8415610fb457611a7c60018361246f565b9150611a89600a86612508565b611a94906030612424565b60f81b818381518110611ab757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611ad9600a8661243c565b9450611a6b565b61112c81604051602401611af49190612341565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611dcb565b61112c81604051602401611b3991815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611dcb565b600054610100900460ff1680611b81575060005460ff16155b611b9d5760405162461bcd60e51b81526004016105a490612354565b600054610100900460ff16158015611bbf576000805461ffff19166101011790555b801561112c576000805461ff001916905550565b600054610100900460ff1680611bec575060005460ff16155b611c085760405162461bcd60e51b81526004016105a490612354565b600054610100900460ff16158015611c2a576000805461ffff19166101011790555b8251611c3d906065906020860190611dec565b508151611c51906066906020850190611dec565b5080156106da576000805461ff0019169055505050565b60006001600160a01b0384163b15611dc057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611cac9033908990889088906004016122d3565b602060405180830381600087803b158015611cc657600080fd5b505af1925050508015611cf6575060408051601f3d908101601f19168201909252611cf39181019061217c565b60015b611da6573d808015611d24576040519150601f19603f3d011682016040523d82523d6000602084013e611d29565b606091505b508051611d9e5760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e746572000000000000000060648201526084016105a4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610fb4565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054611df8906124b2565b90600052602060002090601f016020900481019282611e1a5760008555611e60565b82601f10611e3357805160ff1916838001178555611e60565b82800160010185558215611e60579182015b82811115611e60578251825591602001919060010190611e45565b50611e6c929150611e8e565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115611e6c5760008155600101611e8f565b600067ffffffffffffffff831115611ebd57611ebd612548565b611ed0601f8401601f19166020016123f3565b9050828152838383011115611ee457600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b0381168114611f1257600080fd5b919050565b600082601f830112611f27578081fd5b611f3683833560208501611ea3565b9392505050565b600060208284031215611f4e578081fd5b611f3682611efb565b60008060408385031215611f69578081fd5b611f7283611efb565b9150611f8060208401611efb565b90509250929050565b600080600060608486031215611f9d578081fd5b611fa684611efb565b9250611fb460208501611efb565b9150604084013590509250925092565b60008060008060808587031215611fd9578081fd5b611fe285611efb565b9350611ff060208601611efb565b925060408501359150606085013567ffffffffffffffff811115612012578182fd5b8501601f81018713612022578182fd5b61203187823560208401611ea3565b91505092959194509250565b6000806040838503121561204f578182fd5b61205883611efb565b915060208301356120688161255e565b809150509250929050565b60008060408385031215612085578182fd5b61208e83611efb565b946020939093013593505050565b600060208083850312156120ae578182fd5b823567ffffffffffffffff808211156120c5578384fd5b818501915085601f8301126120d8578384fd5b8135818111156120ea576120ea612548565b8060051b91506120fb8483016123f3565b8181528481019084860184860187018a1015612115578788fd5b8795505b83861015612137578035835260019590950194918601918601612119565b5098975050505050505050565b600060208284031215612155578081fd5b8151611f368161255e565b600060208284031215612171578081fd5b8135611f368161256c565b60006020828403121561218d578081fd5b8151611f368161256c565b60008060008060008060c087890312156121b0578182fd5b863567ffffffffffffffff808211156121c7578384fd5b6121d38a838b01611f17565b975060208901359150808211156121e8578384fd5b6121f48a838b01611f17565b965061220260408a01611efb565b95506060890135915080821115612217578384fd5b5061222489828a01611f17565b9350506080870135915060a087013590509295509295509295565b600060208284031215612250578081fd5b5035919050565b6000815180845261226f816020860160208601612486565b601f01601f19169290920160200192915050565b60008451612295818460208901612486565b8451908301906122a9818360208901612486565b605f60f81b910190815283516122c6816001840160208801612486565b0160010195945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061230690830184612257565b9695505050505050565b60408101818360005b6002811015612338578151835260209283019290910190600101612319565b50505092915050565b602081526000611f366020830184612257565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561241c5761241c612548565b604052919050565b600082198211156124375761243761251c565b500190565b60008261244b5761244b612532565b500490565b600081600019048311821515161561246a5761246a61251c565b500290565b6000828210156124815761248161251c565b500390565b60005b838110156124a1578181015183820152602001612489565b83811115610dbb5750506000910152565b600181811c908216806124c657607f821691505b602082108114156124e757634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156125015761250161251c565b5060010190565b60008261251757612517612532565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461112c57600080fd5b6001600160e01b03198116811461112c57600080fdfea26469706673582212206d33dd202f264097ac68bc6dcecabf60dd541605c1dc87017e5bc30ad9af147c64736f6c63430008040033";

type PXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PX__factory extends ContractFactory {
  constructor(...args: PXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PX> {
    return super.deploy(overrides || {}) as Promise<PX>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PX {
    return super.attach(address) as PX;
  }
  connect(signer: Signer): PX__factory {
    return super.connect(signer) as PX__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXInterface {
    return new utils.Interface(_abi) as PXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PX {
    return new Contract(address, _abi, signerOrProvider) as PX;
  }
}
