/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PX, PXInterface } from "../PX";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "puppers",
        type: "uint256[]",
      },
    ],
    name: "burnPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506125f8806100206000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806379d90b171161010f578063b88d4fde116100a2578063dbddb26a11610071578063dbddb26a146103e1578063e4e4dc42146103e9578063e985e9c5146103fc578063f2fde38b1461043857600080fd5b8063b88d4fde146103ab578063bcb00f29146103be578063c87b56dd146103c6578063d85d95ef146103d957600080fd5b8063a035386d116100de578063a035386d14610373578063a22cb4651461037c578063a6053eb51461038f578063b43ff0f0146103a257600080fd5b806379d90b17146103315780638da5cb5b1461035157806395d89b411461036257806397b874f71461036a57600080fd5b806342842e0e11610187578063690c9f4311610156578063690c9f43146102fa5780636d677a741461030357806370a0823114610316578063715018a61461032957600080fd5b806342842e0e146102b85780635334dbb7146102cb5780635d29904e146102de5780636352211e146102e757600080fd5b8063095ea7b3116101c3578063095ea7b314610274578063109429901461028957806318160ddd1461029c57806323b872dd146102a557600080fd5b806301ffc9a7146101f5578063055fa0d51461021d57806306fdde0314610234578063081812fc14610249575b600080fd5b61020861020336600461215c565b61044b565b60405190151581526020015b60405180910390f35b61022660ca5481565b604051908152602001610214565b61023c61049d565b6040516102149190612381565b61025c61025736600461223b565b61052f565b6040516001600160a01b039091168152602001610214565b61028761028236600461206f565b6105c9565b005b610287610297366004612098565b6106df565b61022660cb5481565b6102876102b3366004611f85565b610816565b6102876102c6366004611f85565b610847565b6102876102d9366004612194565b610862565b61022660d25481565b61025c6102f536600461223b565b610964565b61022660d15481565b61028761031136600461223b565b6109db565b610226610324366004611f39565b610a09565b610287610a90565b61034461033f36600461223b565b610af6565b6040516102149190612350565b6097546001600160a01b031661025c565b61023c610b45565b61022660d05481565b61022660ce5481565b61028761038a366004612039565b610b54565b61028761039d36600461223b565b610b5f565b61022660cf5481565b6102876103b9366004611fc0565b610d85565b610226610dbd565b61023c6103d436600461223b565b610ebb565b610287610fb8565b61023c610fc2565b6102266103f736600461223b565b611050565b61020861040a366004611f53565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b610287610446366004611f39565b611060565b60006001600160e01b031982166380ac58cd60e01b148061047c57506001600160e01b03198216635b5e139f60e01b145b8061049757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546104ac906124f2565b80601f01602080910402602001604051908101604052809291908181526020018280546104d8906124f2565b80156105255780601f106104fa57610100808354040283529160200191610525565b820191906000526020600020905b81548152906001019060200180831161050857829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166105ad5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105d482610964565b9050806001600160a01b0316836001600160a01b031614156106425760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105a4565b336001600160a01b038216148061065e575061065e813361040a565b6106d05760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105a4565b6106da838361112b565b505050565b60008151116107205760405162461bcd60e51b815260206004820152600d60248201526c456d707479207075707065727360981b60448201526064016105a4565b60005b815181101561076c5761075c82828151811061074f57634e487b7160e01b600052603260045260246000fd5b6020026020010151611199565b6107658161252d565b9050610723565b5060c95460ce5482516001600160a01b039092169163a9059cbb9133916107939190612490565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044015b602060405180830381600087803b1580156107da57600080fd5b505af11580156107ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108129190612140565b5050565b6108203382611381565b61083c5760405162461bcd60e51b81526004016105a4906123e2565b6106da838383611474565b6106da83838360405180602001604052806000815250610d85565b600054610100900460ff168061087b575060005460ff16155b6108975760405162461bcd60e51b81526004016105a490612394565b600054610100900460ff161580156108b9576000805461ffff19166101011790555b6108c38787611614565b6001600160a01b0385166108d657600080fd5b60c980546001600160a01b0319166001600160a01b038716179055690bb28f98c1e0715ce00060ce55620f424060cf55600060d05560d183905560d282905561091f8284612490565b60cb5560d25460d1546109329190612490565b60ca5583516109489060d3906020870190611de8565b50801561095b576000805461ff00191690555b50505050505050565b6000818152606760205260408120546001600160a01b0316806104975760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105a4565b6109e481611199565b60c95460ce546001600160a01b039091169063a9059cbb903390610793906001612490565b60006001600160a01b038216610a745760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105a4565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610aea5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a4565b610af4600061169b565b565b610afe611e6c565b600060cf5483610b0e91906124af565b9050604051806040016040528060d15483610b299190612548565b815260200160d15483610b3c919061247c565b90529392505050565b6060606680546104ac906124f2565b6108123383836116ed565b60008111610ba75760405162461bcd60e51b81526020600482015260156024820152744e6f6e20706f736974697665207175616e7469747960581b60448201526064016105a4565b60ca54811115610bf05760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016105a4565b60005b81811015610d2457600060ca5411610c445760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016105a4565b6000610c5160ca546117bc565b60cf54610c5e9190612464565b60d054600082815260cc60205260409020549192501415610c8b57600081815260cc602052604090208190555b6000600160ca5460cf54610c9f9190612464565b610ca991906124af565b60d054600082815260cc60205260409020549192501415610cd657600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd909252909120829055610d1033826117d1565b50505080610d1d9061252d565b9050610bf3565b5060c95460ce546001600160a01b03909116906323b872dd9033903090610d4b9086612490565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016107c0565b610d8f3383611381565b610dab5760405162461bcd60e51b81526004016105a4906123e2565b610db784848484611935565b50505050565b60ca546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610e0a919061247c565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610e4f919061247c565b610e594442612464565b610e639190612464565b610e6d9190612464565b610e779190612464565b610e819190612464565b610e8b9190612464565b604051602001610e9d91815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610f3a5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016105a4565b6000610f446119b3565b90506000610f5184610af6565b90506000825111610f715760405180602001604052806000815250610fb0565b81610f838260005b60200201516119c2565b610f8e836001610f79565b604051602001610fa09392919061227f565b6040516020818303038152906040525b949350505050565b610af46001610b5f565b60d38054610fcf906124f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610ffb906124f2565b80156110485780601f1061101d57610100808354040283529160200191611048565b820191906000526020600020905b81548152906001019060200180831161102b57829003601f168201915b505050505081565b600060cf548261049791906124af565b6097546001600160a01b031633146110ba5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a4565b6001600160a01b03811661111f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a4565b6111288161169b565b50565b600081815260696020526040902080546001600160a01b0319166001600160a01b038416908117909155819061116082610964565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60d0548114156111dd5760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b60448201526064016105a4565b336111e782610964565b6001600160a01b0316146112335760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b60448201526064016105a4565b600081815260cd602052604081205460ca5460cf549192916112559190612464565b600081815260cc60208181526040808420805489865260cd845282862087905580865282862089905588865293909252832082905583835286905591925061129c85610964565b90506112a960008661112b565b6112d86040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b815250611adc565b6112e185611b1f565b6001600160a01b038116600090815260686020526040812080546001929061130a9084906124af565b92505081905550600160ca60008282546113249190612464565b909155505060008581526067602052604080822080546001600160a01b0319169055518691906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050505050565b6000818152606760205260408120546001600160a01b03166113fa5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105a4565b600061140583610964565b9050806001600160a01b0316846001600160a01b031614806114405750836001600160a01b03166114358461052f565b6001600160a01b0316145b80610fb057506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff16610fb0565b826001600160a01b031661148782610964565b6001600160a01b0316146114ef5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105a4565b6001600160a01b0382166115515760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105a4565b61155c60008261112b565b6001600160a01b03831660009081526068602052604081208054600192906115859084906124af565b90915550506001600160a01b03821660009081526068602052604081208054600192906115b3908490612464565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff168061162d575060005460ff16155b6116495760405162461bcd60e51b81526004016105a490612394565b600054610100900460ff1615801561166b576000805461ffff19166101011790555b611673611b64565b61167b611b64565b6116858383611bcf565b80156106da576000805461ff0019169055505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316141561174f5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105a4565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6000816117c7610dbd565b6104979190612548565b6001600160a01b0382166118275760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105a4565b6000818152606760205260409020546001600160a01b03161561188c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105a4565b6001600160a01b03821660009081526068602052604081208054600192906118b5908490612464565b9091555050600081815260676020526040812080546001600160a01b0319166001600160a01b03851617905560ca8054600192906118f49084906124af565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611940848484611474565b61194c84848484611c64565b610db75760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105a4565b606060d380546104ac906124f2565b6060816119e65750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a1057806119fa8161252d565b9150611a099050600a8361247c565b91506119ea565b60008167ffffffffffffffff811115611a3957634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611a63576020820181803683370190505b5090505b8415610fb057611a786001836124af565b9150611a85600a86612548565b611a90906030612464565b60f81b818381518110611ab357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611ad5600a8661247c565b9450611a67565b61112881604051602401611af09190612381565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611dc7565b61112881604051602401611b3591815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611dc7565b600054610100900460ff1680611b7d575060005460ff16155b611b995760405162461bcd60e51b81526004016105a490612394565b600054610100900460ff16158015611bbb576000805461ffff19166101011790555b8015611128576000805461ff001916905550565b600054610100900460ff1680611be8575060005460ff16155b611c045760405162461bcd60e51b81526004016105a490612394565b600054610100900460ff16158015611c26576000805461ffff19166101011790555b8251611c39906065906020860190611de8565b508151611c4d906066906020850190611de8565b5080156106da576000805461ff0019169055505050565b60006001600160a01b0384163b15611dbc57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ca8903390899088908890600401612313565b602060405180830381600087803b158015611cc257600080fd5b505af1925050508015611cf2575060408051601f3d908101601f19168201909252611cef91810190612178565b60015b611da2573d808015611d20576040519150601f19603f3d011682016040523d82523d6000602084013e611d25565b606091505b508051611d9a5760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e746572000000000000000060648201526084016105a4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610fb0565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054611df4906124f2565b90600052602060002090601f016020900481019282611e165760008555611e5c565b82601f10611e2f57805160ff1916838001178555611e5c565b82800160010185558215611e5c579182015b82811115611e5c578251825591602001919060010190611e41565b50611e68929150611e8a565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115611e685760008155600101611e8b565b600067ffffffffffffffff831115611eb957611eb9612588565b611ecc601f8401601f1916602001612433565b9050828152838383011115611ee057600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b0381168114611f0e57600080fd5b919050565b600082601f830112611f23578081fd5b611f3283833560208501611e9f565b9392505050565b600060208284031215611f4a578081fd5b611f3282611ef7565b60008060408385031215611f65578081fd5b611f6e83611ef7565b9150611f7c60208401611ef7565b90509250929050565b600080600060608486031215611f99578081fd5b611fa284611ef7565b9250611fb060208501611ef7565b9150604084013590509250925092565b60008060008060808587031215611fd5578081fd5b611fde85611ef7565b9350611fec60208601611ef7565b925060408501359150606085013567ffffffffffffffff81111561200e578182fd5b8501601f8101871361201e578182fd5b61202d87823560208401611e9f565b91505092959194509250565b6000806040838503121561204b578182fd5b61205483611ef7565b915060208301356120648161259e565b809150509250929050565b60008060408385031215612081578182fd5b61208a83611ef7565b946020939093013593505050565b600060208083850312156120aa578182fd5b823567ffffffffffffffff808211156120c1578384fd5b818501915085601f8301126120d4578384fd5b8135818111156120e6576120e6612588565b8060051b91506120f7848301612433565b8181528481019084860184860187018a1015612111578788fd5b8795505b83861015612133578035835260019590950194918601918601612115565b5098975050505050505050565b600060208284031215612151578081fd5b8151611f328161259e565b60006020828403121561216d578081fd5b8135611f32816125ac565b600060208284031215612189578081fd5b8151611f32816125ac565b60008060008060008060c087890312156121ac578182fd5b863567ffffffffffffffff808211156121c3578384fd5b6121cf8a838b01611f13565b975060208901359150808211156121e4578384fd5b6121f08a838b01611f13565b96506121fe60408a01611ef7565b95506060890135915080821115612213578384fd5b5061222089828a01611f13565b9350506080870135915060a087013590509295509295509295565b60006020828403121561224c578081fd5b5035919050565b6000815180845261226b8160208601602086016124c6565b601f01601f19169290920160200192915050565b600084516122918184602089016124c6565b676d6574616461746160c01b908301908152602f60f81b6008820152686d657461646174612d60b81b600982015284516122d28160128401602089016124c6565b605f60f81b6012929091019182015283516122f48160138401602088016124c6565b64173539b7b760d91b6013929091019182015260180195945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061234690830184612253565b9695505050505050565b60408101818360005b6002811015612378578151835260209283019290910190600101612359565b50505092915050565b602081526000611f326020830184612253565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561245c5761245c612588565b604052919050565b600082198211156124775761247761255c565b500190565b60008261248b5761248b612572565b500490565b60008160001904831182151516156124aa576124aa61255c565b500290565b6000828210156124c1576124c161255c565b500390565b60005b838110156124e15781810151838201526020016124c9565b83811115610db75750506000910152565b600181811c9082168061250657607f821691505b6020821081141561252757634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156125415761254161255c565b5060010190565b60008261255757612557612572565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461112857600080fd5b6001600160e01b03198116811461112857600080fdfea26469706673582212203c0a16dc5f8ee7767ff33445103606785ceb5e7ab6e92d9f10c947ce71d51e4664736f6c63430008040033";

type PXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PX__factory extends ContractFactory {
  constructor(...args: PXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PX> {
    return super.deploy(overrides || {}) as Promise<PX>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PX {
    return super.attach(address) as PX;
  }
  connect(signer: Signer): PX__factory {
    return super.connect(signer) as PX__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXInterface {
    return new utils.Interface(_abi) as PXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PX {
    return new Contract(address, _abi, signerOrProvider) as PX;
  }
}
