/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PX, PXInterface } from "../PX";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fuelPuppyDispenser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxRand",
        type: "uint256",
      },
    ],
    name: "randYishInRange",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061232a806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80638da5cb5b11610104578063b88d4fde116100a2578063e25aee2f11610071578063e25aee2f146103b9578063e4e4dc42146103cc578063e985e9c5146103df578063f2fde38b1461041b57600080fd5b8063b88d4fde14610383578063bcb00f2914610396578063c87b56dd1461039e578063d85d95ef146103b157600080fd5b8063a035386d116100de578063a035386d1461034b578063a22cb46514610354578063a6053eb514610367578063b43ff0f01461037a57600080fd5b80638da5cb5b1461032957806395d89b411461033a57806397b874f71461034257600080fd5b80632d99e94f1161017c57806370a082311161014b57806370a08231146102db578063715018a6146102ee57806379d90b17146102f65780638777cb931461031657600080fd5b80632d99e94f1461028f57806342842e0e146102a25780636352211e146102b55780636d677a74146102c857600080fd5b8063081812fc116101b8578063081812fc14610233578063095ea7b31461025e57806318160ddd1461027357806323b872dd1461027c57600080fd5b806301ffc9a7146101df578063055fa0d51461020757806306fdde031461021e575b600080fd5b6101f26101ed366004611f25565b61042e565b60405190151581526020015b60405180910390f35b61021060ca5481565b6040519081526020016101fe565b610226610480565b6040516101fe91906120af565b610246610241366004611fce565b610512565b6040516001600160a01b0390911681526020016101fe565b61027161026c366004611ee0565b6105ac565b005b61021060cb5481565b61027161028a366004611df6565b6106c2565b61021061029d366004611fce565b6106f3565b6102716102b0366004611df6565b610708565b6102466102c3366004611fce565b610723565b6102716102d6366004611fce565b61079a565b6102106102e9366004611daa565b61092e565b6102716109b5565b610309610304366004611fce565b6109eb565b6040516101fe919061207e565b610271610324366004611f5d565b610a38565b6097546001600160a01b0316610246565b610226610b13565b61021060d05481565b61021060ce5481565b610271610362366004611eaa565b610b22565b610271610375366004611fce565b610b31565b61021060cf5481565b610271610391366004611e31565b610b55565b610210610b87565b6102266103ac366004611fce565b610ca9565b610210610d91565b6102716103c7366004611fce565b610f3d565b6102106103da366004611fce565b610ff5565b6101f26103ed366004611dc4565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b610271610429366004611daa565b611005565b60006001600160e01b031982166380ac58cd60e01b148061045f57506001600160e01b03198216635b5e139f60e01b145b8061047a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461048f90612224565b80601f01602080910402602001604051908101604052809291908181526020018280546104bb90612224565b80156105085780601f106104dd57610100808354040283529160200191610508565b820191906000526020600020905b8154815290600101906020018083116104eb57829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166105905760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105b782610723565b9050806001600160a01b0316836001600160a01b031614156106255760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610587565b336001600160a01b0382161480610641575061064181336103ed565b6106b35760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610587565b6106bd83836110a0565b505050565b6106cc338261110e565b6106e85760405162461bcd60e51b815260040161058790612145565b6106bd838383611205565b6000816106fe610b87565b61047a919061227a565b6106bd83838360405180602001604052806000815250610b55565b6000818152606760205260408120546001600160a01b03168061047a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610587565b60d0548114156107de5760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b6044820152606401610587565b336107e882610723565b6001600160a01b0316146108345760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b6044820152606401610587565b600081815260cd602052604081205460ca5460cf549192916108569190612196565b600081815260cc60208181526040808420805489865260cd8452828620879055808652828620899055888652939092528320829055918390529085905590915061089f846113a5565b60c95460ce5460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156108ef57600080fd5b505af1158015610903573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109279190611f09565b5050505050565b60006001600160a01b0382166109995760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610587565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b031633146109df5760405162461bcd60e51b815260040161058790612110565b6109e96000611492565b565b6109f3611c42565b600060cf5483610a0391906121e1565b9050604051806040016040528061020083610a1e919061227a565b8152602001610a2f610200846121ae565b90529392505050565b600054610100900460ff1680610a51575060005460ff16155b610a6d5760405162461bcd60e51b8152600401610587906120c2565b600054610100900460ff16158015610a8f576000805461ffff19166101011790555b610a9984846114e4565b6001600160a01b038216610aac57600080fd5b60c980546001600160a01b0319166001600160a01b038416179055600a80610ad481806121c2565b60cb55610ae181836121c2565b60ca55505064014941658b60ce55620f424060cf55600060d0558015610b0d576000805461ff00191690555b50505050565b60606066805461048f90612224565b610b2d33838361156b565b5050565b60005b81811015610b2d57610b44610d91565b50610b4e8161225f565b9050610b34565b610b5f338361110e565b610b7b5760405162461bcd60e51b815260040161058790612145565b610b0d8484848461163a565b60ca546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610bd491906121ae565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610c1991906121ae565b610c234442612196565b610c2d9190612196565b610c379190612196565b610c419190612196565b610c4b9190612196565b610c559190612196565b604051602001610c6791815260200190565b60408051601f1981840301815291905280516020909101209050610c8d6103e8826121ae565b610c99906103e86121c2565b610ca390826121e1565b91505090565b6000818152606760205260409020546060906001600160a01b0316610d285760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610587565b6000610d3f60408051602081019091526000815290565b90506000815111610d5f5760405180602001604052806000815250610d8a565b80610d69846116b8565b604051602001610d7a929190612012565b6040516020818303038152906040525b9392505050565b60008060ca5411610ddb5760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b6044820152606401610587565b6000610de860ca546106f3565b60cf54610df59190612196565b60d054600082815260cc60205260409020549192501415610e2257600081815260cc602052604090208190555b6000600160ca5460cf54610e369190612196565b610e4091906121e1565b60d054600082815260cc60205260409020549192501415610e6d57600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd9092529091208290559250610ea933846117d2565b60c95460ce546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610eff57600080fd5b505af1158015610f13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f379190611f09565b50505090565b6097546001600160a01b03163314610f675760405162461bcd60e51b815260040161058790612110565b60c95460ce546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610fbd57600080fd5b505af1158015610fd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2d9190611f09565b600060cf548261047a91906121e1565b6097546001600160a01b0316331461102f5760405162461bcd60e51b815260040161058790612110565b6001600160a01b0381166110945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610587565b61109d81611492565b50565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906110d582610723565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152606760205260408120546001600160a01b03166111875760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610587565b600061119283610723565b9050806001600160a01b0316846001600160a01b031614806111cd5750836001600160a01b03166111c284610512565b6001600160a01b0316145b806111fd57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661121882610723565b6001600160a01b0316146112805760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610587565b6001600160a01b0382166112e25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610587565b6112ed6000826110a0565b6001600160a01b03831660009081526068602052604081208054600192906113169084906121e1565b90915550506001600160a01b0382166000908152606860205260408120805460019290611344908490612196565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006113b082610723565b90506113bd6000836110a0565b6113ec6040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b815250611936565b6113f582611979565b6001600160a01b038116600090815260686020526040812080546001929061141e9084906121e1565b92505081905550600160ca60008282546114389190612196565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16806114fd575060005460ff16155b6115195760405162461bcd60e51b8152600401610587906120c2565b600054610100900460ff1615801561153b576000805461ffff19166101011790555b6115436119be565b61154b6119be565b6115558383611a29565b80156106bd576000805461ff0019169055505050565b816001600160a01b0316836001600160a01b031614156115cd5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610587565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611645848484611205565b61165184848484611abe565b610b0d5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610587565b6060816116dc5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561170657806116f08161225f565b91506116ff9050600a836121ae565b91506116e0565b60008167ffffffffffffffff81111561172f57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611759576020820181803683370190505b5090505b84156111fd5761176e6001836121e1565b915061177b600a8661227a565b611786906030612196565b60f81b8183815181106117a957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506117cb600a866121ae565b945061175d565b6001600160a01b0382166118285760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610587565b6000818152606760205260409020546001600160a01b03161561188d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610587565b6001600160a01b03821660009081526068602052604081208054600192906118b6908490612196565b9091555050600081815260676020526040812080546001600160a01b0319166001600160a01b03851617905560ca8054600192906118f59084906121e1565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b61109d8160405160240161194a91906120af565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611c21565b61109d8160405160240161198f91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611c21565b600054610100900460ff16806119d7575060005460ff16155b6119f35760405162461bcd60e51b8152600401610587906120c2565b600054610100900460ff16158015611a15576000805461ffff19166101011790555b801561109d576000805461ff001916905550565b600054610100900460ff1680611a42575060005460ff16155b611a5e5760405162461bcd60e51b8152600401610587906120c2565b600054610100900460ff16158015611a80576000805461ffff19166101011790555b8251611a93906065906020860190611c60565b508151611aa7906066906020850190611c60565b5080156106bd576000805461ff0019169055505050565b60006001600160a01b0384163b15611c1657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611b02903390899088908890600401612041565b602060405180830381600087803b158015611b1c57600080fd5b505af1925050508015611b4c575060408051601f3d908101601f19168201909252611b4991810190611f41565b60015b611bfc573d808015611b7a576040519150601f19603f3d011682016040523d82523d6000602084013e611b7f565b606091505b508051611bf45760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e74657200000000000000006064820152608401610587565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506111fd565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60405180604001604052806002906020820280368337509192915050565b828054611c6c90612224565b90600052602060002090601f016020900481019282611c8e5760008555611cd4565b82601f10611ca757805160ff1916838001178555611cd4565b82800160010185558215611cd4579182015b82811115611cd4578251825591602001919060010190611cb9565b50611ce0929150611ce4565b5090565b5b80821115611ce05760008155600101611ce5565b600067ffffffffffffffff80841115611d1457611d146122ba565b604051601f8501601f19908116603f01168101908282118183101715611d3c57611d3c6122ba565b81604052809350858152868686011115611d5557600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611d8657600080fd5b919050565b600082601f830112611d9b578081fd5b610d8a83833560208501611cf9565b600060208284031215611dbb578081fd5b610d8a82611d6f565b60008060408385031215611dd6578081fd5b611ddf83611d6f565b9150611ded60208401611d6f565b90509250929050565b600080600060608486031215611e0a578081fd5b611e1384611d6f565b9250611e2160208501611d6f565b9150604084013590509250925092565b60008060008060808587031215611e46578081fd5b611e4f85611d6f565b9350611e5d60208601611d6f565b925060408501359150606085013567ffffffffffffffff811115611e7f578182fd5b8501601f81018713611e8f578182fd5b611e9e87823560208401611cf9565b91505092959194509250565b60008060408385031215611ebc578182fd5b611ec583611d6f565b91506020830135611ed5816122d0565b809150509250929050565b60008060408385031215611ef2578182fd5b611efb83611d6f565b946020939093013593505050565b600060208284031215611f1a578081fd5b8151610d8a816122d0565b600060208284031215611f36578081fd5b8135610d8a816122de565b600060208284031215611f52578081fd5b8151610d8a816122de565b600080600060608486031215611f71578283fd5b833567ffffffffffffffff80821115611f88578485fd5b611f9487838801611d8b565b94506020860135915080821115611fa9578384fd5b50611fb686828701611d8b565b925050611fc560408501611d6f565b90509250925092565b600060208284031215611fdf578081fd5b5035919050565b60008151808452611ffe8160208601602086016121f8565b601f01601f19169290920160200192915050565b600083516120248184602088016121f8565b8351908301906120388183602088016121f8565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061207490830184611fe6565b9695505050505050565b60408101818360005b60028110156120a6578151835260209283019290910190600101612087565b50505092915050565b602081526000610d8a6020830184611fe6565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156121a9576121a961228e565b500190565b6000826121bd576121bd6122a4565b500490565b60008160001904831182151516156121dc576121dc61228e565b500290565b6000828210156121f3576121f361228e565b500390565b60005b838110156122135781810151838201526020016121fb565b83811115610b0d5750506000910152565b600181811c9082168061223857607f821691505b6020821081141561225957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156122735761227361228e565b5060010190565b600082612289576122896122a4565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461109d57600080fd5b6001600160e01b03198116811461109d57600080fdfea26469706673582212209a7e740834b1740aa80d9058dfeae29c7e882440973d7592545e9a91d513a21c64736f6c63430008040033";

type PXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PX__factory extends ContractFactory {
  constructor(...args: PXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PX> {
    return super.deploy(overrides || {}) as Promise<PX>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PX {
    return super.attach(address) as PX;
  }
  connect(signer: Signer): PX__factory {
    return super.connect(signer) as PX__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXInterface {
    return new utils.Interface(_abi) as PXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PX {
    return new Contract(address, _abi, signerOrProvider) as PX;
  }
}
