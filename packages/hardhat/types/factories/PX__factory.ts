/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PX, PXInterface } from "../PX";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxRand",
        type: "uint256",
      },
    ],
    name: "randYishInRange",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506123cc806100206000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806379d90b171161010f578063b88d4fde116100a2578063dbddb26a11610071578063dbddb26a146103e1578063e4e4dc42146103e9578063e985e9c5146103fc578063f2fde38b1461043857600080fd5b8063b88d4fde146103ab578063bcb00f29146103be578063c87b56dd146103c6578063d85d95ef146103d957600080fd5b8063a035386d116100de578063a035386d14610373578063a22cb4651461037c578063a6053eb51461038f578063b43ff0f0146103a257600080fd5b806379d90b17146103315780638da5cb5b1461035157806395d89b411461036257806397b874f71461036a57600080fd5b806342842e0e11610187578063690c9f4311610156578063690c9f43146102fa5780636d677a741461030357806370a0823114610316578063715018a61461032957600080fd5b806342842e0e146102b85780635334dbb7146102cb5780635d29904e146102de5780636352211e146102e757600080fd5b8063095ea7b3116101c3578063095ea7b31461027457806318160ddd1461028957806323b872dd146102925780632d99e94f146102a557600080fd5b806301ffc9a7146101f5578063055fa0d51461021d57806306fdde0314610234578063081812fc14610249575b600080fd5b610208610203366004611fa5565b61044b565b60405190151581526020015b60405180910390f35b61022660ca5481565b604051908152602001610214565b61023c61049d565b6040516102149190612186565b61025c610257366004612084565b61052f565b6040516001600160a01b039091168152602001610214565b610287610282366004611f60565b6105c9565b005b61022660cb5481565b6102876102a0366004611e76565b6106df565b6102266102b3366004612084565b610710565b6102876102c6366004611e76565b610725565b6102876102d9366004611fdd565b610740565b61022660d25481565b61025c6102f5366004612084565b61083d565b61022660d15481565b610287610311366004612084565b6108b4565b610226610324366004611e2a565b610a48565b610287610acf565b61034461033f366004612084565b610b35565b6040516102149190612155565b6097546001600160a01b031661025c565b61023c610b84565b61022660d05481565b61022660ce5481565b61028761038a366004611f2a565b610b93565b61028761039d366004612084565b610ba2565b61022660cf5481565b6102876103b9366004611eb1565b610bc6565b610226610bfe565b61023c6103d4366004612084565b610cfc565b610226610df9565b61023c610fa5565b6102266103f7366004612084565b611033565b61020861040a366004611e44565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b610287610446366004611e2a565b611043565b60006001600160e01b031982166380ac58cd60e01b148061047c57506001600160e01b03198216635b5e139f60e01b145b8061049757506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060606580546104ac906122c6565b80601f01602080910402602001604051908101604052809291908181526020018280546104d8906122c6565b80156105255780601f106104fa57610100808354040283529160200191610525565b820191906000526020600020905b81548152906001019060200180831161050857829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b03166105ad5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105d48261083d565b9050806001600160a01b0316836001600160a01b031614156106425760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105a4565b336001600160a01b038216148061065e575061065e813361040a565b6106d05760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105a4565b6106da838361110e565b505050565b6106e9338261117c565b6107055760405162461bcd60e51b81526004016105a4906121e7565b6106da83838361126f565b60008161071b610bfe565b610497919061231c565b6106da83838360405180602001604052806000815250610bc6565b600054610100900460ff1680610759575060005460ff16155b6107755760405162461bcd60e51b81526004016105a490612199565b600054610100900460ff16158015610797576000805461ffff19166101011790555b6107a1878761140f565b6001600160a01b0385166107b457600080fd5b60c980546001600160a01b0319166001600160a01b03871617905564014941658b60ce55620f424060cf55600060d05560d183905560d28290556107f88284612264565b60cb5560d25460d15461080b9190612264565b60ca5583516108219060d3906020870190611cbb565b508015610834576000805461ff00191690555b50505050505050565b6000818152606760205260408120546001600160a01b0316806104975760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016105a4565b60d0548114156108f85760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b60448201526064016105a4565b336109028261083d565b6001600160a01b03161461094e5760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b60448201526064016105a4565b600081815260cd602052604081205460ca5460cf549192916109709190612238565b600081815260cc60208181526040808420805489865260cd845282862087905580865282862089905588865293909252832082905591839052908590559091506109b984611496565b60c95460ce5460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610a0957600080fd5b505af1158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190611f89565b5050505050565b60006001600160a01b038216610ab35760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016105a4565b506001600160a01b031660009081526068602052604090205490565b6097546001600160a01b03163314610b295760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a4565b610b336000611583565b565b610b3d611d3f565b600060cf5483610b4d9190612283565b9050604051806040016040528060d15483610b68919061231c565b815260200160d15483610b7b9190612250565b90529392505050565b6060606680546104ac906122c6565b610b9e3383836115d5565b5050565b60005b81811015610b9e57610bb5610df9565b50610bbf81612301565b9050610ba5565b610bd0338361117c565b610bec5760405162461bcd60e51b81526004016105a4906121e7565b610bf8848484846116a4565b50505050565b60ca546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610c4b9190612250565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610c909190612250565b610c9a4442612238565b610ca49190612238565b610cae9190612238565b610cb89190612238565b610cc29190612238565b610ccc9190612238565b604051602001610cde91815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610d7b5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016105a4565b6000610d85611722565b90506000610d9284610b35565b90506000825111610db25760405180602001604052806000815250610df1565b81610dc48260005b6020020151611731565b610dcf836001610dba565b604051602001610de1939291906120c8565b6040516020818303038152906040525b949350505050565b60008060ca5411610e435760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b60448201526064016105a4565b6000610e5060ca54610710565b60cf54610e5d9190612238565b60d054600082815260cc60205260409020549192501415610e8a57600081815260cc602052604090208190555b6000600160ca5460cf54610e9e9190612238565b610ea89190612283565b60d054600082815260cc60205260409020549192501415610ed557600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd9092529091208290559250610f11338461184b565b60c95460ce546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610f6757600080fd5b505af1158015610f7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9f9190611f89565b50505090565b60d38054610fb2906122c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610fde906122c6565b801561102b5780601f106110005761010080835404028352916020019161102b565b820191906000526020600020905b81548152906001019060200180831161100e57829003601f168201915b505050505081565b600060cf54826104979190612283565b6097546001600160a01b0316331461109d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a4565b6001600160a01b0381166111025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a4565b61110b81611583565b50565b600081815260696020526040902080546001600160a01b0319166001600160a01b03841690811790915581906111438261083d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152606760205260408120546001600160a01b03166111f55760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105a4565b60006112008361083d565b9050806001600160a01b0316846001600160a01b0316148061123b5750836001600160a01b03166112308461052f565b6001600160a01b0316145b80610df157506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff16610df1565b826001600160a01b03166112828261083d565b6001600160a01b0316146112ea5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016105a4565b6001600160a01b03821661134c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105a4565b61135760008261110e565b6001600160a01b0383166000908152606860205260408120805460019290611380908490612283565b90915550506001600160a01b03821660009081526068602052604081208054600192906113ae908490612238565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff1680611428575060005460ff16155b6114445760405162461bcd60e51b81526004016105a490612199565b600054610100900460ff16158015611466576000805461ffff19166101011790555b61146e6119af565b6114766119af565b6114808383611a1a565b80156106da576000805461ff0019169055505050565b60006114a18261083d565b90506114ae60008361110e565b6114dd6040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b815250611aaf565b6114e682611af2565b6001600160a01b038116600090815260686020526040812080546001929061150f908490612283565b92505081905550600160ca60008282546115299190612238565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156116375760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105a4565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6116af84848461126f565b6116bb84848484611b37565b610bf85760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105a4565b606060d380546104ac906122c6565b6060816117555750506040805180820190915260018152600360fc1b602082015290565b8160005b811561177f578061176981612301565b91506117789050600a83612250565b9150611759565b60008167ffffffffffffffff8111156117a857634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156117d2576020820181803683370190505b5090505b8415610df1576117e7600183612283565b91506117f4600a8661231c565b6117ff906030612238565b60f81b81838151811061182257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611844600a86612250565b94506117d6565b6001600160a01b0382166118a15760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105a4565b6000818152606760205260409020546001600160a01b0316156119065760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105a4565b6001600160a01b038216600090815260686020526040812080546001929061192f908490612238565b9091555050600081815260676020526040812080546001600160a01b0319166001600160a01b03851617905560ca80546001929061196e908490612283565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600054610100900460ff16806119c8575060005460ff16155b6119e45760405162461bcd60e51b81526004016105a490612199565b600054610100900460ff16158015611a06576000805461ffff19166101011790555b801561110b576000805461ff001916905550565b600054610100900460ff1680611a33575060005460ff16155b611a4f5760405162461bcd60e51b81526004016105a490612199565b600054610100900460ff16158015611a71576000805461ffff19166101011790555b8251611a84906065906020860190611cbb565b508151611a98906066906020850190611cbb565b5080156106da576000805461ff0019169055505050565b61110b81604051602401611ac39190612186565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611c9a565b61110b81604051602401611b0891815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611c9a565b60006001600160a01b0384163b15611c8f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611b7b903390899088908890600401612118565b602060405180830381600087803b158015611b9557600080fd5b505af1925050508015611bc5575060408051601f3d908101601f19168201909252611bc291810190611fc1565b60015b611c75573d808015611bf3576040519150601f19603f3d011682016040523d82523d6000602084013e611bf8565b606091505b508051611c6d5760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e746572000000000000000060648201526084016105a4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610df1565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054611cc7906122c6565b90600052602060002090601f016020900481019282611ce95760008555611d2f565b82601f10611d0257805160ff1916838001178555611d2f565b82800160010185558215611d2f579182015b82811115611d2f578251825591602001919060010190611d14565b50611d3b929150611d5d565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115611d3b5760008155600101611d5e565b600067ffffffffffffffff80841115611d8d57611d8d61235c565b604051601f8501601f19908116603f01168101908282118183101715611db557611db561235c565b81604052809350858152868686011115611dce57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611dff57600080fd5b919050565b600082601f830112611e14578081fd5b611e2383833560208501611d72565b9392505050565b600060208284031215611e3b578081fd5b611e2382611de8565b60008060408385031215611e56578081fd5b611e5f83611de8565b9150611e6d60208401611de8565b90509250929050565b600080600060608486031215611e8a578081fd5b611e9384611de8565b9250611ea160208501611de8565b9150604084013590509250925092565b60008060008060808587031215611ec6578081fd5b611ecf85611de8565b9350611edd60208601611de8565b925060408501359150606085013567ffffffffffffffff811115611eff578182fd5b8501601f81018713611f0f578182fd5b611f1e87823560208401611d72565b91505092959194509250565b60008060408385031215611f3c578182fd5b611f4583611de8565b91506020830135611f5581612372565b809150509250929050565b60008060408385031215611f72578182fd5b611f7b83611de8565b946020939093013593505050565b600060208284031215611f9a578081fd5b8151611e2381612372565b600060208284031215611fb6578081fd5b8135611e2381612380565b600060208284031215611fd2578081fd5b8151611e2381612380565b60008060008060008060c08789031215611ff5578182fd5b863567ffffffffffffffff8082111561200c578384fd5b6120188a838b01611e04565b9750602089013591508082111561202d578384fd5b6120398a838b01611e04565b965061204760408a01611de8565b9550606089013591508082111561205c578384fd5b5061206989828a01611e04565b9350506080870135915060a087013590509295509295509295565b600060208284031215612095578081fd5b5035919050565b600081518084526120b481602086016020860161229a565b601f01601f19169290920160200192915050565b600084516120da81846020890161229a565b8451908301906120ee81836020890161229a565b605f60f81b9101908152835161210b81600184016020880161229a565b0160010195945050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061214b9083018461209c565b9695505050505050565b60408101818360005b600281101561217d57815183526020928301929091019060010161215e565b50505092915050565b602081526000611e23602083018461209c565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000821982111561224b5761224b612330565b500190565b60008261225f5761225f612346565b500490565b600081600019048311821515161561227e5761227e612330565b500290565b60008282101561229557612295612330565b500390565b60005b838110156122b557818101518382015260200161229d565b83811115610bf85750506000910152565b600181811c908216806122da57607f821691505b602082108114156122fb57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561231557612315612330565b5060010190565b60008261232b5761232b612346565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461110b57600080fd5b6001600160e01b03198116811461110b57600080fdfea2646970667358221220f12ba1a97da71390e33349171df3e9201000875e7c19a26736795629132dcf6664736f6c63430008040033";

type PXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PX__factory extends ContractFactory {
  constructor(...args: PXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PX> {
    return super.deploy(overrides || {}) as Promise<PX>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PX {
    return super.attach(address) as PX;
  }
  connect(signer: Signer): PX__factory {
    return super.connect(signer) as PX__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXInterface {
    return new utils.Interface(_abi) as PXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PX {
    return new Contract(address, _abi, signerOrProvider) as PX;
  }
}
