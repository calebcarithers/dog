/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PX, PXInterface } from "../PX";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BASE_URI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_HEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SHIBA_WIDTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsUri_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "width_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "height_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "DOG20_FEES_ADDRESS_",
        type: "address",
      },
    ],
    name: "__PX_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "puppers",
        type: "uint256[]",
      },
    ],
    name: "burnPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "pupperToPixelCoords",
    outputs: [
      {
        internalType: "uint256[2]",
        name: "",
        type: "uint256[2]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506125b3806100206000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806379d90b1711610104578063b43ff0f0116100a2578063dbddb26a11610071578063dbddb26a146103b0578063e4e4dc42146103b8578063e985e9c5146103cb578063f2fde38b1461040757600080fd5b8063b43ff0f014610379578063b88d4fde14610382578063bcb00f2914610395578063c87b56dd1461039d57600080fd5b806397b874f7116100de57806397b874f714610341578063a035386d1461034a578063a22cb46514610353578063a6053eb51461036657600080fd5b806379d90b17146103085780638da5cb5b1461032857806395d89b411461033957600080fd5b806323b872dd1161017c578063690c9f431161014b578063690c9f43146102d157806370a08231146102da5780637132e47b146102ed578063715018a61461030057600080fd5b806323b872dd1461028f57806342842e0e146102a25780635d29904e146102b55780636352211e146102be57600080fd5b8063081812fc116101b8578063081812fc14610233578063095ea7b31461025e578063109429901461027357806318160ddd1461028657600080fd5b806301ffc9a7146101df578063055fa0d51461020757806306fdde031461021e575b600080fd5b6101f26101ed366004612105565b61041a565b60405190151581526020015b60405180910390f35b61021060ca5481565b6040519081526020016101fe565b61022661046c565b6040516101fe919061233c565b6102466102413660046121f6565b6104fe565b6040516001600160a01b0390911681526020016101fe565b61027161026c366004612018565b610598565b005b610271610281366004612041565b6106ae565b61021060cb5481565b61027161029d366004611f2e565b610756565b6102716102b0366004611f2e565b610787565b61021060d25481565b6102466102cc3660046121f6565b6107a2565b61021060d15481565b6102106102e8366004611ee2565b610819565b6102716102fb36600461213d565b6108a0565b6102716109c3565b61031b6103163660046121f6565b610a29565b6040516101fe919061230b565b6097546001600160a01b0316610246565b610226610a78565b61021060d05481565b61021060ce5481565b610271610361366004611fe2565b610a87565b6102716103743660046121f6565b610a96565b61021060cf5481565b610271610390366004611f69565b610cbb565b610210610cf3565b6102266103ab3660046121f6565b610dfe565b610226610efb565b6102106103c63660046121f6565b610f89565b6101f26103d9366004611efc565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b610271610415366004611ee2565b610f99565b60006001600160e01b031982166380ac58cd60e01b148061044b57506001600160e01b03198216635b5e139f60e01b145b8061046657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461047b906124ad565b80601f01602080910402602001604051908101604052809291908181526020018280546104a7906124ad565b80156104f45780601f106104c9576101008083540402835291602001916104f4565b820191906000526020600020905b8154815290600101906020018083116104d757829003601f168201915b5050505050905090565b6000818152606760205260408120546001600160a01b031661057c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152606960205260409020546001600160a01b031690565b60006105a3826107a2565b9050806001600160a01b0316836001600160a01b031614156106115760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610573565b336001600160a01b038216148061062d575061062d81336103d9565b61069f5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610573565b6106a98383611061565b505050565b60008151116106ef5760405162461bcd60e51b815260206004820152600d60248201526c456d707479207075707065727360981b6044820152606401610573565b60005b815181101561073b5761072b82828151811061071e57634e487b7160e01b600052603260045260246000fd5b60200260200101516110cf565b610734816124e8565b90506106f2565b5061075360ce54825161074e919061244b565b6111ed565b50565b6107603382611334565b61077c5760405162461bcd60e51b81526004016105739061239d565b6106a9838383611427565b6106a983838360405180602001604052806000815250610cbb565b6000818152606760205260408120546001600160a01b0316806104665760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610573565b60006001600160a01b0382166108845760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610573565b506001600160a01b031660009081526068602052604090205490565b600054610100900460ff16806108b9575060005460ff16155b6108d55760405162461bcd60e51b81526004016105739061234f565b600054610100900460ff161580156108f7576000805461ffff19166101011790555b61090188886115c7565b6001600160a01b03861661091457600080fd5b60c980546001600160a01b0319166001600160a01b038816179055690bb28f98c1e0715ce00060ce55620f424060cf55600060d05560d184905560d283905561095d838561244b565b60cb5560d25460d154610970919061244b565b60ca5584516109869060d3906020880190611d91565b5060d480546001600160a01b0319166001600160a01b038416179055601460d55580156109b9576000805461ff00191690555b5050505050505050565b6097546001600160a01b03163314610a1d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610573565b610a27600061164e565b565b610a31611e15565b600060cf5483610a41919061246a565b9050604051806040016040528060d15483610a5c9190612503565b815260200160d15483610a6f9190612437565b90529392505050565b60606066805461047b906124ad565b610a923383836116a0565b5050565b60008111610ade5760405162461bcd60e51b81526020600482015260156024820152744e6f6e20706f736974697665207175616e7469747960581b6044820152606401610573565b60ca54811115610b275760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b6044820152606401610573565b60005b81811015610c12576000610b3f60ca5461176f565b60cf54610b4c919061241f565b60d054600082815260cc60205260409020549192501415610b7957600081815260cc602052604090208190555b6000600160ca5460cf54610b8d919061241f565b610b97919061246a565b60d054600082815260cc60205260409020549192501415610bc457600081815260cc602052604090208190555b600082815260cc60209081526040808320805485855282852080549092559081905580845260cd909252909120829055610bfe3382611784565b50505080610c0b906124e8565b9050610b2a565b5060c9546001600160a01b03166323b872dd333060ce5485610c34919061244b565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b158015610c8357600080fd5b505af1158015610c97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9291906120e9565b610cc53383611334565b610ce15760405162461bcd60e51b81526004016105739061239d565b610ced848484846117aa565b50505050565b60008060ca544342610d023390565b604051602001610d2a919060609190911b6bffffffffffffffffffffffff1916815260140190565b6040516020818303038152906040528051906020012060001c610d4d9190612437565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610d929190612437565b610d9c444261241f565b610da6919061241f565b610db0919061241f565b610dba919061241f565b610dc4919061241f565b610dce919061241f565b604051602001610de091815260200190565b60408051601f19818403018152919052805160209091012092915050565b6000818152606760205260409020546060906001600160a01b0316610e7d5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610573565b6000610e87611828565b90506000610e9484610a29565b90506000825111610eb45760405180602001604052806000815250610ef3565b81610ec68260005b6020020151611837565b610ed1836001610ebc565b604051602001610ee39392919061223a565b6040516020818303038152906040525b949350505050565b60d38054610f08906124ad565b80601f0160208091040260200160405190810160405280929190818152602001828054610f34906124ad565b8015610f815780601f10610f5657610100808354040283529160200191610f81565b820191906000526020600020905b815481529060010190602001808311610f6457829003601f168201915b505050505081565b600060cf5482610466919061246a565b6097546001600160a01b03163314610ff35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610573565b6001600160a01b0381166110585760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610573565b6107538161164e565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611096826107a2565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60d0548114156111135760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b6044820152606401610573565b3361111d826107a2565b6001600160a01b0316146111695760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b6044820152606401610573565b600081815260cd602052604081205460ca5460cf5491929161118b919061241f565b600081815260cc60208181526040808420805489865260cd845282862087905580865282862089905588865293909252832082905583835286905560ca80549394509092600192906111de90849061241f565b90915550610ced905084611951565b6000606460d554836111ff919061244b565b6112099190612437565b90506000611217828461246a565b60c95460d45460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101869052929350169063a9059cbb90604401602060405180830381600087803b15801561126957600080fd5b505af115801561127d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a191906120e9565b5060c9546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b1580156112fc57600080fd5b505af1158015611310573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ced91906120e9565b6000818152606760205260408120546001600160a01b03166113ad5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610573565b60006113b8836107a2565b9050806001600160a01b0316846001600160a01b031614806113f35750836001600160a01b03166113e8846104fe565b6001600160a01b0316145b80610ef357506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff16610ef3565b826001600160a01b031661143a826107a2565b6001600160a01b0316146114a25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610573565b6001600160a01b0382166115045760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610573565b61150f600082611061565b6001600160a01b038316600090815260686020526040812080546001929061153890849061246a565b90915550506001600160a01b038216600090815260686020526040812080546001929061156690849061241f565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600054610100900460ff16806115e0575060005460ff16155b6115fc5760405162461bcd60e51b81526004016105739061234f565b600054610100900460ff1615801561161e576000805461ffff19166101011790555b6116266119ec565b61162e6119ec565b6116388383611a57565b80156106a9576000805461ff0019169055505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156117025760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610573565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60008161177a610cf3565b6104669190612503565b61178e8282611aec565b600160ca60008282546117a1919061246a565b90915550505050565b6117b5848484611427565b6117c184848484611c2e565b610ced5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610573565b606060d3805461047b906124ad565b60608161185b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611885578061186f816124e8565b915061187e9050600a83612437565b915061185f565b60008167ffffffffffffffff8111156118ae57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156118d8576020820181803683370190505b5090505b8415610ef3576118ed60018361246a565b91506118fa600a86612503565b61190590603061241f565b60f81b81838151811061192857634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535061194a600a86612437565b94506118dc565b600061195c826107a2565b9050611969600083611061565b6001600160a01b038116600090815260686020526040812080546001929061199290849061246a565b909155505060008281526067602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600054610100900460ff1680611a05575060005460ff16155b611a215760405162461bcd60e51b81526004016105739061234f565b600054610100900460ff16158015611a43576000805461ffff19166101011790555b8015610753576000805461ff001916905550565b600054610100900460ff1680611a70575060005460ff16155b611a8c5760405162461bcd60e51b81526004016105739061234f565b600054610100900460ff16158015611aae576000805461ffff19166101011790555b8251611ac1906065906020860190611d91565b508151611ad5906066906020850190611d91565b5080156106a9576000805461ff0019169055505050565b6001600160a01b038216611b425760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610573565b6000818152606760205260409020546001600160a01b031615611ba75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610573565b6001600160a01b0382166000908152606860205260408120805460019290611bd090849061241f565b909155505060008181526067602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b15611d8657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611c729033908990889088906004016122ce565b602060405180830381600087803b158015611c8c57600080fd5b505af1925050508015611cbc575060408051601f3d908101601f19168201909252611cb991810190612121565b60015b611d6c573d808015611cea576040519150601f19603f3d011682016040523d82523d6000602084013e611cef565b606091505b508051611d645760405162461bcd60e51b815260206004820152603860248201527f455243373231437573746f6d3a207472616e7366657220746f206e6f6e20455260448201527f43373231526563656976657220696d706c656d656e74657200000000000000006064820152608401610573565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ef3565b506001949350505050565b828054611d9d906124ad565b90600052602060002090601f016020900481019282611dbf5760008555611e05565b82601f10611dd857805160ff1916838001178555611e05565b82800160010185558215611e05579182015b82811115611e05578251825591602001919060010190611dea565b50611e11929150611e33565b5090565b60405180604001604052806002906020820280368337509192915050565b5b80821115611e115760008155600101611e34565b600067ffffffffffffffff831115611e6257611e62612543565b611e75601f8401601f19166020016123ee565b9050828152838383011115611e8957600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b0381168114611eb757600080fd5b919050565b600082601f830112611ecc578081fd5b611edb83833560208501611e48565b9392505050565b600060208284031215611ef3578081fd5b611edb82611ea0565b60008060408385031215611f0e578081fd5b611f1783611ea0565b9150611f2560208401611ea0565b90509250929050565b600080600060608486031215611f42578081fd5b611f4b84611ea0565b9250611f5960208501611ea0565b9150604084013590509250925092565b60008060008060808587031215611f7e578081fd5b611f8785611ea0565b9350611f9560208601611ea0565b925060408501359150606085013567ffffffffffffffff811115611fb7578182fd5b8501601f81018713611fc7578182fd5b611fd687823560208401611e48565b91505092959194509250565b60008060408385031215611ff4578182fd5b611ffd83611ea0565b9150602083013561200d81612559565b809150509250929050565b6000806040838503121561202a578182fd5b61203383611ea0565b946020939093013593505050565b60006020808385031215612053578182fd5b823567ffffffffffffffff8082111561206a578384fd5b818501915085601f83011261207d578384fd5b81358181111561208f5761208f612543565b8060051b91506120a08483016123ee565b8181528481019084860184860187018a10156120ba578788fd5b8795505b838610156120dc5780358352600195909501949186019186016120be565b5098975050505050505050565b6000602082840312156120fa578081fd5b8151611edb81612559565b600060208284031215612116578081fd5b8135611edb81612567565b600060208284031215612132578081fd5b8151611edb81612567565b600080600080600080600060e0888a031215612157578283fd5b873567ffffffffffffffff8082111561216e578485fd5b61217a8b838c01611ebc565b985060208a013591508082111561218f578485fd5b61219b8b838c01611ebc565b97506121a960408b01611ea0565b965060608a01359150808211156121be578485fd5b506121cb8a828b01611ebc565b9450506080880135925060a088013591506121e860c08901611ea0565b905092959891949750929550565b600060208284031215612207578081fd5b5035919050565b60008151808452612226816020860160208601612481565b601f01601f19169290920160200192915050565b6000845161224c818460208901612481565b676d6574616461746160c01b908301908152602f60f81b6008820152686d657461646174612d60b81b6009820152845161228d816012840160208901612481565b605f60f81b6012929091019182015283516122af816013840160208801612481565b64173539b7b760d91b6013929091019182015260180195945050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906123019083018461220e565b9695505050505050565b60408101818360005b6002811015612333578151835260209283019290910190600101612314565b50505092915050565b602081526000611edb602083018461220e565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561241757612417612543565b604052919050565b6000821982111561243257612432612517565b500190565b6000826124465761244661252d565b500490565b600081600019048311821515161561246557612465612517565b500290565b60008282101561247c5761247c612517565b500390565b60005b8381101561249c578181015183820152602001612484565b83811115610ced5750506000910152565b600181811c908216806124c157607f821691505b602082108114156124e257634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156124fc576124fc612517565b5060010190565b6000826125125761251261252d565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461075357600080fd5b6001600160e01b03198116811461075357600080fdfea2646970667358221220575ba1b52c2149e63809a1225dbae34f89ee2dfd7bb3a7b8116b8c0140b6f01f64736f6c63430008040033";

type PXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PX__factory extends ContractFactory {
  constructor(...args: PXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PX> {
    return super.deploy(overrides || {}) as Promise<PX>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PX {
    return super.attach(address) as PX;
  }
  connect(signer: Signer): PX__factory {
    return super.connect(signer) as PX__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXInterface {
    return new utils.Interface(_abi) as PXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PX {
    return new Contract(address, _abi, signerOrProvider) as PX;
  }
}
