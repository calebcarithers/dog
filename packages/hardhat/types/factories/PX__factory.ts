/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PX, PXInterface } from "../PX";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "DOG20Address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOG_TO_PIXEL_SATOSHIS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INDEX_OFFSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAGIC_NULL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    name: "burnPupper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fuelPuppyDispenser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPupper",
    outputs: [
      {
        internalType: "uint256",
        name: "pupper",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mintPuppers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppersRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randYish",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxRand",
        type: "uint256",
      },
    ],
    name: "randYishInRange",
    outputs: [
      {
        internalType: "uint256",
        name: "ret",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405264014941658b600b556001600c556000600d553480156200002457600080fd5b506040516200221338038062002213833981016040819052620000479162000295565b825183908390620000609060009060208501906200013c565b508051620000769060019060208401906200013c565b505050620000936200008d620000e660201b60201c565b620000ea565b6001600160a01b038116620000a757600080fd5b6001600160601b0319606082901b16608052600a80620000c881806200031e565b600855620000d781836200031e565b600755506200039d9350505050565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200014a906200034a565b90600052602060002090601f0160209004810192826200016e5760008555620001b9565b82601f106200018957805160ff1916838001178555620001b9565b82800160010185558215620001b9579182015b82811115620001b95782518255916020019190600101906200019c565b50620001c7929150620001cb565b5090565b5b80821115620001c75760008155600101620001cc565b600082601f830112620001f3578081fd5b81516001600160401b038082111562000210576200021062000387565b604051601f8301601f19908116603f011681019082821181831017156200023b576200023b62000387565b8160405283815260209250868385880101111562000257578485fd5b8491505b838210156200027a57858201830151818301840152908201906200025b565b838211156200028b57848385830101525b9695505050505050565b600080600060608486031215620002aa578283fd5b83516001600160401b0380821115620002c1578485fd5b620002cf87838801620001e2565b94506020860151915080821115620002e5578384fd5b50620002f486828701620001e2565b604086015190935090506001600160a01b038116811462000313578182fd5b809150509250925092565b60008160001904831182151516156200034557634e487b7160e01b81526011600452602481fd5b500290565b600181811c908216806200035f57607f821691505b602082108114156200038157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c611e49620003ca6000396000818161084801528181610d7c0152610e560152611e496000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80637e5c067f116100f9578063b88d4fde11610097578063d85d95ef11610071578063d85d95ef1461034d578063e25aee2f14610355578063e985e9c514610368578063f2fde38b146103a457600080fd5b8063b88d4fde1461031f578063bcb00f2914610332578063c87b56dd1461033a57600080fd5b806397b874f7116100d357806397b874f7146102f1578063a035386d146102fa578063a22cb46514610303578063b43ff0f01461031657600080fd5b80637e5c067f146102c55780638da5cb5b146102d857806395d89b41146102e957600080fd5b806323b872dd116101665780636352211e116101405780636352211e146102845780636d677a741461029757806370a08231146102aa578063715018a6146102bd57600080fd5b806323b872dd1461024b5780632d99e94f1461025e57806342842e0e1461027157600080fd5b806301ffc9a7146101ae578063055fa0d5146101d657806306fdde03146101ed578063081812fc14610202578063095ea7b31461022d57806318160ddd14610242575b600080fd5b6101c16101bc366004611ae2565b6103b7565b60405190151581526020015b60405180910390f35b6101df60075481565b6040519081526020016101cd565b6101f5610409565b6040516101cd9190611bca565b610215610210366004611b1a565b61049b565b6040516001600160a01b0390911681526020016101cd565b61024061023b366004611a9d565b610535565b005b6101df60085481565b610240610259366004611957565b61064b565b6101df61026c366004611b1a565b61067c565b61024061027f366004611957565b610691565b610215610292366004611b1a565b6106ac565b6102406102a5366004611b1a565b610723565b6101df6102b836600461190b565b6108d3565b61024061095a565b6102406102d3366004611a9d565b610990565b6006546001600160a01b0316610215565b6101f56109de565b6101df600d5481565b6101df600b5481565b610240610311366004611a67565b6109ed565b6101df600c5481565b61024061032d366004611992565b6109fc565b6101df610a34565b6101f5610348366004611b1a565b610b56565b6101df610c3e565b610240610363366004611b1a565b610e06565b6101c1610376366004611925565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102406103b236600461190b565b610eda565b60006001600160e01b031982166380ac58cd60e01b14806103e857506001600160e01b03198216635b5e139f60e01b145b8061040357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461041890611d43565b80601f016020809104026020016040519081016040528092919081815260200182805461044490611d43565b80156104915780601f1061046657610100808354040283529160200191610491565b820191906000526020600020905b81548152906001019060200180831161047457829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166105195760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610540826106ac565b9050806001600160a01b0316836001600160a01b031614156105ae5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610510565b336001600160a01b03821614806105ca57506105ca8133610376565b61063c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610510565b6106468383610f75565b505050565b6106553382610fe3565b6106715760405162461bcd60e51b815260040161051090611c64565b6106468383836110da565b600081610687610a34565b6104039190611d99565b610646838383604051806020016040528060008152506109fc565b6000818152600260205260408120546001600160a01b0316806104035760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610510565b600d548114156107675760405162461bcd60e51b815260206004820152600f60248201526e507570706572206973206d6167696360881b6044820152606401610510565b33610771826106ac565b6001600160a01b0316146107bd5760405162461bcd60e51b8152602060048201526013602482015272507570706572206973206e6f7420796f75727360681b6044820152606401610510565b6000818152600a6020526040812054600754600c549192916107df9190611cb5565b60008181526009602081815260408084208054898652600a845282862087905580865282862089905588865293909252832082905591839052908590559091506108288461127a565b600b5460405163a9059cbb60e01b815233600482015260248101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561089457600080fd5b505af11580156108a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cc9190611ac6565b5050505050565b60006001600160a01b03821661093e5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610510565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b031633146109845760405162461bcd60e51b815260040161051090611c2f565b61098e6000611367565b565b6006546001600160a01b031633146109ba5760405162461bcd60e51b815260040161051090611c2f565b60005b81811015610646576109cd610c3e565b506109d781611d7e565b90506109bd565b60606001805461041890611d43565b6109f83383836113b9565b5050565b610a063383610fe3565b610a225760405162461bcd60e51b815260040161051090611c64565b610a2e84848484611488565b50505050565b6007546040516bffffffffffffffffffffffff193360601b1660208201526000918291439042906034016040516020818303038152906040528051906020012060001c610a819190611ccd565b6040516bffffffffffffffffffffffff194160601b166020820152459042906034016040516020818303038152906040528051906020012060001c610ac69190611ccd565b610ad04442611cb5565b610ada9190611cb5565b610ae49190611cb5565b610aee9190611cb5565b610af89190611cb5565b610b029190611cb5565b604051602001610b1491815260200190565b60408051601f1981840301815291905280516020909101209050610b3a6103e882611ccd565b610b46906103e8611ce1565b610b509082611d00565b91505090565b6000818152600260205260409020546060906001600160a01b0316610bd55760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610510565b6000610bec60408051602081019091526000815290565b90506000815111610c0c5760405180602001604052806000815250610c37565b80610c16846114bb565b604051602001610c27929190611b5e565b6040516020818303038152906040525b9392505050565b60008060075411610c885760405162461bcd60e51b81526020600482015260146024820152734e6f20707570706572732072656d61696e696e6760601b6044820152606401610510565b6000610c9560075461067c565b600c54610ca29190611cb5565b600d546000828152600960205260409020549192501415610ccf5760008181526009602052604090208190555b60006001600754600c54610ce39190611cb5565b610ced9190611d00565b600d546000828152600960205260409020549192501415610d1a5760008181526009602052604090208190555b60008281526009602090815260408083208054858552828520805490925590819055808452600a9092529091208290559250610d5633846115d5565b600b546040516323b872dd60e01b815233600482015230602482015260448101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610dc857600080fd5b505af1158015610ddc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e009190611ac6565b50505090565b6006546001600160a01b03163314610e305760405162461bcd60e51b815260040161051090611c2f565b600b546040516323b872dd60e01b815233600482015230602482015260448101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610ea257600080fd5b505af1158015610eb6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f89190611ac6565b6006546001600160a01b03163314610f045760405162461bcd60e51b815260040161051090611c2f565b6001600160a01b038116610f695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610510565b610f7281611367565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610faa826106ac565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661105c5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610510565b6000611067836106ac565b9050806001600160a01b0316846001600160a01b031614806110a25750836001600160a01b03166110978461049b565b6001600160a01b0316145b806110d257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166110ed826106ac565b6001600160a01b0316146111555760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610510565b6001600160a01b0382166111b75760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610510565b6111c2600082610f75565b6001600160a01b03831660009081526003602052604081208054600192906111eb908490611d00565b90915550506001600160a01b0382166000908152600360205260408120805460019290611219908490611cb5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611285826106ac565b9050611292600083610f75565b6112c16040518060400160405280600e81526020016d313ab93734b73390383ab83832b960911b815250611739565b6112ca8261177c565b6001600160a01b03811660009081526003602052604081208054600192906112f3908490611d00565b9250508190555060016007600082825461130d9190611cb5565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316141561141b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610510565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6114938484846110da565b61149f848484846117c1565b610a2e5760405162461bcd60e51b815260040161051090611bdd565b6060816114df5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561150957806114f381611d7e565b91506115029050600a83611ccd565b91506114e3565b60008167ffffffffffffffff81111561153257634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561155c576020820181803683370190505b5090505b84156110d257611571600183611d00565b915061157e600a86611d99565b611589906030611cb5565b60f81b8183815181106115ac57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506115ce600a86611ccd565b9450611560565b6001600160a01b03821661162b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610510565b6000818152600260205260409020546001600160a01b0316156116905760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610510565b6001600160a01b03821660009081526003602052604081208054600192906116b9908490611cb5565b9091555050600081815260026020526040812080546001600160a01b0319166001600160a01b03851617905560078054600192906116f8908490611d00565b909155505060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610f728160405160240161174d9190611bca565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526118ce565b610f728160405160240161179291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b1790526118ce565b60006001600160a01b0384163b156118c357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611805903390899088908890600401611b8d565b602060405180830381600087803b15801561181f57600080fd5b505af192505050801561184f575060408051601f3d908101601f1916820190925261184c91810190611afe565b60015b6118a9573d80801561187d576040519150601f19603f3d011682016040523d82523d6000602084013e611882565b606091505b5080516118a15760405162461bcd60e51b815260040161051090611bdd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506110d2565b506001949350505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b038116811461190657600080fd5b919050565b60006020828403121561191c578081fd5b610c37826118ef565b60008060408385031215611937578081fd5b611940836118ef565b915061194e602084016118ef565b90509250929050565b60008060006060848603121561196b578081fd5b611974846118ef565b9250611982602085016118ef565b9150604084013590509250925092565b600080600080608085870312156119a7578081fd5b6119b0856118ef565b93506119be602086016118ef565b925060408501359150606085013567ffffffffffffffff808211156119e1578283fd5b818701915087601f8301126119f4578283fd5b813581811115611a0657611a06611dd9565b604051601f8201601f19908116603f01168101908382118183101715611a2e57611a2e611dd9565b816040528281528a6020848701011115611a46578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215611a79578182fd5b611a82836118ef565b91506020830135611a9281611def565b809150509250929050565b60008060408385031215611aaf578182fd5b611ab8836118ef565b946020939093013593505050565b600060208284031215611ad7578081fd5b8151610c3781611def565b600060208284031215611af3578081fd5b8135610c3781611dfd565b600060208284031215611b0f578081fd5b8151610c3781611dfd565b600060208284031215611b2b578081fd5b5035919050565b60008151808452611b4a816020860160208601611d17565b601f01601f19169290920160200192915050565b60008351611b70818460208801611d17565b835190830190611b84818360208801611d17565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611bc090830184611b32565b9695505050505050565b602081526000610c376020830184611b32565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611cc857611cc8611dad565b500190565b600082611cdc57611cdc611dc3565b500490565b6000816000190483118215151615611cfb57611cfb611dad565b500290565b600082821015611d1257611d12611dad565b500390565b60005b83811015611d32578181015183820152602001611d1a565b83811115610a2e5750506000910152565b600181811c90821680611d5757607f821691505b60208210811415611d7857634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611d9257611d92611dad565b5060010190565b600082611da857611da8611dc3565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8015158114610f7257600080fd5b6001600160e01b031981168114610f7257600080fdfea26469706673582212200649bc5a40c9b630879071dd5f20da981c99442cf90f72df7a0bd33308c7bf4c64736f6c63430008040033";

type PXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PX__factory extends ContractFactory {
  constructor(...args: PXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    DOG20Address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PX> {
    return super.deploy(
      name_,
      symbol_,
      DOG20Address,
      overrides || {}
    ) as Promise<PX>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    DOG20Address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      DOG20Address,
      overrides || {}
    );
  }
  attach(address: string): PX {
    return super.attach(address) as PX;
  }
  connect(signer: Signer): PX__factory {
    return super.connect(signer) as PX__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PXInterface {
    return new utils.Interface(_abi) as PXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PX {
    return new Contract(address, _abi, signerOrProvider) as PX;
  }
}
